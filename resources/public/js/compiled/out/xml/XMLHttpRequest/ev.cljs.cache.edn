{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{load}, :name xml.XMLHttpRequest.ev, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {abort {:name xml.XMLHttpRequest.ev/abort, :file "src/xml/XMLHttpRequest/ev.cljs", :line 5, :column 1, :end-line 5, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 5, :column 6, :end-line 5, :end-column 11}, :doc "Event.\n\n  The abort event is fired when a request has been aborted, for\n  because the program called `xml.XMLHttpRequest.abort()`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/abort_event`", :tag string}, error {:name xml.XMLHttpRequest.ev/error, :file "src/xml/XMLHttpRequest/ev.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 15, :column 6, :end-line 15, :end-column 11}, :doc "Event.\n\n  The error event is fired when the request encountered an error.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/error_event`", :tag string}, load {:name xml.XMLHttpRequest.ev/load, :file "src/xml/XMLHttpRequest/ev.cljs", :line 24, :column 1, :end-line 24, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 24, :column 6, :end-line 24, :end-column 10}, :doc "Event.\n\n  The load event is fired when an `xml.XMLHttpRequest` transaction\n  successfully.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/load_event`", :tag string}, loadend {:name xml.XMLHttpRequest.ev/loadend, :file "src/xml/XMLHttpRequest/ev.cljs", :line 34, :column 1, :end-line 34, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 34, :column 6, :end-line 34, :end-column 13}, :doc "Event.\n\n  The loadend event is fired when a request has completed, whether\n  (after `web.load`) or unsuccessfully (after `web.abort` or `web.error`).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadend_event`", :tag string}, loadstart {:name xml.XMLHttpRequest.ev/loadstart, :file "src/xml/XMLHttpRequest/ev.cljs", :line 44, :column 1, :end-line 44, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 44, :column 6, :end-line 44, :end-column 15}, :doc "Event.\n\n  The loadstart event is fired when a request has started to load\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/loadstart_event`", :tag string}, progress {:name xml.XMLHttpRequest.ev/progress, :file "src/xml/XMLHttpRequest/ev.cljs", :line 53, :column 1, :end-line 53, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 53, :column 6, :end-line 53, :end-column 14}, :doc "Event.\n\n  The progress event is fired periodically when a request receives\n  data.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/progress_event`", :tag string}, timeout {:name xml.XMLHttpRequest.ev/timeout, :file "src/xml/XMLHttpRequest/ev.cljs", :line 63, :column 1, :end-line 63, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequest/ev.cljs", :line 63, :column 6, :end-line 63, :end-column 13}, :doc "Event.\n\n  The timeout event is fired when progression is terminated due\n  preset time expiring.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout_event`", :tag string}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "XMLHttpRequest Events."}
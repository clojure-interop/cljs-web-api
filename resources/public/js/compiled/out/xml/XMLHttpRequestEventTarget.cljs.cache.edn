{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name xml.XMLHttpRequestEventTarget, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-onprogress! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 118, :column 7, :end-line 118, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onprogress is the function called\n  with information when an `xml.XMLHttpRequest` before success\n  .\n\n  `XMLHttpRequest.onprogress = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onprogress`"}, :name xml.XMLHttpRequestEventTarget/set-onprogress!, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onprogress is the function called\n  with information when an `xml.XMLHttpRequest` before success\n  .\n\n  `XMLHttpRequest.onprogress = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onprogress`"}, onloadstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 81, :column 7, :end-line 81, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onloadstart is the function called\n  an `xml.XMLHttpRequest` transaction starts transferring data.\n\n  `XMLHttpRequest.onloadstart = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onloadstart`"}, :name xml.XMLHttpRequestEventTarget/onloadstart, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onloadstart is the function called\n  an `xml.XMLHttpRequest` transaction starts transferring data.\n\n  `XMLHttpRequest.onloadstart = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onloadstart`"}, set-onloadstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 93, :column 7, :end-line 93, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onloadstart is the function called\n  an `xml.XMLHttpRequest` transaction starts transferring data.\n\n  `XMLHttpRequest.onloadstart = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onloadstart`"}, :name xml.XMLHttpRequestEventTarget/set-onloadstart!, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onloadstart is the function called\n  an `xml.XMLHttpRequest` transaction starts transferring data.\n\n  `XMLHttpRequest.onloadstart = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onloadstart`"}, set-onabort! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onabort is the function called\n  an `xml.XMLHttpRequest` transaction is aborted, such as when\n  `xml.XMLHttpRequest.abort()` function is called.\n\n  `XMLHttpRequest.onabort = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onabort`"}, :name xml.XMLHttpRequestEventTarget/set-onabort!, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onabort is the function called\n  an `xml.XMLHttpRequest` transaction is aborted, such as when\n  `xml.XMLHttpRequest.abort()` function is called.\n\n  `XMLHttpRequest.onabort = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onabort`"}, onprogress {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 105, :column 7, :end-line 105, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onprogress is the function called\n  with information when an `xml.XMLHttpRequest` before success\n  .\n\n  `XMLHttpRequest.onprogress = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onprogress`"}, :name xml.XMLHttpRequestEventTarget/onprogress, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onprogress is the function called\n  with information when an `xml.XMLHttpRequest` before success\n  .\n\n  `XMLHttpRequest.onprogress = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onprogress`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 45, :column 7, :end-line 45, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onerror is the function called\n  an `xml.XMLHttpRequest` transaction fails due to an error.\n\n  `XMLHttpRequest.onerror = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onerror`"}, :name xml.XMLHttpRequestEventTarget/set-onerror!, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onerror is the function called\n  an `xml.XMLHttpRequest` transaction fails due to an error.\n\n  `XMLHttpRequest.onerror = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onerror`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 33, :column 7, :end-line 33, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onerror is the function called\n  an `xml.XMLHttpRequest` transaction fails due to an error.\n\n  `XMLHttpRequest.onerror = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onerror`"}, :name xml.XMLHttpRequestEventTarget/onerror, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onerror is the function called\n  an `xml.XMLHttpRequest` transaction fails due to an error.\n\n  `XMLHttpRequest.onerror = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onerror`"}, set-onload! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onload is the function called when\n  `xml.XMLHttpRequest` transaction completes successfully.\n\n  `XMLHttpRequest.onload = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onload`"}, :name xml.XMLHttpRequestEventTarget/set-onload!, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onload is the function called when\n  `xml.XMLHttpRequest` transaction completes successfully.\n\n  `XMLHttpRequest.onload = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onload`"}, onload {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onload is the function called when\n  `xml.XMLHttpRequest` transaction completes successfully.\n\n  `XMLHttpRequest.onload = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onload`"}, :name xml.XMLHttpRequestEventTarget/onload, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onload is the function called when\n  `xml.XMLHttpRequest` transaction completes successfully.\n\n  `XMLHttpRequest.onload = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onload`"}, onabort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/xml/XMLHttpRequestEventTarget.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onabort is the function called\n  an `xml.XMLHttpRequest` transaction is aborted, such as when\n  `xml.XMLHttpRequest.abort()` function is called.\n\n  `XMLHttpRequest.onabort = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onabort`"}, :name xml.XMLHttpRequestEventTarget/onabort, :variadic false, :file "src/xml/XMLHttpRequestEventTarget.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The XMLHttpRequestEventTarget.onabort is the function called\n  an `xml.XMLHttpRequest` transaction is aborted, such as when\n  `xml.XMLHttpRequest.abort()` function is called.\n\n  `XMLHttpRequest.onabort = callback;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onabort`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "XMLHttpRequestEventTarget is the interface that describes the\n  handlers you can implement in an object that will handle events\n  an `xml.XMLHttpRequest`."}
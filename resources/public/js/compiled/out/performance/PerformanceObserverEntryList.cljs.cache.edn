{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name performance.PerformanceObserverEntryList, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceObserverEntryList.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([this & args])), :doc "Method.\n\n  The getEntries() method of the `performance.PerformanceObserverEntryList`\n  returns a list of explicitly observed performance entry objects\n  a given filter. The list's members are determined by the set\n  entry types specified in the call to the `web.observe()` method.\n  list is available in the observer's callback function (as the\n  parameter in the callback).\n\n  `General syntax:\n\n\n\n  entries = list.getEntries();\n  entries = list.getEntries(PerformanceEntryFilterOptions);\n\n  Specific usage:\n\n\n\n  entries = list.getEntries({name: \\\"entry_name\\\", entryType: \\\"mark\\\"});`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name performance.PerformanceObserverEntryList/get-entries, :variadic true, :file "src/performance/PerformanceObserverEntryList.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The getEntries() method of the `performance.PerformanceObserverEntryList`\n  returns a list of explicitly observed performance entry objects\n  a given filter. The list's members are determined by the set\n  entry types specified in the call to the `web.observe()` method.\n  list is available in the observer's callback function (as the\n  parameter in the callback).\n\n  `General syntax:\n\n\n\n  entries = list.getEntries();\n  entries = list.getEntries(PerformanceEntryFilterOptions);\n\n  Specific usage:\n\n\n\n  entries = list.getEntries({name: \\\"entry_name\\\", entryType: \\\"mark\\\"});`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserverEntryList/getEntries`"}, get-entries-by-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceObserverEntryList.cljs", :line 33, :column 7, :end-line 33, :end-column 26, :arglists (quote ([this name type])), :doc "Method.\n\n  The getEntriesByName() method of the `performance.PerformanceObserverEntryList`\n  returns a list of explicitly observed performance entry objects\n  a given `web.name` and `web.entry type`. The list's members are\n  by the set of entry types specified in the call to the `web.observe()`\n  The list is available in the observer's callback function (as\n  first parameter in the callback).\n\n  `entries = list.getEntriesByName(name, type);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName`"}, :name performance.PerformanceObserverEntryList/get-entries-by-name, :variadic false, :file "src/performance/PerformanceObserverEntryList.cljs", :end-column 26, :method-params ([this name type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this name type])), :doc "Method.\n\n  The getEntriesByName() method of the `performance.PerformanceObserverEntryList`\n  returns a list of explicitly observed performance entry objects\n  a given `web.name` and `web.entry type`. The list's members are\n  by the set of entry types specified in the call to the `web.observe()`\n  The list is available in the observer's callback function (as\n  first parameter in the callback).\n\n  `entries = list.getEntriesByName(name, type);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByName`"}, get-entries-by-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceObserverEntryList.cljs", :line 49, :column 7, :end-line 49, :end-column 26, :arglists (quote ([this type])), :doc "Method.\n\n  The getEntriesByType() method of the `performance.PerformanceObserverEntryList`\n  a list of explicitly observed performance entry objects for a\n  performance entry type. The list's members are determined by\n  set of entry types specified in the call to the `web.observe()`\n  The list is available in the observer's callback function (as\n  first parameter in the callback).\n\n  `entries = list.getEntriesByType(type);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByType`"}, :name performance.PerformanceObserverEntryList/get-entries-by-type, :variadic false, :file "src/performance/PerformanceObserverEntryList.cljs", :end-column 26, :method-params ([this type]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this type])), :doc "Method.\n\n  The getEntriesByType() method of the `performance.PerformanceObserverEntryList`\n  a list of explicitly observed performance entry objects for a\n  performance entry type. The list's members are determined by\n  set of entry types specified in the call to the `web.observe()`\n  The list is available in the observer's callback function (as\n  first parameter in the callback).\n\n  `entries = list.getEntriesByType(type);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserverEntryList/getEntriesByType`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PerformanceObserverEntryList interface is a list of peformance\n  that were explicitly observed via the `web.observe()` method."}
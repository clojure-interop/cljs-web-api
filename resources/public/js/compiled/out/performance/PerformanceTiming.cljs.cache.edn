{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name performance.PerformanceTiming, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {dom-loading {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 148, :column 7, :end-line 148, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domLoading read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the parser started its work, that is when its\n  changes to 'loading' and the corresponding readystatechange event\n  thrown.\n\n  `time = performanceTiming.domLoading;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domLoading`"}, :name performance.PerformanceTiming/dom-loading, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domLoading read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the parser started its work, that is when its\n  changes to 'loading' and the corresponding readystatechange event\n  thrown.\n\n  `time = performanceTiming.domLoading;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domLoading`"}, redirect-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 252, :column 7, :end-line 252, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.redirectStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, the first HTTP redirect starts. If there is no\n  or if one of the redirect is not of the same origin, the value\n  is 0.\n\n  `time = performanceTiming.redirectStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/redirectStart`"}, :name performance.PerformanceTiming/redirect-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.redirectStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, the first HTTP redirect starts. If there is no\n  or if one of the redirect is not of the same origin, the value\n  is 0.\n\n  `time = performanceTiming.redirectStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/redirectStart`"}, unload-event-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 341, :column 7, :end-line 341, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.unloadEventStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, the unload event has been thrown. If there is\n  previous document, or if the previous document, or one of the\n  redirects, is not of the same origin, the value returned is 0.\n\n  `time = performanceTiming.unloadEventStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/unloadEventStart`"}, :name performance.PerformanceTiming/unload-event-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.unloadEventStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, the unload event has been thrown. If there is\n  previous document, or if the previous document, or one of the\n  redirects, is not of the same origin, the value returned is 0.\n\n  `time = performanceTiming.unloadEventStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/unloadEventStart`"}, set-domain-lookup-end! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 59, :column 7, :end-line 59, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The legacy PerformanceTiming.domainLookupEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the domain lookup is finished. If a persistent\n  is used, or the information is stored in a cache or a local resource,\n  value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.domainLookupEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domainLookupEnd`"}, :name performance.PerformanceTiming/set-domain-lookup-end!, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The legacy PerformanceTiming.domainLookupEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the domain lookup is finished. If a persistent\n  is used, or the information is stored in a cache or a local resource,\n  value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.domainLookupEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domainLookupEnd`"}, domain-lookup-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 74, :column 7, :end-line 74, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domainLookupStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the domain lookup starts. If a persistent\n  is used, or the information is stored in a cache or a local resource,\n  value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.domainLookupStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domainLookupStart`"}, :name performance.PerformanceTiming/domain-lookup-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domainLookupStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the domain lookup starts. If a persistent\n  is used, or the information is stored in a cache or a local resource,\n  value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.domainLookupStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domainLookupStart`"}, dom-content-loaded-event-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 104, :column 7, :end-line 104, :end-column 35, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domContentLoadedEventEnd read-only\n  returns an unsigned long long representing the moment, in milliseconds\n  the UNIX epoch, right after all the scripts that need to be executed\n  soon as possible, in order or not, has been executed.\n\n  `time = performanceTiming.domContentLoadedEventEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domContentLoadedEventEnd`"}, :name performance.PerformanceTiming/dom-content-loaded-event-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 35, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domContentLoadedEventEnd read-only\n  returns an unsigned long long representing the moment, in milliseconds\n  the UNIX epoch, right after all the scripts that need to be executed\n  soon as possible, in order or not, has been executed.\n\n  `time = performanceTiming.domContentLoadedEventEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domContentLoadedEventEnd`"}, secure-connection-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 312, :column 7, :end-line 312, :end-column 30, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.secureConnectionStart read-only\n  returns an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the secure connection handshake starts.\n  no such connection is requested, it returns 0.\n\n  `time = performanceTiming.secureConnectionStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/secureConnectionStart`"}, :name performance.PerformanceTiming/secure-connection-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 30, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 312, :end-line 312, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.secureConnectionStart read-only\n  returns an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the secure connection handshake starts.\n  no such connection is requested, it returns 0.\n\n  `time = performanceTiming.secureConnectionStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/secureConnectionStart`"}, fetch-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 178, :column 7, :end-line 178, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.fetchStart read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, the browser is ready to fetch the document using\n  HTTP request. This moment is before the check to any application\n\n  `time = performance.timing.fetchStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/fetchStart`"}, :name performance.PerformanceTiming/fetch-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.fetchStart read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, the browser is ready to fetch the document using\n  HTTP request. This moment is before the check to any application\n\n  `time = performance.timing.fetchStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/fetchStart`"}, load-event-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 207, :column 7, :end-line 207, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.loadEventStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the load event was sent for the current\n  If this event has not yet been sent, it returns 0.\n\n  `time = performanceTiming.loadEventStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/loadEventStart`"}, :name performance.PerformanceTiming/load-event-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.loadEventStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the load event was sent for the current\n  If this event has not yet been sent, it returns 0.\n\n  `time = performanceTiming.loadEventStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/loadEventStart`"}, dom-complete {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 89, :column 7, :end-line 89, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domComplete read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the parser finished its work on the main document,\n  is when its `web.Document.readyState` changes to 'complete' and\n  corresponding readystatechange event is thrown.\n\n  `time = performanceTiming.domComplete;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domComplete`"}, :name performance.PerformanceTiming/dom-complete, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domComplete read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the parser finished its work on the main document,\n  is when its `web.Document.readyState` changes to 'complete' and\n  corresponding readystatechange event is thrown.\n\n  `time = performanceTiming.domComplete;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domComplete`"}, connect-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 27, :column 7, :end-line 27, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.connectStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the request to open a connection is sent\n  the network. If the transport layer reports an error and the\n  establishment is started again, the last connection establisment\n  time is given. If a persistent connection is used, the value\n  be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.connectStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/connectStart`"}, :name performance.PerformanceTiming/connect-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.connectStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the request to open a connection is sent\n  the network. If the transport layer reports an error and the\n  establishment is started again, the last connection establisment\n  time is given. If a persistent connection is used, the value\n  be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.connectStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/connectStart`"}, response-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 298, :column 7, :end-line 298, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.responseStart read-only property\n  an unsigned long long representing the moment in time (in milliseconds\n  the UNIX epoch) when the browser received the first byte of the\n  from the server, cache, or local resource.\n\n  `time = performanceTiming.responseStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseStart`"}, :name performance.PerformanceTiming/response-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.responseStart read-only property\n  an unsigned long long representing the moment in time (in milliseconds\n  the UNIX epoch) when the browser received the first byte of the\n  from the server, cache, or local resource.\n\n  `time = performanceTiming.responseStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseStart`"}, request-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 267, :column 7, :end-line 267, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.requestStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the browser sent the request to obtain the\n  document, from the server or from a cache. If the transport layer\n  after the start of the request and the connection is reopened,\n  property will be set to the time corresponding to the new request.\n\n  `time = performanceTiming.requestStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/requestStart`"}, :name performance.PerformanceTiming/request-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.requestStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the browser sent the request to obtain the\n  document, from the server or from a cache. If the transport layer\n  after the start of the request and the connection is reopened,\n  property will be set to the time corresponding to the new request.\n\n  `time = performanceTiming.requestStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/requestStart`"}, response-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 283, :column 7, :end-line 283, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.responseEnd read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the browser received the last byte of the response,\n  when the connection is closed if this happened first, from the\n  from a cache or from a local resource.\n\n  `time = performanceTiming.responseEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseEnd`"}, :name performance.PerformanceTiming/response-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.responseEnd read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the browser received the last byte of the response,\n  when the connection is closed if this happened first, from the\n  from a cache or from a local resource.\n\n  `time = performanceTiming.responseEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/responseEnd`"}, redirect-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 236, :column 7, :end-line 236, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.redirectEnd read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, the last HTTP redirect is completed, that is when\n  last byte of the HTTP response has been received. If there is\n  redirect, or if one of the redirect is not of the same origin,\n  value returned is 0.\n\n  `time = performanceTiming.redirectEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/redirectEnd`"}, :name performance.PerformanceTiming/redirect-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.redirectEnd read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, the last HTTP redirect is completed, that is when\n  last byte of the HTTP response has been received. If there is\n  redirect, or if one of the redirect is not of the same origin,\n  value returned is 0.\n\n  `time = performanceTiming.redirectEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/redirectEnd`"}, dom-interactive {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 133, :column 7, :end-line 133, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domInteractive read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the parser finished its work on the main\n  that is when its `web.Document.readyState` changes to 'interactive'\n  the corresponding readystatechange event is thrown.\n\n  `time = performanceTiming.domInteractive;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domInteractive`"}, :name performance.PerformanceTiming/dom-interactive, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domInteractive read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the parser finished its work on the main\n  that is when its `web.Document.readyState` changes to 'interactive'\n  the corresponding readystatechange event is thrown.\n\n  `time = performanceTiming.domInteractive;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domInteractive`"}, set-dom-loading! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 163, :column 7, :end-line 163, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The legacy PerformanceTiming.domLoading read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the parser started its work, that is when its\n  changes to 'loading' and the corresponding readystatechange event\n  thrown.\n\n  `time = performanceTiming.domLoading;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domLoading`"}, :name performance.PerformanceTiming/set-dom-loading!, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The legacy PerformanceTiming.domLoading read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, when the parser started its work, that is when its\n  changes to 'loading' and the corresponding readystatechange event\n  thrown.\n\n  `time = performanceTiming.domLoading;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domLoading`"}, navigation-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 221, :column 7, :end-line 221, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.navigationStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, right after the prompt for unload terminates\n  the previous document in the same browsing context. If there\n  no previous document, this value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.navigationStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/navigationStart`"}, :name performance.PerformanceTiming/navigation-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.navigationStart read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, right after the prompt for unload terminates\n  the previous document in the same browsing context. If there\n  no previous document, this value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.navigationStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/navigationStart`"}, unload-event-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 326, :column 7, :end-line 326, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.unloadEventEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, the unload event handler finishes. If there is\n  previous document, or if the previous document, or one of the\n  redirects, is not of the same origin, the value returned is 0.\n\n  `time = performanceTiming.unloadEventEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/unloadEventEnd`"}, :name performance.PerformanceTiming/unload-event-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.unloadEventEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, the unload event handler finishes. If there is\n  previous document, or if the previous document, or one of the\n  redirects, is not of the same origin, the value returned is 0.\n\n  `time = performanceTiming.unloadEventEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/unloadEventEnd`"}, connect-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 9, :column 7, :end-line 9, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.connectEnd read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, where the connection is opened network. If the transport\n  reports an error and the connection establishment is started\n  the last connection establisment end time is given. If a persistent\n  is used, the value will be the same as `performance.PerformanceTiming.fetchStart`.\n  connection is considered as opened when all secure connection\n  or SOCKS authentication, is terminated.\n\n  `time = performanceTiming.connectEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/connectEnd`"}, :name performance.PerformanceTiming/connect-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.connectEnd read-only property returns\n  unsigned long long representing the moment, in miliseconds since\n  UNIX epoch, where the connection is opened network. If the transport\n  reports an error and the connection establishment is started\n  the last connection establisment end time is given. If a persistent\n  is used, the value will be the same as `performance.PerformanceTiming.fetchStart`.\n  connection is considered as opened when all secure connection\n  or SOCKS authentication, is terminated.\n\n  `time = performanceTiming.connectEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/connectEnd`"}, domain-lookup-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 44, :column 7, :end-line 44, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domainLookupEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the domain lookup is finished. If a persistent\n  is used, or the information is stored in a cache or a local resource,\n  value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.domainLookupEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domainLookupEnd`"}, :name performance.PerformanceTiming/domain-lookup-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domainLookupEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, where the domain lookup is finished. If a persistent\n  is used, or the information is stored in a cache or a local resource,\n  value will be the same as `performance.PerformanceTiming.fetchStart`.\n\n  `time = performanceTiming.domainLookupEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domainLookupEnd`"}, load-event-end {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 192, :column 7, :end-line 192, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.loadEventEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the load event handler terminated, that\n  when the load event is completed. If this event has not yet been\n  or is not yet completed, it returns 0.\n\n  `time = performanceTiming.loadEventEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/loadEventEnd`"}, :name performance.PerformanceTiming/load-event-end, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.loadEventEnd read-only property\n  an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, when the load event handler terminated, that\n  when the load event is completed. If this event has not yet been\n  or is not yet completed, it returns 0.\n\n  `time = performanceTiming.loadEventEnd;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/loadEventEnd`"}, dom-content-loaded-event-start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceTiming.cljs", :line 118, :column 7, :end-line 118, :end-column 37, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domContentLoadedEventStart read-only\n  returns an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, right before the parser sent the DOMContentLoaded\n  that is right after all the scripts that need to be executed\n  after parsing has been executed.\n\n  `time = performanceTiming.domContentLoadedEventStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domContentLoadedEventStart`"}, :name performance.PerformanceTiming/dom-content-loaded-event-start, :variadic false, :file "src/performance/PerformanceTiming.cljs", :end-column 37, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The legacy PerformanceTiming.domContentLoadedEventStart read-only\n  returns an unsigned long long representing the moment, in miliseconds\n  the UNIX epoch, right before the parser sent the DOMContentLoaded\n  that is right after all the scripts that need to be executed\n  after parsing has been executed.\n\n  `time = performanceTiming.domContentLoadedEventStart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceTiming/domContentLoadedEventStart`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PerformanceTiming interface is a legacy interface kept for\n  compatibility and contains properties that offer performance\n  information for various events which occur during the loading\n  use of the current page. You get a PerformanceTiming object describing\n  page using the `web.window.performance.timing` property."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name}, :name performance.PerformanceEntry, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {to-json {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 10, :column 7, :end-line 10, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The toJSON() method is a serializer; it returns a JSON representation\n  the `web.performance entry` object.\n\n  `json = perfEntry.toJSON();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/toJSON`"}, :name performance.PerformanceEntry/to-json, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The toJSON() method is a serializer; it returns a JSON representation\n  the `web.performance entry` object.\n\n  `json = perfEntry.toJSON();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/toJSON`"}, duration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The duration property returns a `web.timestamp` that is the duration\n  the `web.performance entry`.\n\n  `entry.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration`"}, :name performance.PerformanceEntry/duration, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The duration property returns a `web.timestamp` that is the duration\n  the `web.performance entry`.\n\n  `entry.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration`"}, set-duration! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 34, :column 7, :end-line 34, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The duration property returns a `web.timestamp` that is the duration\n  the `web.performance entry`.\n\n  `entry.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration`"}, :name performance.PerformanceEntry/set-duration!, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The duration property returns a `web.timestamp` that is the duration\n  the `web.performance entry`.\n\n  `entry.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/duration`"}, entry-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The entryType property returns a `dom.DOMString` representing\n  type of performance metric such as, for example, \\\"mark\\\". This\n  is read only.\n\n  `var type = entry.entryType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/entryType`"}, :name performance.PerformanceEntry/entry-type, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The entryType property returns a `dom.DOMString` representing\n  type of performance metric such as, for example, \\\"mark\\\". This\n  is read only.\n\n  `var type = entry.entryType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/entryType`"}, set-entry-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 59, :column 7, :end-line 59, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The entryType property returns a `dom.DOMString` representing\n  type of performance metric such as, for example, \\\"mark\\\". This\n  is read only.\n\n  `var type = entry.entryType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/entryType`"}, :name performance.PerformanceEntry/set-entry-type!, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The entryType property returns a `dom.DOMString` representing\n  type of performance metric such as, for example, \\\"mark\\\". This\n  is read only.\n\n  `var type = entry.entryType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/entryType`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 72, :column 7, :end-line 72, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name property of the `performance.PerformanceEntry` interface\n  a value that further specifies the value returned by the `performance.PerformanceEntry.entryType`\n  This property is read only.\n\n  `var name = entry.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/name`"}, :name performance.PerformanceEntry/name, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name property of the `performance.PerformanceEntry` interface\n  a value that further specifies the value returned by the `performance.PerformanceEntry.entryType`\n  This property is read only.\n\n  `var name = entry.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/name`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name property of the `performance.PerformanceEntry` interface\n  a value that further specifies the value returned by the `performance.PerformanceEntry.entryType`\n  This property is read only.\n\n  `var name = entry.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/name`"}, :name performance.PerformanceEntry/set-name!, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name property of the `performance.PerformanceEntry` interface\n  a value that further specifies the value returned by the `performance.PerformanceEntry.entryType`\n  This property is read only.\n\n  `var name = entry.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/name`"}, start-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 98, :column 7, :end-line 98, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The startTime property returns the first recorded `web.timestamp`\n  the `web.performance entry`.\n\n  `entry.startTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/startTime`"}, :name performance.PerformanceEntry/start-time, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The startTime property returns the first recorded `web.timestamp`\n  the `web.performance entry`.\n\n  `entry.startTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/startTime`"}, set-start-time! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/performance/PerformanceEntry.cljs", :line 110, :column 7, :end-line 110, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The startTime property returns the first recorded `web.timestamp`\n  the `web.performance entry`.\n\n  `entry.startTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/startTime`"}, :name performance.PerformanceEntry/set-start-time!, :variadic false, :file "src/performance/PerformanceEntry.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The startTime property returns the first recorded `web.timestamp`\n  the `web.performance entry`.\n\n  `entry.startTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PerformanceEntry/startTime`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PerformanceEntry object encapsulates a single performance\n  that is part of the performance timeline. A performance entry\n  be directly created by making a performance `web.mark` or `web.measure`\n  example by calling the `web.mark()` method) at an explicit point\n  an application. Performance entries are also created in indirect\n  such as loading a resource (such as an image)."}
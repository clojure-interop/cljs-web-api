{:rename-macros {}, :renames {}, :externs {FileReader {}}, :use-macros {}, :excludes #{load}, :name file.FileReader, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {read-as-array-buffer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 30, :column 7, :end-line 30, :end-column 27, :arglists (quote ([this blob])), :doc "Method.\n\n  The `file.FileReader` interface's readAsArrayBuffer() method\n  used to start reading the contents of a specified `web.Blob`\n  `file.File`. When the read operation is finished, the `web.readyState`\n  DONE, and the loadend is triggered. At that time, the `web.result`\n  contains an `web.ArrayBuffer` representing the file's data.\n\n  `instanceOfFileReader.readAsArrayBuffer(blob);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsArrayBuffer`"}, :name file.FileReader/read-as-array-buffer, :variadic false, :file "src/file/FileReader.cljs", :end-column 27, :method-params ([this blob]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this blob])), :doc "Method.\n\n  The `file.FileReader` interface's readAsArrayBuffer() method\n  used to start reading the contents of a specified `web.Blob`\n  `file.File`. When the read operation is finished, the `web.readyState`\n  DONE, and the loadend is triggered. At that time, the `web.result`\n  contains an `web.ArrayBuffer` representing the file's data.\n\n  `instanceOfFileReader.readAsArrayBuffer(blob);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsArrayBuffer`"}, read-as-text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 75, :column 7, :end-line 75, :end-column 19, :arglists (quote ([this & args])), :doc "Method.\n\n  The readAsText() method is used to read the contents of the specified\n  or `file.File`. When the read operation is complete, the `web.readyState`\n  changed to DONE, the loadend event is triggered, and the `web.result`\n  contains the contents of the file as a text string.\n\n  `instanceOfFileReader.readAsText(blob[, encoding]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsText`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name file.FileReader/read-as-text, :variadic true, :file "src/file/FileReader.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The readAsText() method is used to read the contents of the specified\n  or `file.File`. When the read operation is complete, the `web.readyState`\n  changed to DONE, the loadend event is triggered, and the `web.result`\n  contains the contents of the file as a text string.\n\n  `instanceOfFileReader.readAsText(blob[, encoding]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsText`"}, read-as-data-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 60, :column 7, :end-line 60, :end-column 23, :arglists (quote ([this blob])), :doc "Method.\n\n  The readAsDataURL method is used to read the contents of the\n  `web.Blob` or `file.File`. When the read operation is finished,\n  `web.readyState` becomes DONE, and the loadend is triggered.\n  that time, the `web.result` attribute contains the data as a\n  URL representing the file's data as a base64 encoded string.\n\n  `instanceOfFileReader.readAsDataURL(blob);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL`"}, :name file.FileReader/read-as-data-url, :variadic false, :file "src/file/FileReader.cljs", :end-column 23, :method-params ([this blob]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this blob])), :doc "Method.\n\n  The readAsDataURL method is used to read the contents of the\n  `web.Blob` or `file.File`. When the read operation is finished,\n  `web.readyState` becomes DONE, and the loadend is triggered.\n  that time, the `web.result` attribute contains the data as a\n  URL representing the file's data as a base64 encoded string.\n\n  `instanceOfFileReader.readAsDataURL(blob);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL`"}, read-as-binary-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 45, :column 7, :end-line 45, :end-column 28, :arglists (quote ([this blob])), :doc "Method.\n\n  The readAsBinaryString method is used to start reading the contents\n  the specified `web.Blob` or `file.File`. When the read operation\n  finished, the `web.readyState` becomes DONE, and the loadend\n  triggered. At that time, the `web.result` attribute contains\n  raw binary data from the file.\n\n  `instanceOfFileReader.readAsBinaryString(blob);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsBinaryString`"}, :name file.FileReader/read-as-binary-string, :variadic false, :file "src/file/FileReader.cljs", :end-column 28, :method-params ([this blob]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this blob])), :doc "Method.\n\n  The readAsBinaryString method is used to start reading the contents\n  the specified `web.Blob` or `file.File`. When the read operation\n  finished, the `web.readyState` becomes DONE, and the loadend\n  triggered. At that time, the `web.result` attribute contains\n  raw binary data from the file.\n\n  `instanceOfFileReader.readAsBinaryString(blob);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsBinaryString`"}, set-onabort! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 124, :column 7, :end-line 124, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The FileReader.onabort property contains an event handler executed\n  the abort event is fired, i.e. when the process of reading the\n  is aborted.\n\n  `reader.onabort = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onabort`"}, :name file.FileReader/set-onabort!, :variadic false, :file "src/file/FileReader.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The FileReader.onabort property contains an event handler executed\n  the abort event is fired, i.e. when the process of reading the\n  is aborted.\n\n  `reader.onabort = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onabort`"}, ready-state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 159, :column 7, :end-line 159, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The `file.FileReader` readyState property provides the current\n  of the reading operation a FileReader is in. A FileReader exists\n  one of the following states:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState`"}, :name file.FileReader/ready-state, :variadic false, :file "src/file/FileReader.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `file.FileReader` readyState property provides the current\n  of the reading operation a FileReader is in. A FileReader exists\n  one of the following states:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 218, :column 7, :end-line 218, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onerror`"}, :name file.FileReader/set-onerror!, :variadic false, :file "src/file/FileReader.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onerror`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 209, :column 7, :end-line 209, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onerror`"}, :name file.FileReader/onerror, :variadic false, :file "src/file/FileReader.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onerror`"}, set-onload! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 148, :column 7, :end-line 148, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The FileReader.onload property contains an event handler executed\n  the load event is fired, when content read with readAsArrayBuffer,\n  readAsDataURL or readAsText is available.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onload`"}, :name file.FileReader/set-onload!, :variadic false, :file "src/file/FileReader.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The FileReader.onload property contains an event handler executed\n  the load event is fired, when content read with readAsArrayBuffer,\n  readAsDataURL or readAsText is available.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onload`"}, abort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 18, :column 7, :end-line 18, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The abort method aborts the read operation. Upon return, the\n  will be DONE.\n\n  `instanceOfFileReader.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort`"}, :name file.FileReader/abort, :variadic false, :file "src/file/FileReader.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The abort method aborts the read operation. Upon return, the\n  will be DONE.\n\n  `instanceOfFileReader.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort`"}, set-ready-state! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 170, :column 7, :end-line 170, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The `file.FileReader` readyState property provides the current\n  of the reading operation a FileReader is in. A FileReader exists\n  one of the following states:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState`"}, :name file.FileReader/set-ready-state!, :variadic false, :file "src/file/FileReader.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `file.FileReader` readyState property provides the current\n  of the reading operation a FileReader is in. A FileReader exists\n  one of the following states:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readyState`"}, set-result! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 195, :column 7, :end-line 195, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The `file.FileReader` result property returns the file's contents.\n  property is only valid after the read operation is complete,\n  the format of the data depends on which of the methods was used\n  initiate the read operation.\n\n  `var file = instanceOfFileReader.result`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/result`"}, :name file.FileReader/set-result!, :variadic false, :file "src/file/FileReader.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `file.FileReader` result property returns the file's contents.\n  property is only valid after the read operation is complete,\n  the format of the data depends on which of the methods was used\n  initiate the read operation.\n\n  `var file = instanceOfFileReader.result`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/result`"}, set-error! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 100, :column 7, :end-line 100, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the error that occurred while reading the file.\n\n  `var error = instanceOfFileReader.error`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error`"}, :name file.FileReader/set-error!, :variadic false, :file "src/file/FileReader.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the error that occurred while reading the file.\n\n  `var error = instanceOfFileReader.error`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error`"}, result {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 181, :column 7, :end-line 181, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The `file.FileReader` result property returns the file's contents.\n  property is only valid after the read operation is complete,\n  the format of the data depends on which of the methods was used\n  initiate the read operation.\n\n  `var file = instanceOfFileReader.result`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/result`"}, :name file.FileReader/result, :variadic false, :file "src/file/FileReader.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `file.FileReader` result property returns the file's contents.\n  property is only valid after the read operation is complete,\n  the format of the data depends on which of the methods was used\n  initiate the read operation.\n\n  `var file = instanceOfFileReader.result`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/result`"}, onload {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 137, :column 7, :end-line 137, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The FileReader.onload property contains an event handler executed\n  the load event is fired, when content read with readAsArrayBuffer,\n  readAsDataURL or readAsText is available.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onload`"}, :name file.FileReader/onload, :variadic false, :file "src/file/FileReader.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The FileReader.onload property contains an event handler executed\n  the load event is fired, when content read with readAsArrayBuffer,\n  readAsDataURL or readAsText is available.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onload`"}, onabort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 111, :column 7, :end-line 111, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The FileReader.onabort property contains an event handler executed\n  the abort event is fired, i.e. when the process of reading the\n  is aborted.\n\n  `reader.onabort = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onabort`"}, :name file.FileReader/onabort, :variadic false, :file "src/file/FileReader.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The FileReader.onabort property contains an event handler executed\n  the abort event is fired, i.e. when the process of reading the\n  is aborted.\n\n  `reader.onabort = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/onabort`"}, constructor {:name file.FileReader/constructor, :file "src/file/FileReader.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :doc "Constructor.\n\n  The FileReader() constructor creates a new FileReader.\n\n  None.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/FileReader`", :tag js}, error {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader.cljs", :line 89, :column 7, :end-line 89, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  Returns the error that occurred while reading the file.\n\n  `var error = instanceOfFileReader.error`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error`"}, :name file.FileReader/error, :variadic false, :file "src/file/FileReader.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the error that occurred while reading the file.\n\n  `var error = instanceOfFileReader.error`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The FileReader object lets web applications asynchronously read\n  contents of files (or raw data buffers) stored on the user's\n  using `file.File` or `web.Blob` objects to specify the file or\n  to read."}
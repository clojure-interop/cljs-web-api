{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name}, :name file.FileSystem, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileSystem.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only name property of the `file.FileSystem` interface\n  the file system's name. This `web.USVString` is unique among\n  file systems currently exposed by the File and Directory Entries\n\n  `var fsName = FileSystem.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/name`"}, :name file.FileSystem/name, :variadic false, :file "src/file/FileSystem.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only name property of the `file.FileSystem` interface\n  the file system's name. This `web.USVString` is unique among\n  file systems currently exposed by the File and Directory Entries\n\n  `var fsName = FileSystem.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/name`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileSystem.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only name property of the `file.FileSystem` interface\n  the file system's name. This `web.USVString` is unique among\n  file systems currently exposed by the File and Directory Entries\n\n  `var fsName = FileSystem.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/name`"}, :name file.FileSystem/set-name!, :variadic false, :file "src/file/FileSystem.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only name property of the `file.FileSystem` interface\n  the file system's name. This `web.USVString` is unique among\n  file systems currently exposed by the File and Directory Entries\n\n  `var fsName = FileSystem.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/name`"}, root {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileSystem.cljs", :line 34, :column 7, :end-line 34, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only root property of the `file.FileSystem` interface\n  a `file.FileSystemDirectoryEntry` object representing the root\n  of the file system, for use with the File and Directory Entries\n\n  `var rootDirEnt = FileSystem.root;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/root`"}, :name file.FileSystem/root, :variadic false, :file "src/file/FileSystem.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only root property of the `file.FileSystem` interface\n  a `file.FileSystemDirectoryEntry` object representing the root\n  of the file system, for use with the File and Directory Entries\n\n  `var rootDirEnt = FileSystem.root;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/root`"}, set-root! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileSystem.cljs", :line 47, :column 7, :end-line 47, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only root property of the `file.FileSystem` interface\n  a `file.FileSystemDirectoryEntry` object representing the root\n  of the file system, for use with the File and Directory Entries\n\n  `var rootDirEnt = FileSystem.root;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/root`"}, :name file.FileSystem/set-root!, :variadic false, :file "src/file/FileSystem.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only root property of the `file.FileSystem` interface\n  a `file.FileSystemDirectoryEntry` object representing the root\n  of the file system, for use with the File and Directory Entries\n\n  `var rootDirEnt = FileSystem.root;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileSystem/root`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The File and Directory Entries API interface FileSystem is used\n  represent a file system. These objects can be obtained from the\n  property on any file system entry. Some browsers offer additional\n  to create and manage file systems, such as Chrome's `web.requestFileSystem()`"}
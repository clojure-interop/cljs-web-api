{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{load}, :name file.FileReader.ev, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {abort {:name file.FileReader.ev/abort, :file "src/file/FileReader/ev.cljs", :line 5, :column 1, :end-line 5, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader/ev.cljs", :line 5, :column 6, :end-line 5, :end-column 11}, :doc "Event.\n\n  The abort event is fired when a read has been aborted: for instance\n  the program called `file.FileReader.abort()`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/abort_event`", :tag string}, error {:name file.FileReader.ev/error, :file "src/file/FileReader/ev.cljs", :line 15, :column 1, :end-line 15, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader/ev.cljs", :line 15, :column 6, :end-line 15, :end-column 11}, :doc "Event.\n\n  The error event is fired when the read failed due to an error\n  example, because the file was not found or not readable).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/error_event`", :tag string}, load {:name file.FileReader.ev/load, :file "src/file/FileReader/ev.cljs", :line 25, :column 1, :end-line 25, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader/ev.cljs", :line 25, :column 6, :end-line 25, :end-column 10}, :doc "Event.\n\n  The load event is fired when a file has been read successfully.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/load_event`", :tag string}, loadend {:name file.FileReader.ev/loadend, :file "src/file/FileReader/ev.cljs", :line 34, :column 1, :end-line 34, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader/ev.cljs", :line 34, :column 6, :end-line 34, :end-column 13}, :doc "Event.\n\n  The loadend event is fired when a file read has completed, successfully\n  not.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadend_event`", :tag string}, loadstart {:name file.FileReader.ev/loadstart, :file "src/file/FileReader/ev.cljs", :line 44, :column 1, :end-line 44, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader/ev.cljs", :line 44, :column 6, :end-line 44, :end-column 15}, :doc "Event.\n\n  The loadstart event is fired when a file read operation has begun.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/loadstart_event`", :tag string}, progress {:name file.FileReader.ev/progress, :file "src/file/FileReader/ev.cljs", :line 53, :column 1, :end-line 53, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/FileReader/ev.cljs", :line 53, :column 6, :end-line 53, :end-column 14}, :doc "Event.\n\n  The progress event is fired periodically as the FileReader reads\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FileReader/progress_event`", :tag string}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "FileReader Events."}
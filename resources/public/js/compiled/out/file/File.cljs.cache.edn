{:rename-macros {}, :renames {}, :externs {File {}}, :use-macros {}, :excludes #{name type}, :name file.File, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-file-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 124, :column 7, :end-line 124, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the name of the file. For security reasons the path is\n  from this property.\n\n  `var name = instanceOfFile.fileName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileName`"}, :name file.File/set-file-name!, :variadic false, :file "src/file/File.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the name of the file. For security reasons the path is\n  from this property.\n\n  `var name = instanceOfFile.fileName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileName`"}, array-buffer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 97, :column 7, :end-line 97, :end-column 19, :arglists (quote ([this & args])), :doc "Method.\n\n  The arrayBuffer() method of the `web.Blob` interface is used\n  read the contents of a Blob as binary data. It returns a promise\n  resolves with an `web.ArrayBuffer`.\n\n  `blob.arrayBuffer().then(function (buffer) {\n  // do something with buffer\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name file.File/array-buffer, :variadic true, :file "src/file/File.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The arrayBuffer() method of the `web.Blob` interface is used\n  read the contents of a Blob as binary data. It returns a promise\n  resolves with an `web.ArrayBuffer`.\n\n  `blob.arrayBuffer().then(function (buffer) {\n  // do something with buffer\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer`"}, moz-full-path {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 199, :column 7, :end-line 199, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  A privileged exension to the `file.File` interface, the mozFullPath\n  contains the full pathname of the represented file.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/mozFullPath`"}, :name file.File/moz-full-path, :variadic false, :file "src/file/File.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A privileged exension to the `file.File` interface, the mozFullPath\n  contains the full pathname of the represented file.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/mozFullPath`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 254, :column 7, :end-line 254, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the media type (MIME) of the file represented by a `file.File`\n\n  `var name = file.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/type`"}, :name file.File/set-type!, :variadic false, :file "src/file/File.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 254, :end-line 254, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the media type (MIME) of the file represented by a `file.File`\n\n  `var name = file.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/type`"}, last-modified-date {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 186, :column 7, :end-line 186, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The File.lastModifiedDate read-only property returns the last\n  date of the file. Files without a known last modified date returns\n  current date .\n\n  `var time = instanceOfFile.lastModifiedDate`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/lastModifiedDate`"}, :name file.File/last-modified-date, :variadic false, :file "src/file/File.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The File.lastModifiedDate read-only property returns the last\n  date of the file. Files without a known last modified date returns\n  current date .\n\n  `var time = instanceOfFile.lastModifiedDate`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/lastModifiedDate`"}, text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 84, :column 7, :end-line 84, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n\n\n  `blob.text().then(function (text) {\n  // do something with the text\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/text`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name file.File/text, :variadic true, :file "src/file/File.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n\n\n  `blob.text().then(function (text) {\n  // do something with the text\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/text`"}, webkit-relative-path {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 265, :column 7, :end-line 265, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The File.webkitRelativePath is a read-only property that contains\n  `web.USVString` which specifies the file's path relative to the\n  selected by the user in an `web.<input>` element with its webkitdirectory\n  set.\n\n  `relativePath = File.webkitRelativePath`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath`"}, :name file.File/webkit-relative-path, :variadic false, :file "src/file/File.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The File.webkitRelativePath is a read-only property that contains\n  `web.USVString` which specifies the file's path relative to the\n  selected by the user in an `web.<input>` element with its webkitdirectory\n  set.\n\n  `relativePath = File.webkitRelativePath`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/webkitRelativePath`"}, set-size! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 290, :column 7, :end-line 290, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/size`"}, :name file.File/set-size!, :variadic false, :file "src/file/File.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/size`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 231, :column 7, :end-line 231, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the name of the file represented by a `file.File` object.\n  security reasons, the path is excluded from this property.\n\n  `var name = file.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/name`"}, :name file.File/set-name!, :variadic false, :file "src/file/File.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the name of the file represented by a `file.File` object.\n  security reasons, the path is excluded from this property.\n\n  `var name = file.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/name`"}, get-as-binary {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([this])), :doc "Method.\n\n  The getAsBinary method allows to access the file's data in raw\n  format.\n\n  `var binary = instanceOfFile.getAsBinary();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary`"}, :name file.File/get-as-binary, :variadic false, :file "src/file/File.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getAsBinary method allows to access the file's data in raw\n  format.\n\n  `var binary = instanceOfFile.getAsBinary();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary`"}, set-file-size! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 147, :column 7, :end-line 147, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.fileSize;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize`"}, :name file.File/set-file-size!, :variadic false, :file "src/file/File.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.fileSize;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize`"}, set-moz-full-path! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 209, :column 7, :end-line 209, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  A privileged exension to the `file.File` interface, the mozFullPath\n  contains the full pathname of the represented file.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/mozFullPath`"}, :name file.File/set-moz-full-path!, :variadic false, :file "src/file/File.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A privileged exension to the `file.File` interface, the mozFullPath\n  contains the full pathname of the represented file.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/mozFullPath`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 219, :column 7, :end-line 219, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  Returns the name of the file represented by a `file.File` object.\n  security reasons, the path is excluded from this property.\n\n  `var name = file.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/name`"}, :name file.File/name, :variadic false, :file "src/file/File.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the name of the file represented by a `file.File` object.\n  security reasons, the path is excluded from this property.\n\n  `var name = file.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/name`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 243, :column 7, :end-line 243, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  Returns the media type (MIME) of the file represented by a `file.File`\n\n  `var name = file.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/type`"}, :name file.File/type, :variadic false, :file "src/file/File.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the media type (MIME) of the file represented by a `file.File`\n\n  `var name = file.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/type`"}, file-size {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 136, :column 7, :end-line 136, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.fileSize;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize`"}, :name file.File/file-size, :variadic false, :file "src/file/File.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.fileSize;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize`"}, get-as-data-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 36, :column 7, :end-line 36, :end-column 22, :arglists (quote ([this])), :doc "Method.\n\n  The getAsDataURL provides a `web.data:` URL that encodes the\n  contents of the referenced file.\n\n  `var url = instanceOfFile.getAsDataURL();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL`"}, :name file.File/get-as-data-url, :variadic false, :file "src/file/File.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getAsDataURL provides a `web.data:` URL that encodes the\n  contents of the referenced file.\n\n  `var url = instanceOfFile.getAsDataURL();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL`"}, last-modified {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 158, :column 7, :end-line 158, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The File.lastModified read-only property provides the last modified\n  of the file as the number of milliseconds since the Unix epoch\n  1, 1970 at midnight). Files without a known last modified date\n  the current date.\n\n  `const time = instanceOfFile.lastModified;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/lastModified`"}, :name file.File/last-modified, :variadic false, :file "src/file/File.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The File.lastModified read-only property provides the last modified\n  of the file as the number of milliseconds since the Unix epoch\n  1, 1970 at midnight). Files without a known last modified date\n  the current date.\n\n  `const time = instanceOfFile.lastModified;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/lastModified`"}, size {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 279, :column 7, :end-line 279, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/size`"}, :name file.File/size, :variadic false, :file "src/file/File.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the size of a file in bytes.\n\n  `var size = instanceOfFile.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/size`"}, stream {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 72, :column 7, :end-line 72, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The stream() method of the `web.Blob` interface transforms a\n  into a `web.ReadableStream` of its data.\n\n  `var stream = blob.stream();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/stream`"}, :name file.File/stream, :variadic false, :file "src/file/File.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The stream() method of the `web.Blob` interface transforms a\n  into a `web.ReadableStream` of its data.\n\n  `var stream = blob.stream();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/stream`"}, get-as-text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 48, :column 7, :end-line 48, :end-column 18, :arglists (quote ([this encoding])), :doc "Method.\n\n  The getAsText method provides the file's data interpreted as\n  using a given encoding.\n\n  `var str = instanceOfFile.getAsText(encoding);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText`"}, :name file.File/get-as-text, :variadic false, :file "src/file/File.cljs", :end-column 18, :method-params ([this encoding]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this encoding])), :doc "Method.\n\n  The getAsText method provides the file's data interpreted as\n  using a given encoding.\n\n  `var str = instanceOfFile.getAsText(encoding);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText`"}, set-last-modified! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 172, :column 7, :end-line 172, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The File.lastModified read-only property provides the last modified\n  of the file as the number of milliseconds since the Unix epoch\n  1, 1970 at midnight). Files without a known last modified date\n  the current date.\n\n  `const time = instanceOfFile.lastModified;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/lastModified`"}, :name file.File/set-last-modified!, :variadic false, :file "src/file/File.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The File.lastModified read-only property provides the last modified\n  of the file as the number of milliseconds since the Unix epoch\n  1, 1970 at midnight). Files without a known last modified date\n  the current date.\n\n  `const time = instanceOfFile.lastModified;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/lastModified`"}, slice {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 60, :column 7, :end-line 60, :end-column 12, :arglists (quote ([this & args])), :doc "Method.\n\n  The Blob.slice() method is used to create a new `web.Blob` object\n  the data in the specified range of bytes of the source `web.Blob`.\n\n  `var blob = instanceOfBlob.slice([start [, end [, contentType]]]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name file.File/slice, :variadic true, :file "src/file/File.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The Blob.slice() method is used to create a new `web.Blob` object\n  the data in the specified range of bytes of the source `web.Blob`.\n\n  `var blob = instanceOfBlob.slice([start [, end [, contentType]]]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Blob/slice`"}, file-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 112, :column 7, :end-line 112, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  Returns the name of the file. For security reasons the path is\n  from this property.\n\n  `var name = instanceOfFile.fileName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileName`"}, :name file.File/file-name, :variadic false, :file "src/file/File.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the name of the file. For security reasons the path is\n  from this property.\n\n  `var name = instanceOfFile.fileName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/fileName`"}, constructor {:name file.File/constructor, :file "src/file/File.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/file/File.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The File() constructor creates a new `file.File` object instance.\n\n  bits\n  An `web.Array` of `web.ArrayBuffer`, `web.ArrayBufferView`, `web.Blob`, or `dom.DOMString` objects — or a mix of any such objects. This is the file content encoded as UTF-8.\n  name\n  A `web.USVString` representing the file name or the path to the file.\n  options Optional\n  An options object containing optional attributes for the file. Available options are as follows:\n\n  type: A `dom.DOMString` representing the MIME type of the content that will be put into the file. Defaults to a value of \\\"\\\".\n  lastModified: A number representing the number of milliseconds between the Unix time epoch and when the file was last modified. Defaults to a value of `web.Date.now()`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/File/File`", :tag js}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The File interface provides information about files and allows\n  in a web page to access their content."}
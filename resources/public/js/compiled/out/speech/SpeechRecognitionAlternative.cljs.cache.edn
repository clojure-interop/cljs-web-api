{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name speech.SpeechRecognitionAlternative, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {confidence {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionAlternative.cljs", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The confidence read-only property of the `speech.SpeechRecognitionResult`\n  returns a numeric estimate of how confident the speech recognition\n  is that the recognition is correct.\n\n  `var myConfidence = speechRecognitionAlternativeInstance.confidence;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/confidence`"}, :name speech.SpeechRecognitionAlternative/confidence, :variadic false, :file "src/speech/SpeechRecognitionAlternative.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The confidence read-only property of the `speech.SpeechRecognitionResult`\n  returns a numeric estimate of how confident the speech recognition\n  is that the recognition is correct.\n\n  `var myConfidence = speechRecognitionAlternativeInstance.confidence;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/confidence`"}, set-confidence! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionAlternative.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The confidence read-only property of the `speech.SpeechRecognitionResult`\n  returns a numeric estimate of how confident the speech recognition\n  is that the recognition is correct.\n\n  `var myConfidence = speechRecognitionAlternativeInstance.confidence;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/confidence`"}, :name speech.SpeechRecognitionAlternative/set-confidence!, :variadic false, :file "src/speech/SpeechRecognitionAlternative.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The confidence read-only property of the `speech.SpeechRecognitionResult`\n  returns a numeric estimate of how confident the speech recognition\n  is that the recognition is correct.\n\n  `var myConfidence = speechRecognitionAlternativeInstance.confidence;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/confidence`"}, transcript {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionAlternative.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The transcript read-only property of the `speech.SpeechRecognitionResult`\n  returns a string containing the transcript of the recognised\n\n  `var myTranscript = speechRecognitionAlternativeInstance.transcript;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/transcript`"}, :name speech.SpeechRecognitionAlternative/transcript, :variadic false, :file "src/speech/SpeechRecognitionAlternative.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The transcript read-only property of the `speech.SpeechRecognitionResult`\n  returns a string containing the transcript of the recognised\n\n  `var myTranscript = speechRecognitionAlternativeInstance.transcript;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/transcript`"}, set-transcript! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionAlternative.cljs", :line 45, :column 7, :end-line 45, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The transcript read-only property of the `speech.SpeechRecognitionResult`\n  returns a string containing the transcript of the recognised\n\n  `var myTranscript = speechRecognitionAlternativeInstance.transcript;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/transcript`"}, :name speech.SpeechRecognitionAlternative/set-transcript!, :variadic false, :file "src/speech/SpeechRecognitionAlternative.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The transcript read-only property of the `speech.SpeechRecognitionResult`\n  returns a string containing the transcript of the recognised\n\n  `var myTranscript = speechRecognitionAlternativeInstance.transcript;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionAlternative/transcript`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SpeechRecognitionAlternative interface of the Web Speech\n  represents a single word that has been recognised by the speech\n  service."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name speech.SpeechSynthesis, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {speak {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 58, :column 7, :end-line 58, :end-column 12, :arglists (quote ([this utterance])), :doc "Method.\n\n  The speak() method of the `speech.SpeechSynthesis` interface\n  an `web.utterance` to the utterance queue; it will be spoken\n  any other utterances queued before it have been spoken.\n\n  `speechSynthesisInstance.speak(utterance);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/speak`"}, :name speech.SpeechSynthesis/speak, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 12, :method-params ([this utterance]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this utterance])), :doc "Method.\n\n  The speak() method of the `speech.SpeechSynthesis` interface\n  an `web.utterance` to the utterance queue; it will be spoken\n  any other utterances queued before it have been spoken.\n\n  `speechSynthesisInstance.speak(utterance);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/speak`"}, resume {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 45, :column 7, :end-line 45, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The resume() method of the `speech.SpeechSynthesis` interface\n  the SpeechSynthesis object into a non-paused state: resumes it\n  it was already paused.\n\n  `speechSynthesisInstance.resume();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/resume`"}, :name speech.SpeechSynthesis/resume, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The resume() method of the `speech.SpeechSynthesis` interface\n  the SpeechSynthesis object into a non-paused state: resumes it\n  it was already paused.\n\n  `speechSynthesisInstance.resume();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/resume`"}, paused {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 99, :column 7, :end-line 99, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The paused read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the SpeechSynthesis object\n  in a paused state, or false if not.\n\n  `var amIPaused = speechSynthesisInstance.paused;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/paused`"}, :name speech.SpeechSynthesis/paused, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The paused read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the SpeechSynthesis object\n  in a paused state, or false if not.\n\n  `var amIPaused = speechSynthesisInstance.paused;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/paused`"}, get-voices {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([this])), :doc "Method.\n\n  The getVoices() method of the `speech.SpeechSynthesis` interface\n  a list of `speech.SpeechSynthesisVoice` objects representing\n  the available voices on the current device.\n\n  `speechSynthesisInstance.getVoices();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/getVoices`"}, :name speech.SpeechSynthesis/get-voices, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getVoices() method of the `speech.SpeechSynthesis` interface\n  a list of `speech.SpeechSynthesisVoice` objects representing\n  the available voices on the current device.\n\n  `speechSynthesisInstance.getVoices();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/getVoices`"}, onvoiceschanged {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 71, :column 7, :end-line 71, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The onvoiceschanged property of the `speech.SpeechSynthesis`\n  represents an event handler that will run when the list of `speech.SpeechSynthesisVoice`\n  that would be returned by the `speech.SpeechSynthesis.getVoices()`\n  has changed (when the voiceschanged event fires.)\n\n  `speechSynthesisInstance.onvoiceschanged = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/onvoiceschanged`"}, :name speech.SpeechSynthesis/onvoiceschanged, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onvoiceschanged property of the `speech.SpeechSynthesis`\n  represents an event handler that will run when the list of `speech.SpeechSynthesisVoice`\n  that would be returned by the `speech.SpeechSynthesis.getVoices()`\n  has changed (when the voiceschanged event fires.)\n\n  `speechSynthesisInstance.onvoiceschanged = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/onvoiceschanged`"}, set-speaking! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 165, :column 7, :end-line 165, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The speaking read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if an utterance is currently\n  the process of being spoken — even if SpeechSynthesis is in a\n  state.\n\n  `var amISpeaking = speechSynthesisInstance.speaking;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/speaking`"}, :name speech.SpeechSynthesis/set-speaking!, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The speaking read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if an utterance is currently\n  the process of being spoken — even if SpeechSynthesis is in a\n  state.\n\n  `var amISpeaking = speechSynthesisInstance.speaking;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/speaking`"}, set-onvoiceschanged! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 85, :column 7, :end-line 85, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The onvoiceschanged property of the `speech.SpeechSynthesis`\n  represents an event handler that will run when the list of `speech.SpeechSynthesisVoice`\n  that would be returned by the `speech.SpeechSynthesis.getVoices()`\n  has changed (when the voiceschanged event fires.)\n\n  `speechSynthesisInstance.onvoiceschanged = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/onvoiceschanged`"}, :name speech.SpeechSynthesis/set-onvoiceschanged!, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onvoiceschanged property of the `speech.SpeechSynthesis`\n  represents an event handler that will run when the list of `speech.SpeechSynthesisVoice`\n  that would be returned by the `speech.SpeechSynthesis.getVoices()`\n  has changed (when the voiceschanged event fires.)\n\n  `speechSynthesisInstance.onvoiceschanged = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/onvoiceschanged`"}, speaking {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 151, :column 7, :end-line 151, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The speaking read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if an utterance is currently\n  the process of being spoken — even if SpeechSynthesis is in a\n  state.\n\n  `var amISpeaking = speechSynthesisInstance.speaking;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/speaking`"}, :name speech.SpeechSynthesis/speaking, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The speaking read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if an utterance is currently\n  the process of being spoken — even if SpeechSynthesis is in a\n  state.\n\n  `var amISpeaking = speechSynthesisInstance.speaking;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/speaking`"}, pending {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 125, :column 7, :end-line 125, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The pending read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the utterance queue contains\n  utterances.\n\n  `var amIPending = speechSynthesisInstance.pending;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/pending`"}, :name speech.SpeechSynthesis/pending, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pending read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the utterance queue contains\n  utterances.\n\n  `var amIPending = speechSynthesisInstance.pending;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/pending`"}, set-pending! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 138, :column 7, :end-line 138, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The pending read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the utterance queue contains\n  utterances.\n\n  `var amIPending = speechSynthesisInstance.pending;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/pending`"}, :name speech.SpeechSynthesis/set-pending!, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pending read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the utterance queue contains\n  utterances.\n\n  `var amIPending = speechSynthesisInstance.pending;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/pending`"}, set-paused! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 112, :column 7, :end-line 112, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The paused read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the SpeechSynthesis object\n  in a paused state, or false if not.\n\n  `var amIPaused = speechSynthesisInstance.paused;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/paused`"}, :name speech.SpeechSynthesis/set-paused!, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The paused read-only property of the `speech.SpeechSynthesis`\n  is a `web.Boolean` that returns true if the SpeechSynthesis object\n  in a paused state, or false if not.\n\n  `var amIPaused = speechSynthesisInstance.paused;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/paused`"}, pause {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The pause() method of the `speech.SpeechSynthesis` interface\n  the SpeechSynthesis object into a paused state.\n\n  `speechSynthesisInstance.pause();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/pause`"}, :name speech.SpeechSynthesis/pause, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The pause() method of the `speech.SpeechSynthesis` interface\n  the SpeechSynthesis object into a paused state.\n\n  `speechSynthesisInstance.pause();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/pause`"}, cancel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesis.cljs", :line 8, :column 7, :end-line 8, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The cancel() method of the `speech.SpeechSynthesis` interface\n  all utterances from the utterance queue.\n\n  `speechSynthesisInstance.cancel();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/cancel`"}, :name speech.SpeechSynthesis/cancel, :variadic false, :file "src/speech/SpeechSynthesis.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The cancel() method of the `speech.SpeechSynthesis` interface\n  all utterances from the utterance queue.\n\n  `speechSynthesisInstance.cancel();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis/cancel`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SpeechSynthesis interface of the Web Speech API is the controller\n  for the speech service; this can be used to retrieve information\n  the synthesis voices available on the device, start and pause\n  and other commands besides."}
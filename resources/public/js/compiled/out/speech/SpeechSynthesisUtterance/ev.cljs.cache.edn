{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name speech.SpeechSynthesisUtterance.ev, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {boundary {:name speech.SpeechSynthesisUtterance.ev/boundary, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 5, :column 1, :end-line 5, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 5, :column 6, :end-line 5, :end-column 14}, :doc "Event.\n\n  You can use the boundary event in an addEventListener method:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/boundary_event`", :tag string}, end {:name speech.SpeechSynthesisUtterance.ev/end, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 14, :column 1, :end-line 14, :end-column 9, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 14, :column 6, :end-line 14, :end-column 9}, :doc "Event.\n\n  You can use the end event in an addEventListener method:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/end_event`", :tag string}, error {:name speech.SpeechSynthesisUtterance.ev/error, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 23, :column 1, :end-line 23, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 23, :column 6, :end-line 23, :end-column 11}, :doc "Event.\n\n  You can use the error event in an addEventListener method:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/error_event`", :tag string}, mark {:name speech.SpeechSynthesisUtterance.ev/mark, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 32, :column 1, :end-line 32, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 32, :column 6, :end-line 32, :end-column 10}, :doc "Event.\n\n  You can use the mark event in an addEventListener method:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/mark_event`", :tag string}, pause {:name speech.SpeechSynthesisUtterance.ev/pause, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 41, :column 1, :end-line 41, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 41, :column 6, :end-line 41, :end-column 11}, :doc "Event.\n\n  You can use the pause event in an addEventListener method:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/pause_event`", :tag string}, resume {:name speech.SpeechSynthesisUtterance.ev/resume, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 50, :column 1, :end-line 50, :end-column 12, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 50, :column 6, :end-line 50, :end-column 12}, :doc "Event.\n\n  The resume event of the Web Speech API `speech.SpeechSynthesisUtterance`\n  is fired when a paused utterance is resumed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/resume_event`", :tag string}, start {:name speech.SpeechSynthesisUtterance.ev/start, :file "src/speech/SpeechSynthesisUtterance/ev.cljs", :line 60, :column 1, :end-line 60, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisUtterance/ev.cljs", :line 60, :column 6, :end-line 60, :end-column 11}, :doc "Event.\n\n  You can use the start event in an addEventListener method:\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance/start_event`", :tag string}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "SpeechSynthesisUtterance Events."}
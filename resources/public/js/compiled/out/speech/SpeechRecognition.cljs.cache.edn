{:rename-macros {}, :renames {}, :externs {SpeechRecognition {}}, :use-macros {}, :excludes #{}, :name speech.SpeechRecognition, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-interim-results! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 127, :column 7, :end-line 127, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The interimResults property of the `speech.SpeechRecognition`\n  controls whether interim results should be returned (true) or\n  (false.) Interim results are results that are not yet final (e.g.\n  `speech.SpeechRecognitionResult.isFinal` property is false.)\n\n  `var myInterimResult = mySpeechRecognition.interimResults;\n  mySpeechRecognition.interimResults = false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/interimResults`"}, :name speech.SpeechRecognition/set-interim-results!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The interimResults property of the `speech.SpeechRecognition`\n  controls whether interim results should be returned (true) or\n  (false.) Interim results are results that are not yet final (e.g.\n  `speech.SpeechRecognitionResult.isFinal` property is false.)\n\n  `var myInterimResult = mySpeechRecognition.interimResults;\n  mySpeechRecognition.interimResults = false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/interimResults`"}, onspeechend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 412, :column 7, :end-line 412, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The onspeechend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when speech recognised by the\n  recognition service has stopped being detected (when the speechend\n  fires.)\n\n  `mySpeechRecognition.onspeechend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechend`"}, :name speech.SpeechRecognition/onspeechend, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onspeechend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when speech recognised by the\n  recognition service has stopped being detected (when the speechend\n  fires.)\n\n  `mySpeechRecognition.onspeechend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechend`"}, set-lang! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 157, :column 7, :end-line 157, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The lang property of the `speech.SpeechRecognition` interface\n  and sets the language of the current SpeechRecognition. If not\n  this defaults to the HTML lang attribute value, or the user agent's\n  setting if that isn't set either.\n\n  `var myLang = mySpeechRecognition.lang;\n  mySpeechRecognition.lang = 'en-US';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/lang`"}, :name speech.SpeechRecognition/set-lang!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The lang property of the `speech.SpeechRecognition` interface\n  and sets the language of the current SpeechRecognition. If not\n  this defaults to the HTML lang attribute value, or the user agent's\n  setting if that isn't set either.\n\n  `var myLang = mySpeechRecognition.lang;\n  mySpeechRecognition.lang = 'en-US';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/lang`"}, onaudioend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 200, :column 7, :end-line 200, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The onaudioend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has finished\n  audio (when the audioend event fires.)\n\n  `mySpeechRecognition.onaudioend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudioend`"}, :name speech.SpeechRecognition/onaudioend, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onaudioend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has finished\n  audio (when the audioend event fires.)\n\n  `mySpeechRecognition.onaudioend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudioend`"}, set-onspeechend! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 426, :column 7, :end-line 426, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The onspeechend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when speech recognised by the\n  recognition service has stopped being detected (when the speechend\n  fires.)\n\n  `mySpeechRecognition.onspeechend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechend`"}, :name speech.SpeechRecognition/set-onspeechend!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 426, :end-line 426, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onspeechend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when speech recognised by the\n  recognition service has stopped being detected (when the speechend\n  fires.)\n\n  `mySpeechRecognition.onspeechend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechend`"}, service-uri {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 496, :column 7, :end-line 496, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The serviceURI property of the `speech.SpeechRecognition` interface\n  the location of the speech recognition service used by the current\n  to handle the actual recognition. The default is the user agent's\n  speech service.\n\n  `var myServiceURI = mySpeechRecognition.serviceURI;\n  mySpeechRecognition.serviceURI = 'path/to/my/service/';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/serviceURI`"}, :name speech.SpeechRecognition/service-uri, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 496, :end-line 496, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The serviceURI property of the `speech.SpeechRecognition` interface\n  the location of the speech recognition service used by the current\n  to handle the actual recognition. The default is the user agent's\n  speech service.\n\n  `var myServiceURI = mySpeechRecognition.serviceURI;\n  mySpeechRecognition.serviceURI = 'path/to/my/service/';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/serviceURI`"}, onend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 252, :column 7, :end-line 252, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The onend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  disconnected (when the end event fires.)\n\n  `mySpeechRecognition.onend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onend`"}, :name speech.SpeechRecognition/onend, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  disconnected (when the end event fires.)\n\n  `mySpeechRecognition.onend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onend`"}, onaudiostart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 226, :column 7, :end-line 226, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The onaudiostart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has started\n  capture audio (when the audiostart event fires.)\n\n  `mySpeechRecognition.onaudiostart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudiostart`"}, :name speech.SpeechRecognition/onaudiostart, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onaudiostart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has started\n  capture audio (when the audiostart event fires.)\n\n  `mySpeechRecognition.onaudiostart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudiostart`"}, set-grammars! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 98, :column 7, :end-line 98, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The grammars property of the `speech.SpeechRecognition` interface\n  and sets a collection of `speech.SpeechGrammar` objects that\n  the grammars that will be understood by the current SpeechRecognition.\n\n  `var myGrammars = mySpeechRecognition.grammars;\n  mySpeechRecognition.grammars = mySpeechGrammarList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/grammars`"}, :name speech.SpeechRecognition/set-grammars!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The grammars property of the `speech.SpeechRecognition` interface\n  and sets a collection of `speech.SpeechGrammar` objects that\n  the grammars that will be understood by the current SpeechRecognition.\n\n  `var myGrammars = mySpeechRecognition.grammars;\n  mySpeechRecognition.grammars = mySpeechGrammarList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/grammars`"}, set-onresult! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 346, :column 7, :end-line 346, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onresult property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a result — a word or phrase has been positively recognized and\n  has been communicated back to the app (when the `web.result`\n\n  `mySpeechRecognition.onresult = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onresult`"}, :name speech.SpeechRecognition/set-onresult!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 346, :end-line 346, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onresult property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a result — a word or phrase has been positively recognized and\n  has been communicated back to the app (when the `web.result`\n\n  `mySpeechRecognition.onresult = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onresult`"}, set-max-alternatives! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 186, :column 7, :end-line 186, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The maxAlternatives property of the `speech.SpeechRecognition`\n  sets the maximum number of `speech.SpeechRecognitionAlternative`s\n  per `speech.SpeechRecognitionResult`.\n\n  `var myMaxAlternativeNumber = mySpeechRecognition.maxAlternatives;\n  mySpeechRecognition.maxAlternatives = 2;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/maxAlternatives`"}, :name speech.SpeechRecognition/set-max-alternatives!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The maxAlternatives property of the `speech.SpeechRecognition`\n  sets the maximum number of `speech.SpeechRecognitionAlternative`s\n  per `speech.SpeechRecognitionResult`.\n\n  `var myMaxAlternativeNumber = mySpeechRecognition.maxAlternatives;\n  mySpeechRecognition.maxAlternatives = 2;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/maxAlternatives`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 291, :column 7, :end-line 291, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onerror property of the `speech.SpeechRecognition` interface\n  an event handler that will run when a speech recognition error\n  (when the error event fires.)\n\n  `mySpeechRecognition.onerror = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onerror`"}, :name speech.SpeechRecognition/set-onerror!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onerror property of the `speech.SpeechRecognition` interface\n  an event handler that will run when a speech recognition error\n  (when the error event fires.)\n\n  `mySpeechRecognition.onerror = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onerror`"}, onnomatch {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 304, :column 7, :end-line 304, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onnomatch property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a final result with no significant recognition (when the nomatch\n  fires.)\n\n  `mySpeechRecognition.onnomatch = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onnomatch`"}, :name speech.SpeechRecognition/onnomatch, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onnomatch property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a final result with no significant recognition (when the nomatch\n  fires.)\n\n  `mySpeechRecognition.onnomatch = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onnomatch`"}, set-onaudioend! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 213, :column 7, :end-line 213, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The onaudioend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has finished\n  audio (when the audioend event fires.)\n\n  `mySpeechRecognition.onaudioend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudioend`"}, :name speech.SpeechRecognition/set-onaudioend!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onaudioend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has finished\n  audio (when the audioend event fires.)\n\n  `mySpeechRecognition.onaudioend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudioend`"}, set-onaudiostart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 239, :column 7, :end-line 239, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The onaudiostart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has started\n  capture audio (when the audiostart event fires.)\n\n  `mySpeechRecognition.onaudiostart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudiostart`"}, :name speech.SpeechRecognition/set-onaudiostart!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onaudiostart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the user agent has started\n  capture audio (when the audiostart event fires.)\n\n  `mySpeechRecognition.onaudiostart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onaudiostart`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 278, :column 7, :end-line 278, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onerror property of the `speech.SpeechRecognition` interface\n  an event handler that will run when a speech recognition error\n  (when the error event fires.)\n\n  `mySpeechRecognition.onerror = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onerror`"}, :name speech.SpeechRecognition/onerror, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onerror property of the `speech.SpeechRecognition` interface\n  an event handler that will run when a speech recognition error\n  (when the error event fires.)\n\n  `mySpeechRecognition.onerror = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onerror`"}, set-onnomatch! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 318, :column 7, :end-line 318, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The onnomatch property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a final result with no significant recognition (when the nomatch\n  fires.)\n\n  `mySpeechRecognition.onnomatch = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onnomatch`"}, :name speech.SpeechRecognition/set-onnomatch!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onnomatch property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a final result with no significant recognition (when the nomatch\n  fires.)\n\n  `mySpeechRecognition.onnomatch = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onnomatch`"}, grammars {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 84, :column 7, :end-line 84, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The grammars property of the `speech.SpeechRecognition` interface\n  and sets a collection of `speech.SpeechGrammar` objects that\n  the grammars that will be understood by the current SpeechRecognition.\n\n  `var myGrammars = mySpeechRecognition.grammars;\n  mySpeechRecognition.grammars = mySpeechGrammarList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/grammars`"}, :name speech.SpeechRecognition/grammars, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The grammars property of the `speech.SpeechRecognition` interface\n  and sets a collection of `speech.SpeechGrammar` objects that\n  the grammars that will be understood by the current SpeechRecognition.\n\n  `var myGrammars = mySpeechRecognition.grammars;\n  mySpeechRecognition.grammars = mySpeechGrammarList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/grammars`"}, set-onsoundstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 399, :column 7, :end-line 399, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The onsoundstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has been detected (when the soundstart event fires.)\n\n  `mySpeechRecognition.onsoundstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundstart`"}, :name speech.SpeechRecognition/set-onsoundstart!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onsoundstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has been detected (when the soundstart event fires.)\n\n  `mySpeechRecognition.onsoundstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundstart`"}, interim-results {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 112, :column 7, :end-line 112, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The interimResults property of the `speech.SpeechRecognition`\n  controls whether interim results should be returned (true) or\n  (false.) Interim results are results that are not yet final (e.g.\n  `speech.SpeechRecognitionResult.isFinal` property is false.)\n\n  `var myInterimResult = mySpeechRecognition.interimResults;\n  mySpeechRecognition.interimResults = false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/interimResults`"}, :name speech.SpeechRecognition/interim-results, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The interimResults property of the `speech.SpeechRecognition`\n  controls whether interim results should be returned (true) or\n  (false.) Interim results are results that are not yet final (e.g.\n  `speech.SpeechRecognitionResult.isFinal` property is false.)\n\n  `var myInterimResult = mySpeechRecognition.interimResults;\n  mySpeechRecognition.interimResults = false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/interimResults`"}, set-onspeechstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 454, :column 7, :end-line 454, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The onspeechstart property of the `speech.SpeechRecognition`\n  represents an event handler that will run when sound recognised\n  the speech recognition service as speech has been detected (when\n  speechstart event fires.)\n\n  `mySpeechRecognition.onspeechstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechstart`"}, :name speech.SpeechRecognition/set-onspeechstart!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 454, :end-line 454, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onspeechstart property of the `speech.SpeechRecognition`\n  represents an event handler that will run when sound recognised\n  the speech recognition service as speech has been detected (when\n  speechstart event fires.)\n\n  `mySpeechRecognition.onspeechstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechstart`"}, start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 30, :column 7, :end-line 30, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The start() method of the Web Speech API starts the speech recognition\n  listening to incoming audio with intent to recognize grammars\n  with the current `speech.SpeechRecognition`.\n\n  `mySpeechRecognition.start();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/start`"}, :name speech.SpeechRecognition/start, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The start() method of the Web Speech API starts the speech recognition\n  listening to incoming audio with intent to recognize grammars\n  with the current `speech.SpeechRecognition`.\n\n  `mySpeechRecognition.start();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/start`"}, onspeechstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 440, :column 7, :end-line 440, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The onspeechstart property of the `speech.SpeechRecognition`\n  represents an event handler that will run when sound recognised\n  the speech recognition service as speech has been detected (when\n  speechstart event fires.)\n\n  `mySpeechRecognition.onspeechstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechstart`"}, :name speech.SpeechRecognition/onspeechstart, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 440, :end-line 440, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onspeechstart property of the `speech.SpeechRecognition`\n  represents an event handler that will run when sound recognised\n  the speech recognition service as speech has been detected (when\n  speechstart event fires.)\n\n  `mySpeechRecognition.onspeechstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onspeechstart`"}, continuous {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 56, :column 7, :end-line 56, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The continuous property of the `speech.SpeechRecognition` interface\n  whether continuous results are returned for each recognition,\n  only a single result.\n\n  `var myContinuous = mySpeechRecognition.continuous;\n  mySpeechRecognition.continuous = true;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/continuous`"}, :name speech.SpeechRecognition/continuous, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The continuous property of the `speech.SpeechRecognition` interface\n  whether continuous results are returned for each recognition,\n  only a single result.\n\n  `var myContinuous = mySpeechRecognition.continuous;\n  mySpeechRecognition.continuous = true;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/continuous`"}, abort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 17, :column 7, :end-line 17, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The abort() method of the Web Speech API stops the speech recognition\n  from listening to incoming audio, and doesn't attempt to return\n  `speech.SpeechRecognitionResult`.\n\n  `mySpeechRecognition.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/abort`"}, :name speech.SpeechRecognition/abort, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The abort() method of the Web Speech API stops the speech recognition\n  from listening to incoming audio, and doesn't attempt to return\n  `speech.SpeechRecognitionResult`.\n\n  `mySpeechRecognition.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/abort`"}, onresult {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 332, :column 7, :end-line 332, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onresult property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a result — a word or phrase has been positively recognized and\n  has been communicated back to the app (when the `web.result`\n\n  `mySpeechRecognition.onresult = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onresult`"}, :name speech.SpeechRecognition/onresult, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onresult property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  a result — a word or phrase has been positively recognized and\n  has been communicated back to the app (when the `web.result`\n\n  `mySpeechRecognition.onresult = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onresult`"}, set-onstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 482, :column 7, :end-line 482, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  begun listening to incoming audio with intent to recognize grammars\n  with the current SpeechRecognition (when the start event fires.)\n\n  `mySpeechRecognition.onstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onstart`"}, :name speech.SpeechRecognition/set-onstart!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 482, :end-line 482, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  begun listening to incoming audio with intent to recognize grammars\n  with the current SpeechRecognition (when the start event fires.)\n\n  `mySpeechRecognition.onstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onstart`"}, lang {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 142, :column 7, :end-line 142, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The lang property of the `speech.SpeechRecognition` interface\n  and sets the language of the current SpeechRecognition. If not\n  this defaults to the HTML lang attribute value, or the user agent's\n  setting if that isn't set either.\n\n  `var myLang = mySpeechRecognition.lang;\n  mySpeechRecognition.lang = 'en-US';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/lang`"}, :name speech.SpeechRecognition/lang, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The lang property of the `speech.SpeechRecognition` interface\n  and sets the language of the current SpeechRecognition. If not\n  this defaults to the HTML lang attribute value, or the user agent's\n  setting if that isn't set either.\n\n  `var myLang = mySpeechRecognition.lang;\n  mySpeechRecognition.lang = 'en-US';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/lang`"}, max-alternatives {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 172, :column 7, :end-line 172, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The maxAlternatives property of the `speech.SpeechRecognition`\n  sets the maximum number of `speech.SpeechRecognitionAlternative`s\n  per `speech.SpeechRecognitionResult`.\n\n  `var myMaxAlternativeNumber = mySpeechRecognition.maxAlternatives;\n  mySpeechRecognition.maxAlternatives = 2;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/maxAlternatives`"}, :name speech.SpeechRecognition/max-alternatives, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The maxAlternatives property of the `speech.SpeechRecognition`\n  sets the maximum number of `speech.SpeechRecognitionAlternative`s\n  per `speech.SpeechRecognitionResult`.\n\n  `var myMaxAlternativeNumber = mySpeechRecognition.maxAlternatives;\n  mySpeechRecognition.maxAlternatives = 2;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/maxAlternatives`"}, stop {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 43, :column 7, :end-line 43, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The stop() method of the Web Speech API stops the speech recognition\n  from listening to incoming audio, and attempts to return a `speech.SpeechRecognitionResult`\n  the audio captured so far.\n\n  `mySpeechRecognition.stop();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/stop`"}, :name speech.SpeechRecognition/stop, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The stop() method of the Web Speech API stops the speech recognition\n  from listening to incoming audio, and attempts to return a `speech.SpeechRecognitionResult`\n  the audio captured so far.\n\n  `mySpeechRecognition.stop();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/stop`"}, set-service-uri! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 511, :column 7, :end-line 511, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The serviceURI property of the `speech.SpeechRecognition` interface\n  the location of the speech recognition service used by the current\n  to handle the actual recognition. The default is the user agent's\n  speech service.\n\n  `var myServiceURI = mySpeechRecognition.serviceURI;\n  mySpeechRecognition.serviceURI = 'path/to/my/service/';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/serviceURI`"}, :name speech.SpeechRecognition/set-service-uri!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 511, :end-line 511, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The serviceURI property of the `speech.SpeechRecognition` interface\n  the location of the speech recognition service used by the current\n  to handle the actual recognition. The default is the user agent's\n  speech service.\n\n  `var myServiceURI = mySpeechRecognition.serviceURI;\n  mySpeechRecognition.serviceURI = 'path/to/my/service/';`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/serviceURI`"}, onsoundstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 386, :column 7, :end-line 386, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The onsoundstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has been detected (when the soundstart event fires.)\n\n  `mySpeechRecognition.onsoundstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundstart`"}, :name speech.SpeechRecognition/onsoundstart, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 386, :end-line 386, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onsoundstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has been detected (when the soundstart event fires.)\n\n  `mySpeechRecognition.onsoundstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundstart`"}, onsoundend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 360, :column 7, :end-line 360, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The onsoundend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has stopped being detected (when the soundend event\n\n  `mySpeechRecognition.onsoundend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundend`"}, :name speech.SpeechRecognition/onsoundend, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 360, :end-line 360, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onsoundend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has stopped being detected (when the soundend event\n\n  `mySpeechRecognition.onsoundend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundend`"}, set-onend! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 265, :column 7, :end-line 265, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The onend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  disconnected (when the end event fires.)\n\n  `mySpeechRecognition.onend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onend`"}, :name speech.SpeechRecognition/set-onend!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  disconnected (when the end event fires.)\n\n  `mySpeechRecognition.onend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onend`"}, onstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 468, :column 7, :end-line 468, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  begun listening to incoming audio with intent to recognize grammars\n  with the current SpeechRecognition (when the start event fires.)\n\n  `mySpeechRecognition.onstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onstart`"}, :name speech.SpeechRecognition/onstart, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 468, :end-line 468, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onstart property of the `speech.SpeechRecognition` interface\n  an event handler that will run when the speech recognition service\n  begun listening to incoming audio with intent to recognize grammars\n  with the current SpeechRecognition (when the start event fires.)\n\n  `mySpeechRecognition.onstart = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onstart`"}, set-onsoundend! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 373, :column 7, :end-line 373, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The onsoundend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has stopped being detected (when the soundend event\n\n  `mySpeechRecognition.onsoundend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundend`"}, :name speech.SpeechRecognition/set-onsoundend!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onsoundend property of the `speech.SpeechRecognition` interface\n  an event handler that will run when any sound — recognisable\n  or not — has stopped being detected (when the soundend event\n\n  `mySpeechRecognition.onsoundend = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/onsoundend`"}, constructor {:name speech.SpeechRecognition/constructor, :file "src/speech/SpeechRecognition.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The SpeechRecognition() constructor creates a new `speech.SpeechRecognition` object instance.\n\n  None.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/SpeechRecognition`", :tag js}, set-continuous! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognition.cljs", :line 70, :column 7, :end-line 70, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The continuous property of the `speech.SpeechRecognition` interface\n  whether continuous results are returned for each recognition,\n  only a single result.\n\n  `var myContinuous = mySpeechRecognition.continuous;\n  mySpeechRecognition.continuous = true;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/continuous`"}, :name speech.SpeechRecognition/set-continuous!, :variadic false, :file "src/speech/SpeechRecognition.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The continuous property of the `speech.SpeechRecognition` interface\n  whether continuous results are returned for each recognition,\n  only a single result.\n\n  `var myContinuous = mySpeechRecognition.continuous;\n  mySpeechRecognition.continuous = true;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition/continuous`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SpeechRecognition interface of the Web Speech API is the\n  interface for the recognition service; this also handles the\n  sent from the recognition service."}
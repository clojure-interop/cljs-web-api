{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name}, :name speech.SpeechSynthesisEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {char-index {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The charIndex read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the index position of the character in the `speech.SpeechSynthesisUtterance.text`\n  was being spoken when the event was triggered.\n\n  `event.charIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/charIndex`"}, :name speech.SpeechSynthesisEvent/char-index, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The charIndex read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the index position of the character in the `speech.SpeechSynthesisUtterance.text`\n  was being spoken when the event was triggered.\n\n  `event.charIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/charIndex`"}, set-char-index! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The charIndex read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the index position of the character in the `speech.SpeechSynthesisUtterance.text`\n  was being spoken when the event was triggered.\n\n  `event.charIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/charIndex`"}, :name speech.SpeechSynthesisEvent/set-char-index!, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The charIndex read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the index position of the character in the `speech.SpeechSynthesisUtterance.text`\n  was being spoken when the event was triggered.\n\n  `event.charIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/charIndex`"}, elapsed-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 33, :column 7, :end-line 33, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The elapsedTime read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the elapsed time in seconds after the `speech.SpeechSynthesisUtterance.text`\n  being spoken that the event was triggered at.\n\n  `event.elapsedTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/elapsedTime`"}, :name speech.SpeechSynthesisEvent/elapsed-time, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The elapsedTime read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the elapsed time in seconds after the `speech.SpeechSynthesisUtterance.text`\n  being spoken that the event was triggered at.\n\n  `event.elapsedTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/elapsedTime`"}, set-elapsed-time! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 46, :column 7, :end-line 46, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The elapsedTime read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the elapsed time in seconds after the `speech.SpeechSynthesisUtterance.text`\n  being spoken that the event was triggered at.\n\n  `event.elapsedTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/elapsedTime`"}, :name speech.SpeechSynthesisEvent/set-elapsed-time!, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The elapsedTime read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the elapsed time in seconds after the `speech.SpeechSynthesisUtterance.text`\n  being spoken that the event was triggered at.\n\n  `event.elapsedTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/elapsedTime`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 59, :column 7, :end-line 59, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the name associated with certain types of events occuring\n  the `speech.SpeechSynthesisUtterance.text` is being spoken: the\n  of the SSML marker reached in the case of a mark event, or the\n  of boundary reached in the case of a boundary event.\n\n  `event.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/name`"}, :name speech.SpeechSynthesisEvent/name, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the name associated with certain types of events occuring\n  the `speech.SpeechSynthesisUtterance.text` is being spoken: the\n  of the SSML marker reached in the case of a mark event, or the\n  of boundary reached in the case of a boundary event.\n\n  `event.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/name`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 74, :column 7, :end-line 74, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the name associated with certain types of events occuring\n  the `speech.SpeechSynthesisUtterance.text` is being spoken: the\n  of the SSML marker reached in the case of a mark event, or the\n  of boundary reached in the case of a boundary event.\n\n  `event.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/name`"}, :name speech.SpeechSynthesisEvent/set-name!, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the name associated with certain types of events occuring\n  the `speech.SpeechSynthesisUtterance.text` is being spoken: the\n  of the SSML marker reached in the case of a mark event, or the\n  of boundary reached in the case of a boundary event.\n\n  `event.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/name`"}, utterance {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 89, :column 7, :end-line 89, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The utterance read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the `speech.SpeechSynthesisUtterance` instance that the\n  was triggered on.\n\n  `event.utterance;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/utterance`"}, :name speech.SpeechSynthesisEvent/utterance, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The utterance read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the `speech.SpeechSynthesisUtterance` instance that the\n  was triggered on.\n\n  `event.utterance;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/utterance`"}, set-utterance! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechSynthesisEvent.cljs", :line 102, :column 7, :end-line 102, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The utterance read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the `speech.SpeechSynthesisUtterance` instance that the\n  was triggered on.\n\n  `event.utterance;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/utterance`"}, :name speech.SpeechSynthesisEvent/set-utterance!, :variadic false, :file "src/speech/SpeechSynthesisEvent.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The utterance read-only property of the `speech.SpeechSynthesisUtterance`\n  returns the `speech.SpeechSynthesisUtterance` instance that the\n  was triggered on.\n\n  `event.utterance;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisEvent/utterance`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SpeechSynthesisEvent interface of the Web Speech API contains\n  about the current state of `speech.SpeechSynthesisUtterance`\n  that have been processed in the speech service."}
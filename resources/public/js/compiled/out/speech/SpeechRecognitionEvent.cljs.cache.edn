{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name speech.SpeechRecognitionEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {emma {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The emma read-only property of the `speech.SpeechRecognitionEvent`\n  returns an Extensible MultiModal Annotation markup language (EMMA)\n  XML — representation of the result.\n\n  `var myEmma = event.emma;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/emma`"}, :name speech.SpeechRecognitionEvent/emma, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The emma read-only property of the `speech.SpeechRecognitionEvent`\n  returns an Extensible MultiModal Annotation markup language (EMMA)\n  XML — representation of the result.\n\n  `var myEmma = event.emma;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/emma`"}, set-emma! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The emma read-only property of the `speech.SpeechRecognitionEvent`\n  returns an Extensible MultiModal Annotation markup language (EMMA)\n  XML — representation of the result.\n\n  `var myEmma = event.emma;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/emma`"}, :name speech.SpeechRecognitionEvent/set-emma!, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The emma read-only property of the `speech.SpeechRecognitionEvent`\n  returns an Extensible MultiModal Annotation markup language (EMMA)\n  XML — representation of the result.\n\n  `var myEmma = event.emma;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/emma`"}, interpretation {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 33, :column 7, :end-line 33, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The interpretation read-only property of the `speech.SpeechRecognitionEvent`\n  returns the semantic meaning of what the user said.\n\n  `var myInterpretation = event.interpretation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/interpretation`"}, :name speech.SpeechRecognitionEvent/interpretation, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The interpretation read-only property of the `speech.SpeechRecognitionEvent`\n  returns the semantic meaning of what the user said.\n\n  `var myInterpretation = event.interpretation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/interpretation`"}, set-interpretation! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 45, :column 7, :end-line 45, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The interpretation read-only property of the `speech.SpeechRecognitionEvent`\n  returns the semantic meaning of what the user said.\n\n  `var myInterpretation = event.interpretation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/interpretation`"}, :name speech.SpeechRecognitionEvent/set-interpretation!, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The interpretation read-only property of the `speech.SpeechRecognitionEvent`\n  returns the semantic meaning of what the user said.\n\n  `var myInterpretation = event.interpretation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/interpretation`"}, result-index {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 57, :column 7, :end-line 57, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The resultIndex read-only property of the `speech.SpeechRecognitionEvent`\n  returns the lowest index value result in the `speech.SpeechRecognitionResultList`\n  that has actually changed.\n\n  `var myResultIndex = event.resultIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/resultIndex`"}, :name speech.SpeechRecognitionEvent/result-index, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The resultIndex read-only property of the `speech.SpeechRecognitionEvent`\n  returns the lowest index value result in the `speech.SpeechRecognitionResultList`\n  that has actually changed.\n\n  `var myResultIndex = event.resultIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/resultIndex`"}, set-result-index! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 70, :column 7, :end-line 70, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The resultIndex read-only property of the `speech.SpeechRecognitionEvent`\n  returns the lowest index value result in the `speech.SpeechRecognitionResultList`\n  that has actually changed.\n\n  `var myResultIndex = event.resultIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/resultIndex`"}, :name speech.SpeechRecognitionEvent/set-result-index!, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The resultIndex read-only property of the `speech.SpeechRecognitionEvent`\n  returns the lowest index value result in the `speech.SpeechRecognitionResultList`\n  that has actually changed.\n\n  `var myResultIndex = event.resultIndex;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/resultIndex`"}, results {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 83, :column 7, :end-line 83, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The results read-only property of the `speech.SpeechRecognitionEvent`\n  returns a `speech.SpeechRecognitionResultList` object representing\n  the speech recognition results for the current session.\n\n  `var myResults = event.results;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/results`"}, :name speech.SpeechRecognitionEvent/results, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The results read-only property of the `speech.SpeechRecognitionEvent`\n  returns a `speech.SpeechRecognitionResultList` object representing\n  the speech recognition results for the current session.\n\n  `var myResults = event.results;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/results`"}, set-results! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/speech/SpeechRecognitionEvent.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The results read-only property of the `speech.SpeechRecognitionEvent`\n  returns a `speech.SpeechRecognitionResultList` object representing\n  the speech recognition results for the current session.\n\n  `var myResults = event.results;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/results`"}, :name speech.SpeechRecognitionEvent/set-results!, :variadic false, :file "src/speech/SpeechRecognitionEvent.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The results read-only property of the `speech.SpeechRecognitionEvent`\n  returns a `speech.SpeechRecognitionResultList` object representing\n  the speech recognition results for the current session.\n\n  `var myResults = event.results;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognitionEvent/results`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SpeechRecognitionEvent interface of the Web Speech API represents\n  event object for the result and nomatch events, and contains\n  the data associated with an interim or final speech recognition"}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLCollection, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {item {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLCollection.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([this index])), :doc "Method.\n\n  The `html.HTMLCollection` method item() returns the node located\n  the specified offset into the collection.\n\n  `var element = HTMLCollection.item(index)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection/item`"}, :name html.HTMLCollection/item, :variadic false, :file "src/html/HTMLCollection.cljs", :end-column 11, :method-params ([this index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this index])), :doc "Method.\n\n  The `html.HTMLCollection` method item() returns the node located\n  the specified offset into the collection.\n\n  `var element = HTMLCollection.item(index)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLCollection/item`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLCollection interface represents a generic collection\n  object similar to `web.arguments`) of elements (in document order)\n  offers methods and properties for selecting from the list."}
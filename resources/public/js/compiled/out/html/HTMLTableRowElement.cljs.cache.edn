{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLTableRowElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {insert-cell {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLTableRowElement.cljs", :line 8, :column 7, :end-line 8, :end-column 18, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLTableRowElement.insertCell() method inserts a new cell\n  into a table row (`web.<tr>`) and returns a reference to the\n\n  `var newCell = HTMLTableRowElement.insertCell(index);\n\n  `html.HTMLTableRowElement` is a reference to an HTML `web.<tr>` element.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement/insertCell`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLTableRowElement/insert-cell, :variadic true, :file "src/html/HTMLTableRowElement.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLTableRowElement.insertCell() method inserts a new cell\n  into a table row (`web.<tr>`) and returns a reference to the\n\n  `var newCell = HTMLTableRowElement.insertCell(index);\n\n  `html.HTMLTableRowElement` is a reference to an HTML `web.<tr>` element.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement/insertCell`"}, row-index {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLTableRowElement.cljs", :line 22, :column 7, :end-line 22, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLTableRowElement.rowIndex read-only property represents\n  position of a row in relation to the whole `web.<table>`.\n\n  `var index = HTMLTableRowElement.rowIndex`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement/rowIndex`"}, :name html.HTMLTableRowElement/row-index, :variadic false, :file "src/html/HTMLTableRowElement.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLTableRowElement.rowIndex read-only property represents\n  position of a row in relation to the whole `web.<table>`.\n\n  `var index = HTMLTableRowElement.rowIndex`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement/rowIndex`"}, set-row-index! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLTableRowElement.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLTableRowElement.rowIndex read-only property represents\n  position of a row in relation to the whole `web.<table>`.\n\n  `var index = HTMLTableRowElement.rowIndex`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement/rowIndex`"}, :name html.HTMLTableRowElement/set-row-index!, :variadic false, :file "src/html/HTMLTableRowElement.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLTableRowElement.rowIndex read-only property represents\n  position of a row in relation to the whole `web.<table>`.\n\n  `var index = HTMLTableRowElement.rowIndex`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement/rowIndex`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLTableRowElement interface provides special properties\n  methods (beyond the `html.HTMLElement` interface it also has\n  to it by inheritance) for manipulating the layout and presentation\n  rows in an HTML table."}
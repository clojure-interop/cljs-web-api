{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{hash}, :name html.HTMLHyperlinkElementUtils, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-username! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 266, :column 7, :end-line 266, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, :name html.HTMLHyperlinkElementUtils/set-username!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, href {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 98, :column 7, :end-line 98, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, :name html.HTMLHyperlinkElementUtils/href, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, set-host! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 58, :column 7, :end-line 58, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, :name html.HTMLHyperlinkElementUtils/set-host!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, hash {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, :name html.HTMLHyperlinkElementUtils/hash, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, set-hostname! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 85, :column 7, :end-line 85, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, :name html.HTMLHyperlinkElementUtils/set-hostname!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 199, :column 7, :end-line 199, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, :name html.HTMLHyperlinkElementUtils/protocol, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, password {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 130, :column 7, :end-line 130, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.password property is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password`"}, :name html.HTMLHyperlinkElementUtils/password, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.password property is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password`"}, to-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLHyperlinkElementUtils.toString() stringifier method returns\n  `web.USVString` containing the whole URL. It is a read-only version\n  `html.HTMLHyperlinkElementUtils.href`.\n\n  `string = object.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString`"}, :name html.HTMLHyperlinkElementUtils/to-string, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLHyperlinkElementUtils.toString() stringifier method returns\n  `web.USVString` containing the whole URL. It is a read-only version\n  `html.HTMLHyperlinkElementUtils.href`.\n\n  `string = object.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString`"}, set-pathname! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 157, :column 7, :end-line 157, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, :name html.HTMLHyperlinkElementUtils/set-pathname!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, set-hash! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 32, :column 7, :end-line 32, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, :name html.HTMLHyperlinkElementUtils/set-hash!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, pathname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 143, :column 7, :end-line 143, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, :name html.HTMLHyperlinkElementUtils/pathname, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, username {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 253, :column 7, :end-line 253, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, :name html.HTMLHyperlinkElementUtils/username, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, hostname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 72, :column 7, :end-line 72, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, :name html.HTMLHyperlinkElementUtils/hostname, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, search {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 225, :column 7, :end-line 225, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, :name html.HTMLHyperlinkElementUtils/search, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, port {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 171, :column 7, :end-line 171, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}, :name html.HTMLHyperlinkElementUtils/port, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}, set-search! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 239, :column 7, :end-line 239, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, :name html.HTMLHyperlinkElementUtils/set-search!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, host {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 44, :column 7, :end-line 44, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, :name html.HTMLHyperlinkElementUtils/host, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, set-href! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 108, :column 7, :end-line 108, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, :name html.HTMLHyperlinkElementUtils/set-href!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, set-protocol! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 212, :column 7, :end-line 212, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, :name html.HTMLHyperlinkElementUtils/set-protocol!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, origin {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 118, :column 7, :end-line 118, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.origin read-only property is a\n  containing the Unicode serialization of the origin of the represented\n\n  `string = object.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/origin`"}, :name html.HTMLHyperlinkElementUtils/origin, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.origin read-only property is a\n  containing the Unicode serialization of the origin of the represented\n\n  `string = object.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/origin`"}, set-port! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLHyperlinkElementUtils.cljs", :line 185, :column 7, :end-line 185, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}, :name html.HTMLHyperlinkElementUtils/set-port!, :variadic false, :file "src/html/HTMLHyperlinkElementUtils.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLHyperlinkElementUtils mixin defines utility methods and\n  to work with `html.HTMLAnchorElement` and `html.HTMLAreaElement`.\n  utilities allow to deal with common features like URLs."}
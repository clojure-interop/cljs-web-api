{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLDialogElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {close {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([this return-value])), :doc "Method.\n\n  Void.\n\n  `dialogInstance.close(returnValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close`"}, :name html.HTMLDialogElement/close, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 12, :method-params ([this return-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this return-value])), :doc "Method.\n\n  Void.\n\n  `dialogInstance.close(returnValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/close`"}, show {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 17, :column 7, :end-line 17, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The show() method of the `html.HTMLDialogElement` interface displays\n  dialog modelessly, i.e. still allowing interaction with content\n  of the dialog.\n\n  `dialogInstance.show();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/show`"}, :name html.HTMLDialogElement/show, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The show() method of the `html.HTMLDialogElement` interface displays\n  dialog modelessly, i.e. still allowing interaction with content\n  of the dialog.\n\n  `dialogInstance.show();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/show`"}, show-modal {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([this])), :doc "Method.\n\n  The showModal() method of the `html.HTMLDialogElement` interface\n  the dialog as a modal, over the top of any other dialogs that\n  be present. It displays into the top layer, along with a ::backdrop\n  Interaction outside the dialog is blocked and the content outside\n  is rendered inert.\n\n  `dialogInstance.showModal();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal`"}, :name html.HTMLDialogElement/show-modal, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The showModal() method of the `html.HTMLDialogElement` interface\n  the dialog as a modal, over the top of any other dialogs that\n  be present. It displays into the top layer, along with a ::backdrop\n  Interaction outside the dialog is blocked and the content outside\n  is rendered inert.\n\n  `dialogInstance.showModal();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal`"}, open {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 45, :column 7, :end-line 45, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  A `web.Boolean` representing the state of the open HTML attribute.\n  means it is set, and therefore the dialog is shown. false means\n  not set, and therefore the dialog is not shown.\n\n  `dialogInstance.open = true;\n  var myOpenValue = dialogInstance.open;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/open`"}, :name html.HTMLDialogElement/open, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.Boolean` representing the state of the open HTML attribute.\n  means it is set, and therefore the dialog is shown. false means\n  not set, and therefore the dialog is not shown.\n\n  `dialogInstance.open = true;\n  var myOpenValue = dialogInstance.open;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/open`"}, set-open! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.Boolean` representing the state of the open HTML attribute.\n  means it is set, and therefore the dialog is shown. false means\n  not set, and therefore the dialog is not shown.\n\n  `dialogInstance.open = true;\n  var myOpenValue = dialogInstance.open;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/open`"}, :name html.HTMLDialogElement/set-open!, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.Boolean` representing the state of the open HTML attribute.\n  means it is set, and therefore the dialog is shown. false means\n  not set, and therefore the dialog is not shown.\n\n  `dialogInstance.open = true;\n  var myOpenValue = dialogInstance.open;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/open`"}, return-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 73, :column 7, :end-line 73, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The returnValue property of the `html.HTMLDialogElement` interface\n  or sets the return value for the <dialog>, usually to indicate\n  button the user pressed to close it.\n\n  `dialogInstance.returnValue = 'myReturnValue';\n  var myReturnValue = dialogInstance.returnValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue`"}, :name html.HTMLDialogElement/return-value, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The returnValue property of the `html.HTMLDialogElement` interface\n  or sets the return value for the <dialog>, usually to indicate\n  button the user pressed to close it.\n\n  `dialogInstance.returnValue = 'myReturnValue';\n  var myReturnValue = dialogInstance.returnValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue`"}, set-return-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLDialogElement.cljs", :line 87, :column 7, :end-line 87, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The returnValue property of the `html.HTMLDialogElement` interface\n  or sets the return value for the <dialog>, usually to indicate\n  button the user pressed to close it.\n\n  `dialogInstance.returnValue = 'myReturnValue';\n  var myReturnValue = dialogInstance.returnValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue`"}, :name html.HTMLDialogElement/set-return-value!, :variadic false, :file "src/html/HTMLDialogElement.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The returnValue property of the `html.HTMLDialogElement` interface\n  or sets the return value for the <dialog>, usually to indicate\n  button the user pressed to close it.\n\n  `dialogInstance.returnValue = 'myReturnValue';\n  var myReturnValue = dialogInstance.returnValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/returnValue`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLDialogElement interface provides methods to manipulate\n  elements. It inherits properties and methods from the `html.HTMLElement`"}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLFormControlsCollection, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {named-item {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFormControlsCollection.cljs", :line 6, :column 7, :end-line 6, :end-column 17, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLFormControlsCollection.namedItem() method returns the\n  or the `web.Element` in the collection whose name or id match\n  specified name, or null if no node matches.\n\n  `var item = collection.namedItem(str);\n  var item = collection[str];`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection/namedItem`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLFormControlsCollection/named-item, :variadic true, :file "src/html/HTMLFormControlsCollection.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLFormControlsCollection.namedItem() method returns the\n  or the `web.Element` in the collection whose name or id match\n  specified name, or null if no node matches.\n\n  `var item = collection.namedItem(str);\n  var item = collection[str];`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection/namedItem`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLFormControlsCollection interface represents a collection\n  HTML form control elements."}
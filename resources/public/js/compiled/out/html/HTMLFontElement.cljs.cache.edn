{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLFontElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {color {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFontElement.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete HTMLFontElement.color property is a `dom.DOMString`\n  reflects the color HTML attribute, containing either a named\n  or a color specified in the hexadecimal #RRGGBB format.\n\n  `colorString = fontObj.color;\n  fontObj.color = colorString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/color`"}, :name html.HTMLFontElement/color, :variadic false, :file "src/html/HTMLFontElement.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete HTMLFontElement.color property is a `dom.DOMString`\n  reflects the color HTML attribute, containing either a named\n  or a color specified in the hexadecimal #RRGGBB format.\n\n  `colorString = fontObj.color;\n  fontObj.color = colorString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/color`"}, set-color! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFontElement.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete HTMLFontElement.color property is a `dom.DOMString`\n  reflects the color HTML attribute, containing either a named\n  or a color specified in the hexadecimal #RRGGBB format.\n\n  `colorString = fontObj.color;\n  fontObj.color = colorString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/color`"}, :name html.HTMLFontElement/set-color!, :variadic false, :file "src/html/HTMLFontElement.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete HTMLFontElement.color property is a `dom.DOMString`\n  reflects the color HTML attribute, containing either a named\n  or a color specified in the hexadecimal #RRGGBB format.\n\n  `colorString = fontObj.color;\n  fontObj.color = colorString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/color`"}, face {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFontElement.cljs", :line 35, :column 7, :end-line 35, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete HTMLFontElement.face property is a `dom.DOMString`\n  reflects the face HTML attribute, containing a comma-separated\n  of one or more font names.\n\n  `faceString = fontObj.face;\n  fontObj.face = faceString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/face`"}, :name html.HTMLFontElement/face, :variadic false, :file "src/html/HTMLFontElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete HTMLFontElement.face property is a `dom.DOMString`\n  reflects the face HTML attribute, containing a comma-separated\n  of one or more font names.\n\n  `faceString = fontObj.face;\n  fontObj.face = faceString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/face`"}, set-face! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFontElement.cljs", :line 49, :column 7, :end-line 49, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete HTMLFontElement.face property is a `dom.DOMString`\n  reflects the face HTML attribute, containing a comma-separated\n  of one or more font names.\n\n  `faceString = fontObj.face;\n  fontObj.face = faceString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/face`"}, :name html.HTMLFontElement/set-face!, :variadic false, :file "src/html/HTMLFontElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete HTMLFontElement.face property is a `dom.DOMString`\n  reflects the face HTML attribute, containing a comma-separated\n  of one or more font names.\n\n  `faceString = fontObj.face;\n  fontObj.face = faceString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/face`"}, size {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFontElement.cljs", :line 63, :column 7, :end-line 63, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete HTMLFontElement.size property is a `dom.DOMString`\n  reflects the size HTML attribute. It contains either an integer\n  in the range of 1-7 or a relative value to increase/decrease\n  value of the size attribute of the `web.<basefont>` element.\n\n  `sizeString = fontObj.size;\n  fontObj.size = sizeString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/size`"}, :name html.HTMLFontElement/size, :variadic false, :file "src/html/HTMLFontElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete HTMLFontElement.size property is a `dom.DOMString`\n  reflects the size HTML attribute. It contains either an integer\n  in the range of 1-7 or a relative value to increase/decrease\n  value of the size attribute of the `web.<basefont>` element.\n\n  `sizeString = fontObj.size;\n  fontObj.size = sizeString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/size`"}, set-size! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLFontElement.cljs", :line 78, :column 7, :end-line 78, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete HTMLFontElement.size property is a `dom.DOMString`\n  reflects the size HTML attribute. It contains either an integer\n  in the range of 1-7 or a relative value to increase/decrease\n  value of the size attribute of the `web.<basefont>` element.\n\n  `sizeString = fontObj.size;\n  fontObj.size = sizeString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/size`"}, :name html.HTMLFontElement/set-size!, :variadic false, :file "src/html/HTMLFontElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete HTMLFontElement.size property is a `dom.DOMString`\n  reflects the size HTML attribute. It contains either an integer\n  in the range of 1-7 or a relative value to increase/decrease\n  value of the size attribute of the `web.<basefont>` element.\n\n  `sizeString = fontObj.size;\n  fontObj.size = sizeString;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLFontElement/size`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "Implements the document object model (DOM) representation of\n  font element. The HTML Font Element `web.<font>` defines the\n  size, font face and color of text."}
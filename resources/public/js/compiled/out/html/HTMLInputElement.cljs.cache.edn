{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLInputElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {webkit-entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 148, :column 7, :end-line 148, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The read-only webkitEntries property of the `html.HTMLInputElement`\n  contains an array of file system entries (as objects based on\n  representing files and/or directories selected by the user using\n  `web.<input>` element of type file, but only if that selection\n  made using drag-and-drop: selecting a file in the dialog will\n  the property empty (bug\n\n  `var entries = HTMLInputElement.webkitEntries;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitEntries`"}, :name html.HTMLInputElement/webkit-entries, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only webkitEntries property of the `html.HTMLInputElement`\n  contains an array of file system entries (as objects based on\n  representing files and/or directories selected by the user using\n  `web.<input>` element of type file, but only if that selection\n  made using drag-and-drop: selecting a file in the dialog will\n  the property empty (bug\n\n  `var entries = HTMLInputElement.webkitEntries;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitEntries`"}, select {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 31, :column 7, :end-line 31, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLInputElement.select() method selects all the text in\n  `web.<textarea>` element or in an `web.<input>` element that\n  a text field.\n\n  `element.select();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select`"}, :name html.HTMLInputElement/select, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLInputElement.select() method selects all the text in\n  `web.<textarea>` element or in an `web.<input>` element that\n  a text field.\n\n  `element.select();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/select`"}, moz-set-file-name-array {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([this a-file-names a-length])), :doc "Method.\n\n  The HTMLInputElement.mozSetFileNameArray() method sets the names\n  the files that selected on an HTML input element.\n\n  `inputElement.mozSetFileNameArray(aFileNames, aLength);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/mozSetFileNameArray`"}, :name html.HTMLInputElement/moz-set-file-name-array, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 30, :method-params ([this a-file-names a-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this a-file-names a-length])), :doc "Method.\n\n  The HTMLInputElement.mozSetFileNameArray() method sets the names\n  the files that selected on an HTML input element.\n\n  `inputElement.mozSetFileNameArray(aFileNames, aLength);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/mozSetFileNameArray`"}, labels {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 70, :column 7, :end-line 70, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLInputElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<input>`\n\n  `var labelElements = input.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels`"}, :name html.HTMLInputElement/labels, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLInputElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<input>`\n\n  `var labelElements = input.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels`"}, webkitdirectory {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 116, :column 7, :end-line 116, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLInputElement.webkitdirectory is a property that reflects\n  webkitdirectory HTML attribute and indicates that the `web.<input>`\n  should let the user select directories instead of files. When\n  directory is selected, the directory and its entire hierarchy\n  contents are included in the set of selected items. The selected\n  system entries can be obtained using the `web.webkitEntries`\n\n  `HTMLInputElement.webkitdirectory = boolValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory`"}, :name html.HTMLInputElement/webkitdirectory, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLInputElement.webkitdirectory is a property that reflects\n  webkitdirectory HTML attribute and indicates that the `web.<input>`\n  should let the user select directories instead of files. When\n  directory is selected, the directory and its entire hierarchy\n  contents are included in the set of selected items. The selected\n  system entries can be obtained using the `web.webkitEntries`\n\n  `HTMLInputElement.webkitdirectory = boolValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory`"}, set-range-text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 44, :column 7, :end-line 44, :end-column 21, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLInputElement.setRangeText() method replaces a range of\n  in an `web.<input>` or `web.<textarea>` element with a new string.\n\n  `element.setRangeText(replacement);\n  element.setRangeText(replacement, start, end [, selectMode]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLInputElement/set-range-text, :variadic true, :file "src/html/HTMLInputElement.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLInputElement.setRangeText() method replaces a range of\n  in an `web.<input>` or `web.<textarea>` element with a new string.\n\n  `element.setRangeText(replacement);\n  element.setRangeText(replacement, start, end [, selectMode]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setRangeText`"}, set-webkit-entries! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 164, :column 7, :end-line 164, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only webkitEntries property of the `html.HTMLInputElement`\n  contains an array of file system entries (as objects based on\n  representing files and/or directories selected by the user using\n  `web.<input>` element of type file, but only if that selection\n  made using drag-and-drop: selecting a file in the dialog will\n  the property empty (bug\n\n  `var entries = HTMLInputElement.webkitEntries;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitEntries`"}, :name html.HTMLInputElement/set-webkit-entries!, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only webkitEntries property of the `html.HTMLInputElement`\n  contains an array of file system entries (as objects based on\n  representing files and/or directories selected by the user using\n  `web.<input>` element of type file, but only if that selection\n  made using drag-and-drop: selecting a file in the dialog will\n  the property empty (bug\n\n  `var entries = HTMLInputElement.webkitEntries;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitEntries`"}, set-multiple! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 105, :column 7, :end-line 105, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLInputElement.multiple property indicates if an input\n  have more than one value. Firefox currently only supports multiple\n  <input type=\\\"file\\\">.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/multiple`"}, :name html.HTMLInputElement/set-multiple!, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLInputElement.multiple property indicates if an input\n  have more than one value. Firefox currently only supports multiple\n  <input type=\\\"file\\\">.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/multiple`"}, set-labels! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 82, :column 7, :end-line 82, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLInputElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<input>`\n\n  `var labelElements = input.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels`"}, :name html.HTMLInputElement/set-labels!, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLInputElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<input>`\n\n  `var labelElements = input.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/labels`"}, multiple {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 94, :column 7, :end-line 94, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLInputElement.multiple property indicates if an input\n  have more than one value. Firefox currently only supports multiple\n  <input type=\\\"file\\\">.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/multiple`"}, :name html.HTMLInputElement/multiple, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLInputElement.multiple property indicates if an input\n  have more than one value. Firefox currently only supports multiple\n  <input type=\\\"file\\\">.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/multiple`"}, set-selection-range {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 57, :column 7, :end-line 57, :end-column 26, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLInputElement.setSelectionRange() method sets the start\n  end positions of the current text selection in an `web.<input>`\n  `web.<textarea>` element.\n\n  `element.setSelectionRange(selectionStart, selectionEnd [, selectionDirection]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLInputElement/set-selection-range, :variadic true, :file "src/html/HTMLInputElement.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLInputElement.setSelectionRange() method sets the start\n  end positions of the current text selection in an `web.<input>`\n  `web.<textarea>` element.\n\n  `element.setSelectionRange(selectionStart, selectionEnd [, selectionDirection]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange`"}, set-webkitdirectory! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 132, :column 7, :end-line 132, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLInputElement.webkitdirectory is a property that reflects\n  webkitdirectory HTML attribute and indicates that the `web.<input>`\n  should let the user select directories instead of files. When\n  directory is selected, the directory and its entire hierarchy\n  contents are included in the set of selected items. The selected\n  system entries can be obtained using the `web.webkitEntries`\n\n  `HTMLInputElement.webkitdirectory = boolValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory`"}, :name html.HTMLInputElement/set-webkitdirectory!, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLInputElement.webkitdirectory is a property that reflects\n  webkitdirectory HTML attribute and indicates that the `web.<input>`\n  should let the user select directories instead of files. When\n  directory is selected, the directory and its entire hierarchy\n  contents are included in the set of selected items. The selected\n  system entries can be obtained using the `web.webkitEntries`\n\n  `HTMLInputElement.webkitdirectory = boolValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory`"}, moz-get-file-name-array {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLInputElement.cljs", :line 6, :column 7, :end-line 6, :end-column 30, :arglists (quote ([this a-length a-file-names])), :doc "Method.\n\n  The HTMLInputElement.mozGetFileNameArray() method returns an\n  of the names of the files that were selected by the user on an\n  input element.\n\n  `inputElement.mozGetFileNameArray(aLength, aFileNames);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/mozGetFileNameArray`"}, :name html.HTMLInputElement/moz-get-file-name-array, :variadic false, :file "src/html/HTMLInputElement.cljs", :end-column 30, :method-params ([this a-length a-file-names]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this a-length a-file-names])), :doc "Method.\n\n  The HTMLInputElement.mozGetFileNameArray() method returns an\n  of the names of the files that were selected by the user on an\n  input element.\n\n  `inputElement.mozGetFileNameArray(aLength, aFileNames);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/mozGetFileNameArray`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLInputElement interface provides special properties and\n  for manipulating the options, layout, and presentation of `web.<input>`"}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name html.HTMLLabelElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {control {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLLabelElement.cljs", :line 7, :column 7, :end-line 7, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The read-only HTMLLabelElement.control property returns a reference\n  the control (in the form of an object of type `html.HTMLElement`\n  one of its derivatives) with which the `web.<label>` element\n  associated, or null if the label isn't associated with a control.\n\n  `control = HTMLLabelElement.control`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control`"}, :name html.HTMLLabelElement/control, :variadic false, :file "src/html/HTMLLabelElement.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only HTMLLabelElement.control property returns a reference\n  the control (in the form of an object of type `html.HTMLElement`\n  one of its derivatives) with which the `web.<label>` element\n  associated, or null if the label isn't associated with a control.\n\n  `control = HTMLLabelElement.control`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control`"}, form {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLLabelElement.cljs", :line 21, :column 7, :end-line 21, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only HTMLLabelElement.form property returns an `html.HTMLFormElement`\n  which represents the form of which the label's associated control\n  a part, or null if there is either no associated control, or\n  that control isn't in a form.\n\n  `form = HTMLLabelElement.form`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/form`"}, :name html.HTMLLabelElement/form, :variadic false, :file "src/html/HTMLLabelElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only HTMLLabelElement.form property returns an `html.HTMLFormElement`\n  which represents the form of which the label's associated control\n  a part, or null if there is either no associated control, or\n  that control isn't in a form.\n\n  `form = HTMLLabelElement.form`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/form`"}, html-for {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLLabelElement.cljs", :line 35, :column 7, :end-line 35, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLLabelElement.htmlFor property reflects the value of the\n  content property. That means that this script-accessible property\n  used to set and read the value of the content property for, which\n  the ID of the label's associated control element.\n\n  `controlId = HTMLLabelElement.htmlFor\n\n  HTMLLabelElement.htmlFor = newId`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor`"}, :name html.HTMLLabelElement/html-for, :variadic false, :file "src/html/HTMLLabelElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLLabelElement.htmlFor property reflects the value of the\n  content property. That means that this script-accessible property\n  used to set and read the value of the content property for, which\n  the ID of the label's associated control element.\n\n  `controlId = HTMLLabelElement.htmlFor\n\n  HTMLLabelElement.htmlFor = newId`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor`"}, set-html-for! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLLabelElement.cljs", :line 51, :column 7, :end-line 51, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLLabelElement.htmlFor property reflects the value of the\n  content property. That means that this script-accessible property\n  used to set and read the value of the content property for, which\n  the ID of the label's associated control element.\n\n  `controlId = HTMLLabelElement.htmlFor\n\n  HTMLLabelElement.htmlFor = newId`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor`"}, :name html.HTMLLabelElement/set-html-for!, :variadic false, :file "src/html/HTMLLabelElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLLabelElement.htmlFor property reflects the value of the\n  content property. That means that this script-accessible property\n  used to set and read the value of the content property for, which\n  the ID of the label's associated control element.\n\n  `controlId = HTMLLabelElement.htmlFor\n\n  HTMLLabelElement.htmlFor = newId`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/htmlFor`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLLabelElement interface gives access to properties specific\n  `web.<label>` elements. It inherits methods and properties from\n  base `html.HTMLElement` interface."}
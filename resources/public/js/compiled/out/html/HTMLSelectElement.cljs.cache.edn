{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{remove type}, :name html.HTMLSelectElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {form {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 148, :column 7, :end-line 148, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.form read-only property returns a `html.HTMLFormElement`\n  the form that this element is associated with. If the element\n  not associated with of a `web.<form>` element, then it returns\n\n  `Edit\n\n\n\n  aForm = aSelectElement.form.selectname;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/form`"}, :name html.HTMLSelectElement/form, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.form read-only property returns a `html.HTMLFormElement`\n  the form that this element is associated with. If the element\n  not associated with of a `web.<form>` element, then it returns\n\n  `Edit\n\n\n\n  aForm = aSelectElement.form.selectname;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/form`"}, options {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 189, :column 7, :end-line 189, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.options read-only property returns a `html.HTMLOptionsCollection`\n  the `web.<option>` elements contained by the `web.<select>` element.\n\n  `var options = select.options;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/options`"}, :name html.HTMLSelectElement/options, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.options read-only property returns a `html.HTMLOptionsCollection`\n  the `web.<option>` elements contained by the `web.<select>` element.\n\n  `var options = select.options;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/options`"}, add {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 7, :column 7, :end-line 7, :end-column 10, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLSelectElement.add() method adds an element to the collection\n  option elements for this select element.\n\n  `collection.add(item[, before]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/add`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLSelectElement/add, :variadic true, :file "src/html/HTMLSelectElement.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLSelectElement.add() method adds an element to the collection\n  option elements for this select element.\n\n  `collection.add(item[, before]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/add`"}, named-item {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 48, :column 7, :end-line 48, :end-column 17, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLSelectElement.namedItem() method returns the `html.HTMLOptionElement`\n  to the `html.HTMLOptionElement` whose name or id match the specified\n  or null if no option matches.\n\n  `var item = collection.namedItem(str);\n  var item = collection[str];`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/namedItem`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLSelectElement/named-item, :variadic true, :file "src/html/HTMLSelectElement.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLSelectElement.namedItem() method returns the `html.HTMLOptionElement`\n  to the `html.HTMLOptionElement` whose name or id match the specified\n  or null if no option matches.\n\n  `var item = collection.namedItem(str);\n  var item = collection[str];`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/namedItem`"}, selected-index {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 201, :column 7, :end-line 201, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.selectedIndex is a long that reflects the\n  of the first or last selected `web.<option>` element, depending\n  the value of multiple. The value -1 indicates that no element\n  selected.\n\n  `var index = selectElem.selectedIndex;\n  selectElem.selectedIndex = index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex`"}, :name html.HTMLSelectElement/selected-index, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.selectedIndex is a long that reflects the\n  of the first or last selected `web.<option>` element, depending\n  the value of multiple. The value -1 indicates that no element\n  selected.\n\n  `var index = selectElem.selectedIndex;\n  selectElem.selectedIndex = index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex`"}, labels {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 165, :column 7, :end-line 165, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<select>`\n\n  `var labelElements = select.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/labels`"}, :name html.HTMLSelectElement/labels, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<select>`\n\n  `var labelElements = select.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/labels`"}, remove {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 62, :column 7, :end-line 62, :end-column 13, :arglists (quote ([this index])), :doc "Method.\n\n  The HTMLSelectElement.remove() method removes the element at\n  specified index from the options collection for this select element.\n\n  `collection.remove(index);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/remove`"}, :name html.HTMLSelectElement/remove, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 13, :method-params ([this index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this index])), :doc "Method.\n\n  The HTMLSelectElement.remove() method removes the element at\n  specified index from the options collection for this select element.\n\n  `collection.remove(index);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/remove`"}, set-autofocus! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 100, :column 7, :end-line 100, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.autofocus property is a `web.Boolean` that\n  the autofocus HTML attribute, which indicates whether the associated\n  element will get input focus when the page loads, unless the\n  overrides it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/autofocus`"}, :name html.HTMLSelectElement/set-autofocus!, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.autofocus property is a `web.Boolean` that\n  the autofocus HTML attribute, which indicates whether the associated\n  element will get input focus when the page loads, unless the\n  overrides it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/autofocus`"}, check-validity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 19, :column 7, :end-line 19, :end-column 21, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLSelectElement.checkValidity() method checks whether the\n  has any constraints and whether it satisfies them. If the element\n  its constraints, the browser fires a cancelable invalid event\n  the element, and then returns false.\n\n  `var result = selectElt.checkValidity();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/checkValidity`"}, :name html.HTMLSelectElement/check-validity, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLSelectElement.checkValidity() method checks whether the\n  has any constraints and whether it satisfies them. If the element\n  its constraints, the browser fires a cancelable invalid event\n  the element, and then returns false.\n\n  `var result = selectElt.checkValidity();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/checkValidity`"}, disabled {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 112, :column 7, :end-line 112, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.disabled Is a Boolean that reflects the\n  HTML attribute, which indicates whether the control is disabled.\n  it is disabled, it does not accept clicks. A disabled element\n  unusable and un-clickable.\n\n  `Edit\n\n\n\n  aSelectElement.disabled = aBool;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/disabled`"}, :name html.HTMLSelectElement/disabled, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.disabled Is a Boolean that reflects the\n  HTML attribute, which indicates whether the control is disabled.\n  it is disabled, it does not accept clicks. A disabled element\n  unusable and un-clickable.\n\n  `Edit\n\n\n\n  aSelectElement.disabled = aBool;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/disabled`"}, set-custom-validity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 74, :column 7, :end-line 74, :end-column 26, :arglists (quote ([this string])), :doc "Method.\n\n  The HTMLSelectElement.setCustomValidity() method sets the custom\n  message for the selection element to the specified message. Use\n  empty string to indicate that the element does not have a custom\n  error.\n\n  `selectElt.setCustomValidity(string);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/setCustomValidity`"}, :name html.HTMLSelectElement/set-custom-validity, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 26, :method-params ([this string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this string])), :doc "Method.\n\n  The HTMLSelectElement.setCustomValidity() method sets the custom\n  message for the selection element to the specified message. Use\n  empty string to indicate that the element does not have a custom\n  error.\n\n  `selectElt.setCustomValidity(string);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/setCustomValidity`"}, set-labels! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 177, :column 7, :end-line 177, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<select>`\n\n  `var labelElements = select.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/labels`"}, :name html.HTMLSelectElement/set-labels!, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.labels read-only property returns a `web.NodeList`\n  the `web.<label>` elements associated with the `web.<select>`\n\n  `var labelElements = select.labels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/labels`"}, selected-options {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 231, :column 7, :end-line 231, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `html.HTMLSelectElement` property selectedOptions\n  a list of the `web.<option>` elements contained within the `web.<select>`\n  that are currently selected. The list of selected options is\n  `html.HTMLCollection` object with one entry per currently selected\n\n  `var selectedCollection = HTMLSelectElement.selectedOptions;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions`"}, :name html.HTMLSelectElement/selected-options, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `html.HTMLSelectElement` property selectedOptions\n  a list of the `web.<option>` elements contained within the `web.<select>`\n  that are currently selected. The list of selected options is\n  `html.HTMLCollection` object with one entry per currently selected\n\n  `var selectedCollection = HTMLSelectElement.selectedOptions;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions`"}, set-selected-index! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 216, :column 7, :end-line 216, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.selectedIndex is a long that reflects the\n  of the first or last selected `web.<option>` element, depending\n  the value of multiple. The value -1 indicates that no element\n  selected.\n\n  `var index = selectElem.selectedIndex;\n  selectElem.selectedIndex = index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex`"}, :name html.HTMLSelectElement/set-selected-index!, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.selectedIndex is a long that reflects the\n  of the first or last selected `web.<option>` element, depending\n  the value of multiple. The value -1 indicates that no element\n  selected.\n\n  `var index = selectElem.selectedIndex;\n  selectElem.selectedIndex = index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex`"}, item {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  The HTMLSelectElement.item() method returns the `web.Element`\n  to the `html.HTMLOptionElement` whose position in the options\n  corresponds to the index given in the parameter, or null if there\n  none.\n\n  `var item = collection.item(index);\n  var item = collection[index];`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/item`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name html.HTMLSelectElement/item, :variadic true, :file "src/html/HTMLSelectElement.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The HTMLSelectElement.item() method returns the `web.Element`\n  to the `html.HTMLOptionElement` whose position in the options\n  corresponds to the index given in the parameter, or null if there\n  none.\n\n  `var item = collection.item(index);\n  var item = collection[index];`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/item`"}, set-disabled! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 130, :column 7, :end-line 130, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.disabled Is a Boolean that reflects the\n  HTML attribute, which indicates whether the control is disabled.\n  it is disabled, it does not accept clicks. A disabled element\n  unusable and un-clickable.\n\n  `Edit\n\n\n\n  aSelectElement.disabled = aBool;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/disabled`"}, :name html.HTMLSelectElement/set-disabled!, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLSelectElement.disabled Is a Boolean that reflects the\n  HTML attribute, which indicates whether the control is disabled.\n  it is disabled, it does not accept clicks. A disabled element\n  unusable and un-clickable.\n\n  `Edit\n\n\n\n  aSelectElement.disabled = aBool;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/disabled`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 245, :column 7, :end-line 245, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.type read-only property returns the form\n  type.\n\n  `var str = selectElt.type;\n\n  The possible values are:\n\n\n  \\\"select-multiple\\\" if multiple values can be selected.\n  \\\"select-one\\\" if only one value can be selected.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/type`"}, :name html.HTMLSelectElement/type, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.type read-only property returns the form\n  type.\n\n  `var str = selectElt.type;\n\n  The possible values are:\n\n\n  \\\"select-multiple\\\" if multiple values can be selected.\n  \\\"select-one\\\" if only one value can be selected.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/type`"}, autofocus {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLSelectElement.cljs", :line 88, :column 7, :end-line 88, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.autofocus property is a `web.Boolean` that\n  the autofocus HTML attribute, which indicates whether the associated\n  element will get input focus when the page loads, unless the\n  overrides it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/autofocus`"}, :name html.HTMLSelectElement/autofocus, :variadic false, :file "src/html/HTMLSelectElement.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLSelectElement.autofocus property is a `web.Boolean` that\n  the autofocus HTML attribute, which indicates whether the associated\n  element will get input focus when the page loads, unless the\n  overrides it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/autofocus`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLSelectElement interface represents a `web.<select>` HTML\n  These elements also share all of the properties and methods of\n  HTML elements via the `html.HTMLElement` interface."}
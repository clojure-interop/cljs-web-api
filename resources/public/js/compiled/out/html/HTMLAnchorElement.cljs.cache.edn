{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{hash}, :name html.HTMLAnchorElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-username! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 412, :column 7, :end-line 412, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, :name html.HTMLAnchorElement/set-username!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 412, :end-line 412, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, set-rel-list! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 357, :column 7, :end-line 357, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.relList read-only property reflects the\n  attribute. It is a live `dom.DOMTokenList` containing the set\n  link types indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.relList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/relList`"}, :name html.HTMLAnchorElement/set-rel-list!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 357, :end-line 357, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.relList read-only property reflects the\n  attribute. It is a live `dom.DOMTokenList` containing the set\n  link types indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.relList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/relList`"}, download {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 46, :column 7, :end-line 46, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.download property is a `dom.DOMString`\n  that the linked resource is intended to be downloaded rather\n  displayed in the browser. The value, if any, specifies the default\n  name for use in labeling the resource in a local file system.\n  the name is not a valid file name in the underlying OS, the browser\n  adjust it.\n\n  `var dnload = anchorElt.download;\n  anchorElt.download = dnload;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/download`"}, :name html.HTMLAnchorElement/download, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.download property is a `dom.DOMString`\n  that the linked resource is intended to be downloaded rather\n  displayed in the browser. The value, if any, specifies the default\n  name for use in labeling the resource in a local file system.\n  the name is not a valid file name in the underlying OS, the browser\n  adjust it.\n\n  `var dnload = anchorElt.download;\n  anchorElt.download = dnload;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/download`"}, href {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 158, :column 7, :end-line 158, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, :name html.HTMLAnchorElement/href, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, set-host! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 118, :column 7, :end-line 118, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, :name html.HTMLAnchorElement/set-host!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, rel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 313, :column 7, :end-line 313, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.rel property reflects the rel attribute.\n  is a `dom.DOMString` containing a space-separated list of link\n  indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.rel;\n  anchorElt.rel = relstr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/rel`"}, :name html.HTMLAnchorElement/rel, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.rel property reflects the rel attribute.\n  is a `dom.DOMString` containing a space-separated list of link\n  indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.rel;\n  anchorElt.rel = relstr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/rel`"}, set-download! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 63, :column 7, :end-line 63, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.download property is a `dom.DOMString`\n  that the linked resource is intended to be downloaded rather\n  displayed in the browser. The value, if any, specifies the default\n  name for use in labeling the resource in a local file system.\n  the name is not a valid file name in the underlying OS, the browser\n  adjust it.\n\n  `var dnload = anchorElt.download;\n  anchorElt.download = dnload;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/download`"}, :name html.HTMLAnchorElement/set-download!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.download property is a `dom.DOMString`\n  that the linked resource is intended to be downloaded rather\n  displayed in the browser. The value, if any, specifies the default\n  name for use in labeling the resource in a local file system.\n  the name is not a valid file name in the underlying OS, the browser\n  adjust it.\n\n  `var dnload = anchorElt.download;\n  anchorElt.download = dnload;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/download`"}, rel-list {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 343, :column 7, :end-line 343, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.relList read-only property reflects the\n  attribute. It is a live `dom.DOMTokenList` containing the set\n  link types indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.relList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/relList`"}, :name html.HTMLAnchorElement/rel-list, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 343, :end-line 343, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.relList read-only property reflects the\n  attribute. It is a live `dom.DOMTokenList` containing the set\n  link types indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.relList;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/relList`"}, hash {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 80, :column 7, :end-line 80, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, :name html.HTMLAnchorElement/hash, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, set-hostname! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 145, :column 7, :end-line 145, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, :name html.HTMLAnchorElement/set-hostname!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 259, :column 7, :end-line 259, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, :name html.HTMLAnchorElement/protocol, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 259, :end-line 259, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, password {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 190, :column 7, :end-line 190, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.password property is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password`"}, :name html.HTMLAnchorElement/password, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.password property is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/password`"}, to-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLHyperlinkElementUtils.toString() stringifier method returns\n  `web.USVString` containing the whole URL. It is a read-only version\n  `html.HTMLHyperlinkElementUtils.href`.\n\n  `string = object.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString`"}, :name html.HTMLAnchorElement/to-string, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLHyperlinkElementUtils.toString() stringifier method returns\n  `web.USVString` containing the whole URL. It is a read-only version\n  `html.HTMLHyperlinkElementUtils.href`.\n\n  `string = object.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString`"}, set-pathname! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 217, :column 7, :end-line 217, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, :name html.HTMLAnchorElement/set-pathname!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, set-hash! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 92, :column 7, :end-line 92, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, :name html.HTMLAnchorElement/set-hash!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hash property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash`"}, pathname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 203, :column 7, :end-line 203, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, :name html.HTMLAnchorElement/pathname, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.pathname property is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname`"}, username {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 399, :column 7, :end-line 399, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, :name html.HTMLAnchorElement/username, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.username property is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/username`"}, set-rel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 328, :column 7, :end-line 328, :end-column 15, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.rel property reflects the rel attribute.\n  is a `dom.DOMString` containing a space-separated list of link\n  indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.rel;\n  anchorElt.rel = relstr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/rel`"}, :name html.HTMLAnchorElement/set-rel!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 328, :end-line 328, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.rel property reflects the rel attribute.\n  is a `dom.DOMString` containing a space-separated list of link\n  indicating the relationship between the resource represented\n  the `web.<a>` element and the current document.\n\n  `var relstr = anchorElt.rel;\n  anchorElt.rel = relstr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/rel`"}, hostname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 132, :column 7, :end-line 132, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, :name html.HTMLAnchorElement/hostname, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.hostname property is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hostname`"}, search {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 371, :column 7, :end-line 371, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, :name html.HTMLAnchorElement/search, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 371, :end-line 371, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, port {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 231, :column 7, :end-line 231, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}, :name html.HTMLAnchorElement/port, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}, set-search! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 385, :column 7, :end-line 385, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, :name html.HTMLAnchorElement/set-search!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.search property is a search string,\n  called a query string, that is `web.USVString` containing a '?'\n  by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search`"}, set-referrer-policy! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 299, :column 7, :end-line 299, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.referrerPolicy property reflect the HTML\n  attribute of the `web.<a>` element defining which referrer is\n  when fetching the resource.\n\n  `refStr = anchorElt.referrerPolicy;\n  anchorElt.referrerPolicy = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/referrerPolicy`"}, :name html.HTMLAnchorElement/set-referrer-policy!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLAnchorElement.referrerPolicy property reflect the HTML\n  attribute of the `web.<a>` element defining which referrer is\n  when fetching the resource.\n\n  `refStr = anchorElt.referrerPolicy;\n  anchorElt.referrerPolicy = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/referrerPolicy`"}, host {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 104, :column 7, :end-line 104, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, :name html.HTMLAnchorElement/host, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.host property is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/host`"}, set-href! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 168, :column 7, :end-line 168, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, :name html.HTMLAnchorElement/set-href!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.href property is a `web.USVString`\n  the whole URL.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/href`"}, referrer-policy {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 285, :column 7, :end-line 285, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.referrerPolicy property reflect the HTML\n  attribute of the `web.<a>` element defining which referrer is\n  when fetching the resource.\n\n  `refStr = anchorElt.referrerPolicy;\n  anchorElt.referrerPolicy = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/referrerPolicy`"}, :name html.HTMLAnchorElement/referrer-policy, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLAnchorElement.referrerPolicy property reflect the HTML\n  attribute of the `web.<a>` element defining which referrer is\n  when fetching the resource.\n\n  `refStr = anchorElt.referrerPolicy;\n  anchorElt.referrerPolicy = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement/referrerPolicy`"}, blur {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 21, :column 7, :end-line 21, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLElement.blur() method removes keyboard focus from the\n  element.\n\n  `element.blur();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/blur`"}, :name html.HTMLAnchorElement/blur, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The HTMLElement.blur() method removes keyboard focus from the\n  element.\n\n  `element.blur();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/blur`"}, focus {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([this options])), :doc "Method.\n\n  The HTMLElement.focus() method sets focus on the specified element,\n  it can be focused. The focused element is the element which will\n  keyboard and similar events by default.\n\n  `element.focus(options); // Object parameter`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus`"}, :name html.HTMLAnchorElement/focus, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 12, :method-params ([this options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this options])), :doc "Method.\n\n  The HTMLElement.focus() method sets focus on the specified element,\n  it can be focused. The focused element is the element which will\n  keyboard and similar events by default.\n\n  `element.focus(options); // Object parameter`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus`"}, set-protocol! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 272, :column 7, :end-line 272, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, :name html.HTMLAnchorElement/set-protocol!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.protocol property is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/protocol`"}, origin {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 178, :column 7, :end-line 178, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.origin read-only property is a\n  containing the Unicode serialization of the origin of the represented\n\n  `string = object.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/origin`"}, :name html.HTMLAnchorElement/origin, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.origin read-only property is a\n  containing the Unicode serialization of the origin of the represented\n\n  `string = object.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/origin`"}, set-port! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLAnchorElement.cljs", :line 245, :column 7, :end-line 245, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}, :name html.HTMLAnchorElement/set-port!, :variadic false, :file "src/html/HTMLAnchorElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLHyperlinkElementUtils.port property is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/port`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLAnchorElement interface represents hyperlink elements\n  provides special properties and methods (beyond those of the\n  `html.HTMLElement` object interface that they inherit from) for\n  the layout and presentation of such elements."}
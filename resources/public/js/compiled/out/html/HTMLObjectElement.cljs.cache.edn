{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name type}, :name html.HTMLObjectElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {form {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 113, :column 7, :end-line 113, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The form read-only property of the `html.HTMLObjectElement` interface\n  a `html.HTMLFormElement` representing the object element's form\n  or null if there isn't one.\n\n  `var HTMLFormElement = HTMLObjectElement.form;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/form`"}, :name html.HTMLObjectElement/form, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The form read-only property of the `html.HTMLObjectElement` interface\n  a `html.HTMLFormElement` representing the object element's form\n  or null if there isn't one.\n\n  `var HTMLFormElement = HTMLObjectElement.form;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/form`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 209, :column 7, :end-line 209, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The type property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the type HTML attribute, specifying\n  MIME type of the resource.\n\n  `var String = HTMLObjectElement.type\n  HTMLObjectElement.type = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/type`"}, :name html.HTMLObjectElement/set-type!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The type property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the type HTML attribute, specifying\n  MIME type of the resource.\n\n  `var String = HTMLObjectElement.type\n  HTMLObjectElement.type = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/type`"}, type-must-match {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 223, :column 7, :end-line 223, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLObjectElement.typeMustMatch property is a `web.Boolean`\n  reflects the typemustmatch attribute of the `web.<object>` element.\n  indicates if the resource linked by it must match the MIME type\n  by `html.HTMLObjectElement.type` in order for this resource to\n  used.\n\n  `var mustMatch = obj.typeMustMatch;\n  obj.typeMustMatch = mustMatch;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/typeMustMatch`"}, :name html.HTMLObjectElement/type-must-match, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The HTMLObjectElement.typeMustMatch property is a `web.Boolean`\n  reflects the typemustmatch attribute of the `web.<object>` element.\n  indicates if the resource linked by it must match the MIME type\n  by `html.HTMLObjectElement.type` in order for this resource to\n  used.\n\n  `var mustMatch = obj.typeMustMatch;\n  obj.typeMustMatch = mustMatch;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/typeMustMatch`"}, set-width! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 355, :column 7, :end-line 355, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The width property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the width HTML attribute, specifying\n  displayed width of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.width;\n  HTMLObjectElement.width = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/width`"}, :name html.HTMLObjectElement/set-width!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The width property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the width HTML attribute, specifying\n  displayed width of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.width;\n  HTMLObjectElement.width = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/width`"}, height {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 139, :column 7, :end-line 139, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The height property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the height HTML attribute, specifying\n  displayed height of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.height;\n  HTMLObjectElement.height = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/height`"}, :name html.HTMLObjectElement/height, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The height property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the height HTML attribute, specifying\n  displayed height of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.height;\n  HTMLObjectElement.height = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/height`"}, validity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 315, :column 7, :end-line 315, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The validity read-only property of the `html.HTMLObjectElement`\n  returns a `web.ValidityState` with the validity states that this\n  is in.\n\n  `var ValidityState = HTMLObjectElement.validity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/%5Cvalidity`"}, :name html.HTMLObjectElement/validity, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The validity read-only property of the `html.HTMLObjectElement`\n  returns a `web.ValidityState` with the validity states that this\n  is in.\n\n  `var ValidityState = HTMLObjectElement.validity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/%5Cvalidity`"}, set-validation-message! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 299, :column 7, :end-line 299, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The validationMessage read-only property of the `html.HTMLObjectElement`\n  returns a `dom.DOMString` representing a localized message that\n  the validation constraints that the control does not satisfy\n  any). This is the empty string if the control is not a candidate\n  constraint validation (willValidate is false), or it satisfies\n  constraints.\n\n  `var String = HTMLObjectElement.validationMessage;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/validationMessage`"}, :name html.HTMLObjectElement/set-validation-message!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The validationMessage read-only property of the `html.HTMLObjectElement`\n  returns a `dom.DOMString` representing a localized message that\n  the validation constraints that the control does not satisfy\n  any). This is the empty string if the control is not a candidate\n  constraint validation (willValidate is false), or it satisfies\n  constraints.\n\n  `var String = HTMLObjectElement.validationMessage;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/validationMessage`"}, data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 85, :column 7, :end-line 85, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The data property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the data HTML attribute, specifying\n  address of a resource's data.\n\n  `var data = HTMLObjectElement.data;\n  HTMLObjectElement.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/data`"}, :name html.HTMLObjectElement/data, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The data property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the data HTML attribute, specifying\n  address of a resource's data.\n\n  `var data = HTMLObjectElement.data;\n  HTMLObjectElement.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/data`"}, set-height! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 153, :column 7, :end-line 153, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The height property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the height HTML attribute, specifying\n  displayed height of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.height;\n  HTMLObjectElement.height = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/height`"}, :name html.HTMLObjectElement/set-height!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The height property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the height HTML attribute, specifying\n  displayed height of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.height;\n  HTMLObjectElement.height = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/height`"}, set-form! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 126, :column 7, :end-line 126, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The form read-only property of the `html.HTMLObjectElement` interface\n  a `html.HTMLFormElement` representing the object element's form\n  or null if there isn't one.\n\n  `var HTMLFormElement = HTMLObjectElement.form;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/form`"}, :name html.HTMLObjectElement/set-form!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The form read-only property of the `html.HTMLObjectElement` interface\n  a `html.HTMLFormElement` representing the object element's form\n  or null if there isn't one.\n\n  `var HTMLFormElement = HTMLObjectElement.form;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/form`"}, set-type-must-match! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 239, :column 7, :end-line 239, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLObjectElement.typeMustMatch property is a `web.Boolean`\n  reflects the typemustmatch attribute of the `web.<object>` element.\n  indicates if the resource linked by it must match the MIME type\n  by `html.HTMLObjectElement.type` in order for this resource to\n  used.\n\n  `var mustMatch = obj.typeMustMatch;\n  obj.typeMustMatch = mustMatch;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/typeMustMatch`"}, :name html.HTMLObjectElement/set-type-must-match!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The HTMLObjectElement.typeMustMatch property is a `web.Boolean`\n  reflects the typemustmatch attribute of the `web.<object>` element.\n  indicates if the resource linked by it must match the MIME type\n  by `html.HTMLObjectElement.type` in order for this resource to\n  used.\n\n  `var mustMatch = obj.typeMustMatch;\n  obj.typeMustMatch = mustMatch;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/typeMustMatch`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 181, :column 7, :end-line 181, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the name HTML attribute, specifying\n  name of the browsing context.\n\n  `var String = HTMLObjectElement.name;\n  HTMLObjectElement.name = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/name`"}, :name html.HTMLObjectElement/set-name!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the name HTML attribute, specifying\n  name of the browsing context.\n\n  `var String = HTMLObjectElement.name;\n  HTMLObjectElement.name = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/name`"}, check-validity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 8, :column 7, :end-line 8, :end-column 21, :arglists (quote ([this])), :doc "Method.\n\n  The checkValidity() method of the `html.HTMLObjectElement` interface\n  a `web.Boolean` that always is true, because object objects are\n  candidates for constraint validation.\n\n  `var Boolean = HTMLObjectElement.checkValidity();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/checkValidity`"}, :name html.HTMLObjectElement/check-validity, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The checkValidity() method of the `html.HTMLObjectElement` interface\n  a `web.Boolean` that always is true, because object objects are\n  candidates for constraint validation.\n\n  `var Boolean = HTMLObjectElement.checkValidity();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/checkValidity`"}, set-custom-validity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 21, :column 7, :end-line 21, :end-column 26, :arglists (quote ([this message])), :doc "Method.\n\n  The setCustomValidity() method of the `html.HTMLObjectElement`\n  sets a custom validity message for the element.\n\n  `HTMLObjectElement.setCustomValidity(message);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/setCustomValidity`"}, :name html.HTMLObjectElement/set-custom-validity, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 26, :method-params ([this message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this message])), :doc "Method.\n\n  The setCustomValidity() method of the `html.HTMLObjectElement`\n  sets a custom validity message for the element.\n\n  `HTMLObjectElement.setCustomValidity(message);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/setCustomValidity`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 167, :column 7, :end-line 167, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the name HTML attribute, specifying\n  name of the browsing context.\n\n  `var String = HTMLObjectElement.name;\n  HTMLObjectElement.name = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/name`"}, :name html.HTMLObjectElement/name, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the name HTML attribute, specifying\n  name of the browsing context.\n\n  `var String = HTMLObjectElement.name;\n  HTMLObjectElement.name = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/name`"}, content-window {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 59, :column 7, :end-line 59, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The contentWindow read-only property of the `html.HTMLObjectElement`\n  returns a `web.WindowProxy` representing the window proxy of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var WindowProxy = HTMLObjectElement.contentWindow;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentWindow`"}, :name html.HTMLObjectElement/content-window, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The contentWindow read-only property of the `html.HTMLObjectElement`\n  returns a `web.WindowProxy` representing the window proxy of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var WindowProxy = HTMLObjectElement.contentWindow;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentWindow`"}, width {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 341, :column 7, :end-line 341, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The width property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the width HTML attribute, specifying\n  displayed width of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.width;\n  HTMLObjectElement.width = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/width`"}, :name html.HTMLObjectElement/width, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The width property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the width HTML attribute, specifying\n  displayed width of the resource in CSS pixels.\n\n  `var String = HTMLObjectElement.width;\n  HTMLObjectElement.width = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/width`"}, set-validity! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 328, :column 7, :end-line 328, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The validity read-only property of the `html.HTMLObjectElement`\n  returns a `web.ValidityState` with the validity states that this\n  is in.\n\n  `var ValidityState = HTMLObjectElement.validity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/%5Cvalidity`"}, :name html.HTMLObjectElement/set-validity!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 328, :end-line 328, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The validity read-only property of the `html.HTMLObjectElement`\n  returns a `web.ValidityState` with the validity states that this\n  is in.\n\n  `var ValidityState = HTMLObjectElement.validity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/%5Cvalidity`"}, will-validate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 369, :column 7, :end-line 369, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The willValidate read-only property of the `html.HTMLObjectElement`\n  returns a `web.Boolean` that indicates whether the element is\n  candidate for constraint validation. Always false for HTMLObjectElement\n\n  `var Boolean = HTMLObjectElement.willValidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/willValidate`"}, :name html.HTMLObjectElement/will-validate, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The willValidate read-only property of the `html.HTMLObjectElement`\n  returns a `web.Boolean` that indicates whether the element is\n  candidate for constraint validation. Always false for HTMLObjectElement\n\n  `var Boolean = HTMLObjectElement.willValidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/willValidate`"}, set-will-validate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 382, :column 7, :end-line 382, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The willValidate read-only property of the `html.HTMLObjectElement`\n  returns a `web.Boolean` that indicates whether the element is\n  candidate for constraint validation. Always false for HTMLObjectElement\n\n  `var Boolean = HTMLObjectElement.willValidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/willValidate`"}, :name html.HTMLObjectElement/set-will-validate!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 382, :end-line 382, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The willValidate read-only property of the `html.HTMLObjectElement`\n  returns a `web.Boolean` that indicates whether the element is\n  candidate for constraint validation. Always false for HTMLObjectElement\n\n  `var Boolean = HTMLObjectElement.willValidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/willValidate`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 195, :column 7, :end-line 195, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The type property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the type HTML attribute, specifying\n  MIME type of the resource.\n\n  `var String = HTMLObjectElement.type\n  HTMLObjectElement.type = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/type`"}, :name html.HTMLObjectElement/type, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The type property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the type HTML attribute, specifying\n  MIME type of the resource.\n\n  `var String = HTMLObjectElement.type\n  HTMLObjectElement.type = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/type`"}, set-use-map! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 269, :column 7, :end-line 269, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The useMap property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the usemap HTML attribute, specifying\n  `web.<map>` element to use.\n\n  `var String = HTMLObjectElement.useMap;\n  HTMLObjectElement.useMap = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/useMap`"}, :name html.HTMLObjectElement/set-use-map!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The useMap property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the usemap HTML attribute, specifying\n  `web.<map>` element to use.\n\n  `var String = HTMLObjectElement.useMap;\n  HTMLObjectElement.useMap = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/useMap`"}, set-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 99, :column 7, :end-line 99, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The data property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the data HTML attribute, specifying\n  address of a resource's data.\n\n  `var data = HTMLObjectElement.data;\n  HTMLObjectElement.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/data`"}, :name html.HTMLObjectElement/set-data!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The data property of the `html.HTMLObjectElement` interface returns\n  `dom.DOMString` that reflects the data HTML attribute, specifying\n  address of a resource's data.\n\n  `var data = HTMLObjectElement.data;\n  HTMLObjectElement.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/data`"}, use-map {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 255, :column 7, :end-line 255, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The useMap property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the usemap HTML attribute, specifying\n  `web.<map>` element to use.\n\n  `var String = HTMLObjectElement.useMap;\n  HTMLObjectElement.useMap = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/useMap`"}, :name html.HTMLObjectElement/use-map, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The useMap property of the `html.HTMLObjectElement` interface\n  a `dom.DOMString` that reflects the usemap HTML attribute, specifying\n  `web.<map>` element to use.\n\n  `var String = HTMLObjectElement.useMap;\n  HTMLObjectElement.useMap = String;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/useMap`"}, content-document {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 33, :column 7, :end-line 33, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The contentDocument read-only property of the `html.HTMLObjectElement`\n  Returns a `web.Document` representing the active document of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var document = HTMLObjectElement.contentDocument;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentDocument`"}, :name html.HTMLObjectElement/content-document, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The contentDocument read-only property of the `html.HTMLObjectElement`\n  Returns a `web.Document` representing the active document of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var document = HTMLObjectElement.contentDocument;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentDocument`"}, set-content-window! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 72, :column 7, :end-line 72, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The contentWindow read-only property of the `html.HTMLObjectElement`\n  returns a `web.WindowProxy` representing the window proxy of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var WindowProxy = HTMLObjectElement.contentWindow;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentWindow`"}, :name html.HTMLObjectElement/set-content-window!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The contentWindow read-only property of the `html.HTMLObjectElement`\n  returns a `web.WindowProxy` representing the window proxy of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var WindowProxy = HTMLObjectElement.contentWindow;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentWindow`"}, set-content-document! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 46, :column 7, :end-line 46, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The contentDocument read-only property of the `html.HTMLObjectElement`\n  Returns a `web.Document` representing the active document of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var document = HTMLObjectElement.contentDocument;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentDocument`"}, :name html.HTMLObjectElement/set-content-document!, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The contentDocument read-only property of the `html.HTMLObjectElement`\n  Returns a `web.Document` representing the active document of\n  object element's nested browsing context, if any; otherwise null.\n\n  `var document = HTMLObjectElement.contentDocument;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/contentDocument`"}, validation-message {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/html/HTMLObjectElement.cljs", :line 283, :column 7, :end-line 283, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The validationMessage read-only property of the `html.HTMLObjectElement`\n  returns a `dom.DOMString` representing a localized message that\n  the validation constraints that the control does not satisfy\n  any). This is the empty string if the control is not a candidate\n  constraint validation (willValidate is false), or it satisfies\n  constraints.\n\n  `var String = HTMLObjectElement.validationMessage;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/validationMessage`"}, :name html.HTMLObjectElement/validation-message, :variadic false, :file "src/html/HTMLObjectElement.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The validationMessage read-only property of the `html.HTMLObjectElement`\n  returns a `dom.DOMString` representing a localized message that\n  the validation constraints that the control does not satisfy\n  any). This is the empty string if the control is not a candidate\n  constraint validation (willValidate is false), or it satisfies\n  constraints.\n\n  `var String = HTMLObjectElement.validationMessage;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HTMLObjectElement/validationMessage`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HTMLObjectElement interface provides special properties and\n  (beyond those on the `html.HTMLElement` interface it also has\n  to it by inheritance) for manipulating the layout and presentation\n  `web.<object>` element, representing external resources."}
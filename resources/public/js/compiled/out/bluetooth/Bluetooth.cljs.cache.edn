{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name bluetooth.Bluetooth, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {request-device {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/bluetooth/Bluetooth.cljs", :line 6, :column 7, :end-line 6, :end-column 21, :arglists (quote ([this & args])), :doc "Method.\n\n  The Bluetooth.requestDevice() method of the `bluetooth.Bluetooth`\n  returns a `web.Promise` to a `bluetooth.BluetoothDevice` object\n  the specified options. If there is no chooser UI, this method\n  the first device matching the criteria.\n\n  `Bluetooth.requestDevice([options])\n  .then(function(bluetoothDevice) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Bluetooth/requestDevice`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name bluetooth.Bluetooth/request-device, :variadic true, :file "src/bluetooth/Bluetooth.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The Bluetooth.requestDevice() method of the `bluetooth.Bluetooth`\n  returns a `web.Promise` to a `bluetooth.BluetoothDevice` object\n  the specified options. If there is no chooser UI, this method\n  the first device matching the criteria.\n\n  `Bluetooth.requestDevice([options])\n  .then(function(bluetoothDevice) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Bluetooth/requestDevice`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Bluetooth interface of the Web Bluetooth API returns a `web.Promise`\n  a `bluetooth.BluetoothDevice` object with the specified options."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name audio.AudioParam, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-min-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 157, :column 7, :end-line 157, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The minValue read-only property of the `audio.AudioParam` interface\n  the minimum possible value for the parameter's nominal (effective)\n\n  `var minVal = audioParam.minValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/minValue`"}, :name audio.AudioParam/set-min-value!, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The minValue read-only property of the `audio.AudioParam` interface\n  the minimum possible value for the parameter's nominal (effective)\n\n  `var minVal = audioParam.minValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/minValue`"}, set-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 182, :column 7, :end-line 182, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The Web Audio API's `audio.AudioParam` interface property value\n  or sets the value of this `audio.AudioParam` at the current time.\n\n  `var curValue = audioParam.value;\n  audioParam.value = newValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/value`"}, :name audio.AudioParam/set-value!, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Web Audio API's `audio.AudioParam` interface property value\n  or sets the value of this `audio.AudioParam` at the current time.\n\n  `var curValue = audioParam.value;\n  audioParam.value = newValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/value`"}, exponential-ramp-to-value-at-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 31, :column 7, :end-line 31, :end-column 40, :arglists (quote ([this value end-time])), :doc "Method.\n\n  A reference to this AudioParam object. In some browsers older\n  of this interface return void.\n\n  `var AudioParam = AudioParam.exponentialRampToValueAtTime(value, endTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime`"}, :name audio.AudioParam/exponential-ramp-to-value-at-time, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 40, :method-params ([this value end-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this value end-time])), :doc "Method.\n\n  A reference to this AudioParam object. In some browsers older\n  of this interface return void.\n\n  `var AudioParam = AudioParam.exponentialRampToValueAtTime(value, endTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/exponentialRampToValueAtTime`"}, set-max-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 133, :column 7, :end-line 133, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The maxValue read-only property of the `audio.AudioParam` interface\n  the maximum possible value for the parameter's nominal (effective)\n\n  `var maxVal = audioParam.maxValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/maxValue`"}, :name audio.AudioParam/set-max-value!, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The maxValue read-only property of the `audio.AudioParam` interface\n  the maximum possible value for the parameter's nominal (effective)\n\n  `var maxVal = audioParam.maxValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/maxValue`"}, cancel-and-hold-at-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 6, :column 7, :end-line 6, :end-column 30, :arglists (quote ([this cancel-time])), :doc "Method.\n\n  The cancelAndHoldAtTime() property of the `audio.AudioParam`\n  cancels all scheduled future changes to the AudioParam but holds\n  value at a given time until further changes are made using other\n\n  `var audioParam = AudioParam.cancelAndHoldAtTime(cancelTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime`"}, :name audio.AudioParam/cancel-and-hold-at-time, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 30, :method-params ([this cancel-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this cancel-time])), :doc "Method.\n\n  The cancelAndHoldAtTime() property of the `audio.AudioParam`\n  cancels all scheduled future changes to the AudioParam but holds\n  value at a given time until further changes are made using other\n\n  `var audioParam = AudioParam.cancelAndHoldAtTime(cancelTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/cancelAndHoldAtTime`"}, set-value-at-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 68, :column 7, :end-line 68, :end-column 24, :arglists (quote ([this value start-time])), :doc "Method.\n\n  The setValueAtTime() method of the `audio.AudioParam` interface\n  an instant change to the AudioParam value at a precise time,\n  measured against `audio.AudioContext.currentTime`. The new value\n  given in the value parameter.\n\n  `var AudioParam = AudioParam.setValueAtTime(value, startTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setValueAtTime`"}, :name audio.AudioParam/set-value-at-time, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 24, :method-params ([this value start-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this value start-time])), :doc "Method.\n\n  The setValueAtTime() method of the `audio.AudioParam` interface\n  an instant change to the AudioParam value at a precise time,\n  measured against `audio.AudioContext.currentTime`. The new value\n  given in the value parameter.\n\n  `var AudioParam = AudioParam.setValueAtTime(value, startTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setValueAtTime`"}, cancel-scheduled-values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 19, :column 7, :end-line 19, :end-column 30, :arglists (quote ([this start-time])), :doc "Method.\n\n  A reference to this AudioParam object. In some older implementations\n  method returns void.\n\n  `var AudioParam = AudioParam.cancelScheduledValues(startTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/cancelScheduledValues`"}, :name audio.AudioParam/cancel-scheduled-values, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 30, :method-params ([this start-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this start-time])), :doc "Method.\n\n  A reference to this AudioParam object. In some older implementations\n  method returns void.\n\n  `var AudioParam = AudioParam.cancelScheduledValues(startTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/cancelScheduledValues`"}, set-target-at-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 55, :column 7, :end-line 55, :end-column 25, :arglists (quote ([this target start-time time-constant])), :doc "Method.\n\n  The setTargetAtTime() method of the `audio.AudioParam` interface\n  the start of a gradual change to the AudioParam value. This is\n  for decay or release portions of ADSR envelopes.\n\n  `var paramRef = param.setTargetAtTime(target, startTime, timeConstant);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setTargetAtTime`"}, :name audio.AudioParam/set-target-at-time, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 25, :method-params ([this target start-time time-constant]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this target start-time time-constant])), :doc "Method.\n\n  The setTargetAtTime() method of the `audio.AudioParam` interface\n  the start of a gradual change to the AudioParam value. This is\n  for decay or release portions of ADSR envelopes.\n\n  `var paramRef = param.setTargetAtTime(target, startTime, timeConstant);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setTargetAtTime`"}, value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 169, :column 7, :end-line 169, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The Web Audio API's `audio.AudioParam` interface property value\n  or sets the value of this `audio.AudioParam` at the current time.\n\n  `var curValue = audioParam.value;\n  audioParam.value = newValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/value`"}, :name audio.AudioParam/value, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Web Audio API's `audio.AudioParam` interface property value\n  or sets the value of this `audio.AudioParam` at the current time.\n\n  `var curValue = audioParam.value;\n  audioParam.value = newValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/value`"}, default-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 95, :column 7, :end-line 95, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The defaultValue read-only property of the `audio.AudioParam`\n  represents the initial value of the attributes as defined by\n  specific `audio.AudioNode` creating the AudioParam.\n\n  `var defaultVal = audioParam.defaultValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/defaultValue`"}, :name audio.AudioParam/default-value, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The defaultValue read-only property of the `audio.AudioParam`\n  represents the initial value of the attributes as defined by\n  specific `audio.AudioNode` creating the AudioParam.\n\n  `var defaultVal = audioParam.defaultValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/defaultValue`"}, min-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 145, :column 7, :end-line 145, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The minValue read-only property of the `audio.AudioParam` interface\n  the minimum possible value for the parameter's nominal (effective)\n\n  `var minVal = audioParam.minValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/minValue`"}, :name audio.AudioParam/min-value, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The minValue read-only property of the `audio.AudioParam` interface\n  the minimum possible value for the parameter's nominal (effective)\n\n  `var minVal = audioParam.minValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/minValue`"}, set-default-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 108, :column 7, :end-line 108, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The defaultValue read-only property of the `audio.AudioParam`\n  represents the initial value of the attributes as defined by\n  specific `audio.AudioNode` creating the AudioParam.\n\n  `var defaultVal = audioParam.defaultValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/defaultValue`"}, :name audio.AudioParam/set-default-value!, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The defaultValue read-only property of the `audio.AudioParam`\n  represents the initial value of the attributes as defined by\n  specific `audio.AudioNode` creating the AudioParam.\n\n  `var defaultVal = audioParam.defaultValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/defaultValue`"}, set-value-curve-at-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 82, :column 7, :end-line 82, :end-column 30, :arglists (quote ([this values start-time duration])), :doc "Method.\n\n  The setValueCurveAtTime() method of the `audio.AudioParam` interface\n  the parameter's value to change following a curve defined by\n  list of values.\n\n  `var paramRef = param.setValueCurveAtTime(values, startTime, duration);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setValueCurveAtTime`"}, :name audio.AudioParam/set-value-curve-at-time, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 30, :method-params ([this values start-time duration]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this values start-time duration])), :doc "Method.\n\n  The setValueCurveAtTime() method of the `audio.AudioParam` interface\n  the parameter's value to change following a curve defined by\n  list of values.\n\n  `var paramRef = param.setValueCurveAtTime(values, startTime, duration);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/setValueCurveAtTime`"}, max-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 121, :column 7, :end-line 121, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The maxValue read-only property of the `audio.AudioParam` interface\n  the maximum possible value for the parameter's nominal (effective)\n\n  `var maxVal = audioParam.maxValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/maxValue`"}, :name audio.AudioParam/max-value, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The maxValue read-only property of the `audio.AudioParam` interface\n  the maximum possible value for the parameter's nominal (effective)\n\n  `var maxVal = audioParam.maxValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/maxValue`"}, linear-ramp-to-value-at-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioParam.cljs", :line 43, :column 7, :end-line 43, :end-column 35, :arglists (quote ([this value end-time])), :doc "Method.\n\n  A reference to this AudioParam object. In some browsers older\n  of this interface return void.\n\n  `var AudioParam = AudioParam.linearRampToValueAtTime(value, endTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime`"}, :name audio.AudioParam/linear-ramp-to-value-at-time, :variadic false, :file "src/audio/AudioParam.cljs", :end-column 35, :method-params ([this value end-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this value end-time])), :doc "Method.\n\n  A reference to this AudioParam object. In some browsers older\n  of this interface return void.\n\n  `var AudioParam = AudioParam.linearRampToValueAtTime(value, endTime)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioParam/linearRampToValueAtTime`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Web Audio API's AudioParam interface represents an audio-related\n  usually a parameter of an `audio.AudioNode` (such as `web.GainNode.gain`)."}
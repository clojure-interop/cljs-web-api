{:rename-macros {}, :renames {}, :externs {AudioWorkletProcessor {}}, :use-macros {}, :excludes #{}, :name audio.AudioWorkletProcessor, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name audio.AudioWorkletProcessor/constructor, :file "src/audio/AudioWorkletProcessor.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioWorkletProcessor.cljs", :line 9, :column 6, :end-line 9, :end-column 17}, :doc "Constructor.\n\n  The AudioWorkletProcessor() constructor creates a new `audio.AudioWorkletProcessor` object, which represents an underlying audio processing mechanism of an `audio.AudioWorkletNode`.\n\n  options\n  An object that is passed as options parameter to `audio.AudioWorkletNode constructor` and passed through the structured clone algorithm. The object is based on `audio.AudioWorkletNodeOptions` dictionary. Available properties are as follows:\n  numberOfInputs Optional\n  The value to initialize the `web.numberOfInputs` property to. Defaults to 1.\n  numberOfOutputs Optional\n  The value to initialize the `web.numberOfOutputs` property to. Defaults to 1.\n  outputChannelCount Optional\n  An array defining the number of channels for each output. For example, outputChannelCount: [n, m] specifies the number of channels in the first output to be n and the second output to be m. The array length must match numberOfOutputs.\n  parameterData Optional\n  An object containing the initial values of custom `audio.AudioParam` objects on this node (in its `web.parameters` property), with key being the name of a custom parameter and value being its initial value.\n  processorOptions Optional\n  Any additional data that can be used for custom initialization of the underlying `audio.AudioWorkletProcessor`.\n  Note that there are default values for the first two properties, so even if there are no options object passed to the `audio.AudioWorkletNode constructor`, the options object passed by the node to the AudioWorkletProcessor constructor will exist and at minimum have numberOfInputs and numberOfOutputs.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/AudioWorkletProcessor`", :tag js}, process {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioWorkletProcessor.cljs", :line 31, :column 7, :end-line 31, :end-column 14, :arglists (quote ([this inputs outputs parameters])), :doc "Method.\n\n  The process() method of an `audio.AudioWorkletProcessor`-derived\n  implements the audio processing algorithm of the processor. Although\n  method is not a part of the `audio.AudioWorkletProcessor` interface,\n  class that derives from it must have it implemented.\n\n  `var isActivelyProcessing = AudioWorkletProcessor.process(inputs, outputs, parameters);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/process`"}, :name audio.AudioWorkletProcessor/process, :variadic false, :file "src/audio/AudioWorkletProcessor.cljs", :end-column 14, :method-params ([this inputs outputs parameters]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this inputs outputs parameters])), :doc "Method.\n\n  The process() method of an `audio.AudioWorkletProcessor`-derived\n  implements the audio processing algorithm of the processor. Although\n  method is not a part of the `audio.AudioWorkletProcessor` interface,\n  class that derives from it must have it implemented.\n\n  `var isActivelyProcessing = AudioWorkletProcessor.process(inputs, outputs, parameters);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/process`"}, parameter-descriptors {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioWorkletProcessor.cljs", :line 45, :column 7, :end-line 45, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The read-only parameterDescriptors property of an `audio.AudioWorkletProcessor`-derived\n  is a static getter, which returns an iterable of `audio.AudioParamDescriptor`-based\n\n  `AudioWorkletProcessorSubclass.parameterDescriptors;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors`"}, :name audio.AudioWorkletProcessor/parameter-descriptors, :variadic false, :file "src/audio/AudioWorkletProcessor.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only parameterDescriptors property of an `audio.AudioWorkletProcessor`-derived\n  is a static getter, which returns an iterable of `audio.AudioParamDescriptor`-based\n\n  `AudioWorkletProcessorSubclass.parameterDescriptors;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors`"}, set-parameter-descriptors! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioWorkletProcessor.cljs", :line 57, :column 7, :end-line 57, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only parameterDescriptors property of an `audio.AudioWorkletProcessor`-derived\n  is a static getter, which returns an iterable of `audio.AudioParamDescriptor`-based\n\n  `AudioWorkletProcessorSubclass.parameterDescriptors;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors`"}, :name audio.AudioWorkletProcessor/set-parameter-descriptors!, :variadic false, :file "src/audio/AudioWorkletProcessor.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only parameterDescriptors property of an `audio.AudioWorkletProcessor`-derived\n  is a static getter, which returns an iterable of `audio.AudioParamDescriptor`-based\n\n  `AudioWorkletProcessorSubclass.parameterDescriptors;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/parameterDescriptors`"}, port {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioWorkletProcessor.cljs", :line 69, :column 7, :end-line 69, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only port property of the `audio.AudioWorkletProcessor`\n  returns the associated `web.MessagePort`. It can be used to communicate\n  the processor and the `audio.AudioWorkletNode` to which it belongs.\n\n  `AudioWorkletProcessorInstance.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/port`"}, :name audio.AudioWorkletProcessor/port, :variadic false, :file "src/audio/AudioWorkletProcessor.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only port property of the `audio.AudioWorkletProcessor`\n  returns the associated `web.MessagePort`. It can be used to communicate\n  the processor and the `audio.AudioWorkletNode` to which it belongs.\n\n  `AudioWorkletProcessorInstance.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/port`"}, set-port! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioWorkletProcessor.cljs", :line 82, :column 7, :end-line 82, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only port property of the `audio.AudioWorkletProcessor`\n  returns the associated `web.MessagePort`. It can be used to communicate\n  the processor and the `audio.AudioWorkletNode` to which it belongs.\n\n  `AudioWorkletProcessorInstance.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/port`"}, :name audio.AudioWorkletProcessor/set-port!, :variadic false, :file "src/audio/AudioWorkletProcessor.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only port property of the `audio.AudioWorkletProcessor`\n  returns the associated `web.MessagePort`. It can be used to communicate\n  the processor and the `audio.AudioWorkletNode` to which it belongs.\n\n  `AudioWorkletProcessorInstance.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioWorkletProcessor/port`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The AudioWorkletProcessor interface of the Web Audio API represents\n  audio processing code behind a custom `audio.AudioWorkletNode`.\n  lives in the `audio.AudioWorkletGlobalScope` and runs on the\n  Audio rendering thread. In turn, an `audio.AudioWorkletNode`\n  on it runs on the main thread."}
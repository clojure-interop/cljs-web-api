{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name audio.AudioTrackList, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-track-by-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 7, :column 7, :end-line 7, :end-column 22, :arglists (quote ([this id])), :doc "Method.\n\n  The `audio.AudioTrackList` method getTrackById() returns the\n  `audio.AudioTrack` object from the track list whose `web.id`\n  the specified string.\n\n  `var theTrack = AudioTrackList.getTrackById(id);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/getTrackById`"}, :name audio.AudioTrackList/get-track-by-id, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 22, :method-params ([this id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this id])), :doc "Method.\n\n  The `audio.AudioTrackList` method getTrackById() returns the\n  `audio.AudioTrack` object from the track list whose `web.id`\n  the specified string.\n\n  `var theTrack = AudioTrackList.getTrackById(id);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/getTrackById`"}, length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrackList` property length returns\n  number of entries in the AudioTrackList, each of which is an\n  representing one audio track in the media element.\n\n  `var trackCount = AudioTrackList.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/length`"}, :name audio.AudioTrackList/length, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrackList` property length returns\n  number of entries in the AudioTrackList, each of which is an\n  representing one audio track in the media element.\n\n  `var trackCount = AudioTrackList.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/length`"}, onaddtrack {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose audio tracks\n  AudioTrackList represents.\n\n  `AudioTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onaddtrack`"}, :name audio.AudioTrackList/onaddtrack, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose audio tracks\n  AudioTrackList represents.\n\n  `AudioTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onaddtrack`"}, set-onaddtrack! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 47, :column 7, :end-line 47, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose audio tracks\n  AudioTrackList represents.\n\n  `AudioTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onaddtrack`"}, :name audio.AudioTrackList/set-onaddtrack!, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose audio tracks\n  AudioTrackList represents.\n\n  `AudioTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onaddtrack`"}, onchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 61, :column 7, :end-line 61, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that one or\n  of the `audio.AudioTrack`s in the AudioTrackList have been enabled\n  disabled.\n\n  `AudioTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onchange`"}, :name audio.AudioTrackList/onchange, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that one or\n  of the `audio.AudioTrack`s in the AudioTrackList have been enabled\n  disabled.\n\n  `AudioTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onchange`"}, set-onchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 75, :column 7, :end-line 75, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that one or\n  of the `audio.AudioTrack`s in the AudioTrackList have been enabled\n  disabled.\n\n  `AudioTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onchange`"}, :name audio.AudioTrackList/set-onchange!, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that one or\n  of the `audio.AudioTrack`s in the AudioTrackList have been enabled\n  disabled.\n\n  `AudioTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onchange`"}, onremovetrack {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 89, :column 7, :end-line 89, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that an audio track\n  been removed from the media element, and therefore also from\n  AudioTrackList.\n\n  `AudioTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onremovetrack`"}, :name audio.AudioTrackList/onremovetrack, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that an audio track\n  been removed from the media element, and therefore also from\n  AudioTrackList.\n\n  `AudioTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onremovetrack`"}, set-onremovetrack! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrackList.cljs", :line 103, :column 7, :end-line 103, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that an audio track\n  been removed from the media element, and therefore also from\n  AudioTrackList.\n\n  `AudioTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onremovetrack`"}, :name audio.AudioTrackList/set-onremovetrack!, :variadic false, :file "src/audio/AudioTrackList.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that an audio track\n  been removed from the media element, and therefore also from\n  AudioTrackList.\n\n  `AudioTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrackList/onremovetrack`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The AudioTrackList interface is used to represent a list of the\n  tracks contained within a given HTML media element, with each\n  represented by a separate `audio.AudioTrack` object in the list."}
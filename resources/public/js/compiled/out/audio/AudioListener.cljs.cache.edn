{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name audio.AudioListener, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-position-z! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 229, :column 7, :end-line 229, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The positionZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionZ.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionZ`"}, :name audio.AudioListener/set-position-z!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The positionZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionZ.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionZ`"}, set-speed-of-sound! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 258, :column 7, :end-line 258, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The speedOfSound property of the `audio.AudioListener` interface\n  a double value representing the speed of sound, in meters per\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.speedOfSound = 343.3;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/speedOfSound`"}, :name audio.AudioListener/set-speed-of-sound!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The speedOfSound property of the `audio.AudioListener` interface\n  a double value representing the speed of sound, in meters per\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.speedOfSound = 343.3;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/speedOfSound`"}, forward-z {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 124, :column 7, :end-line 124, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The forwardZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardZ`"}, :name audio.AudioListener/forward-z, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The forwardZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardZ`"}, forward-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 94, :column 7, :end-line 94, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The forwardY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardY`"}, :name audio.AudioListener/forward-y, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The forwardY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardY`"}, set-up-x! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 287, :column 7, :end-line 287, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The upX read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the x value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upX`"}, :name audio.AudioListener/set-up-x!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 287, :end-line 287, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The upX read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the x value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upX`"}, set-orientation {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 8, :column 7, :end-line 8, :end-column 22, :arglists (quote ([this & args])), :doc "Method.\n\n  Void.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.setOrientation(0,0,-1,0,1,0);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/setOrientation`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name audio.AudioListener/set-orientation, :variadic true, :file "src/audio/AudioListener.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  Void.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.setOrientation(0,0,-1,0,1,0);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/setOrientation`"}, set-position-y! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 199, :column 7, :end-line 199, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The positionY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionY.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionY`"}, :name audio.AudioListener/set-position-y!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The positionY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionY.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionY`"}, set-position {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([this & args])), :doc "Method.\n\n  Void.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.setPosition(1,1,1);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/setPosition`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name audio.AudioListener/set-position, :variadic true, :file "src/audio/AudioListener.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  Void.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.setPosition(1,1,1);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/setPosition`"}, set-up-y! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 317, :column 7, :end-line 317, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The upY read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the y value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upY`"}, :name audio.AudioListener/set-up-y!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 317, :end-line 317, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The upY read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the y value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upY`"}, doppler-factor {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The deprecated dopplerFactor property of the `audio.AudioListener`\n  is a double value representing the amount of pitch shift to use\n  rendering a doppler effect.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.dopplerFactor = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/dopplerFactor`"}, :name audio.AudioListener/doppler-factor, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deprecated dopplerFactor property of the `audio.AudioListener`\n  is a double value representing the amount of pitch shift to use\n  rendering a doppler effect.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.dopplerFactor = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/dopplerFactor`"}, speed-of-sound {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 244, :column 7, :end-line 244, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The speedOfSound property of the `audio.AudioListener` interface\n  a double value representing the speed of sound, in meters per\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.speedOfSound = 343.3;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/speedOfSound`"}, :name audio.AudioListener/speed-of-sound, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The speedOfSound property of the `audio.AudioListener` interface\n  a double value representing the speed of sound, in meters per\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.speedOfSound = 343.3;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/speedOfSound`"}, set-doppler-factor! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 49, :column 7, :end-line 49, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The deprecated dopplerFactor property of the `audio.AudioListener`\n  is a double value representing the amount of pitch shift to use\n  rendering a doppler effect.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.dopplerFactor = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/dopplerFactor`"}, :name audio.AudioListener/set-doppler-factor!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deprecated dopplerFactor property of the `audio.AudioListener`\n  is a double value representing the amount of pitch shift to use\n  rendering a doppler effect.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.dopplerFactor = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/dopplerFactor`"}, set-forward-z! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 139, :column 7, :end-line 139, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The forwardZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardZ`"}, :name audio.AudioListener/set-forward-z!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The forwardZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardZ`"}, position-z {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 214, :column 7, :end-line 214, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The positionZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionZ.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionZ`"}, :name audio.AudioListener/position-z, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The positionZ read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the z position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionZ.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionZ`"}, set-up-z! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 347, :column 7, :end-line 347, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The upZ read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the z value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upZ`"}, :name audio.AudioListener/set-up-z!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The upZ read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the z value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upZ`"}, position-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 184, :column 7, :end-line 184, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The positionY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionY.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionY`"}, :name audio.AudioListener/position-y, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The positionY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionY.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionY`"}, up-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 272, :column 7, :end-line 272, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The upX read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the x value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upX`"}, :name audio.AudioListener/up-x, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The upX read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the x value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upX`"}, up-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 302, :column 7, :end-line 302, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The upY read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the y value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upY`"}, :name audio.AudioListener/up-y, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The upY read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the y value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upY`"}, position-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 154, :column 7, :end-line 154, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The positionX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionX.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionX`"}, :name audio.AudioListener/position-x, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The positionX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionX.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionX`"}, up-z {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 332, :column 7, :end-line 332, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The upZ read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the z value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upZ`"}, :name audio.AudioListener/up-z, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The upZ read-only property of the `audio.AudioListener` interface\n  an `audio.AudioParam` representing the z value of the direction\n  defining the up direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.upZ.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/upZ`"}, set-position-x! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 169, :column 7, :end-line 169, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The positionX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionX.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionX`"}, :name audio.AudioListener/set-position-x!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The positionX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x position of the listener\n  3D cartesian space.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.positionX.value = 1;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/positionX`"}, forward-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 64, :column 7, :end-line 64, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The forwardX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardX`"}, :name audio.AudioListener/forward-x, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The forwardX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardX`"}, set-forward-y! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 109, :column 7, :end-line 109, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The forwardY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardY`"}, :name audio.AudioListener/set-forward-y!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The forwardY read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the y value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardY.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardY`"}, set-forward-x! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioListener.cljs", :line 79, :column 7, :end-line 79, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The forwardX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardX`"}, :name audio.AudioListener/set-forward-x!, :variadic false, :file "src/audio/AudioListener.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The forwardX read-only property of the `audio.AudioListener`\n  is an `audio.AudioParam` representing the x value of the direction\n  defining the forward direction the listener is pointing in.\n\n  `var audioCtx = new AudioContext();\n  var myListener = audioCtx.listener;\n  myListener.forwardX.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioListener/forwardX`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The AudioListener interface represents the position and orientation\n  the unique person listening to the audio scene, and is used in\n  spatialization. All `web.PannerNode`s spatialize in relation\n  the AudioListener stored in the `web.BaseAudioContext.listener`"}
{:rename-macros {}, :renames {}, :externs {AudioBuffer {}}, :use-macros {}, :excludes #{}, :name audio.AudioBuffer, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-channel-data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 62, :column 7, :end-line 62, :end-column 23, :arglists (quote ([this & args])), :doc "Method.\n\n  The getChannelData() method of the `audio.AudioBuffer` Interface\n  a `web.Float32Array` containing the PCM data associated with\n  channel, defined by the channel parameter (with 0 representing\n  first channel).\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  var nowBuffering = myArrayBuffer.getChannelData(channel);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/getChannelData`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name audio.AudioBuffer/get-channel-data, :variadic true, :file "src/audio/AudioBuffer.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The getChannelData() method of the `audio.AudioBuffer` Interface\n  a `web.Float32Array` containing the PCM data associated with\n  channel, defined by the channel parameter (with 0 representing\n  first channel).\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  var nowBuffering = myArrayBuffer.getChannelData(channel);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/getChannelData`"}, set-length! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 115, :column 7, :end-line 115, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The length property of the `audio.AudioBuffer` interface returns\n  integer representing the length, in sample-frames, of the PCM\n  stored in the buffer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/length`"}, :name audio.AudioBuffer/set-length!, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The length property of the `audio.AudioBuffer` interface returns\n  integer representing the length, in sample-frames, of the PCM\n  stored in the buffer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/length`"}, number-of-channels {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 129, :column 7, :end-line 129, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  An integer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.numberOfChannels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/numberOfChannels`"}, :name audio.AudioBuffer/number-of-channels, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An integer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.numberOfChannels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/numberOfChannels`"}, set-sample-rate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 166, :column 7, :end-line 166, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  A floating-point value indicating the current sample rate of\n  buffers data, in samples per second.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.sampleRate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/sampleRate`"}, :name audio.AudioBuffer/set-sample-rate!, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A floating-point value indicating the current sample rate of\n  buffers data, in samples per second.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.sampleRate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/sampleRate`"}, copy-to-channel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 49, :column 7, :end-line 49, :end-column 22, :arglists (quote ([this source channel-number start-in-channel])), :doc "Method.\n\n  The copyToChannel() method of the `audio.AudioBuffer` interface\n  the samples to the specified channel of the AudioBuffer, from\n  source array.\n\n  `myArrayBuffer.copyToChannel(source, channelNumber, startInChannel);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/copyToChannel`"}, :name audio.AudioBuffer/copy-to-channel, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 22, :method-params ([this source channel-number start-in-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this source channel-number start-in-channel])), :doc "Method.\n\n  The copyToChannel() method of the `audio.AudioBuffer` interface\n  the samples to the specified channel of the AudioBuffer, from\n  source array.\n\n  `myArrayBuffer.copyToChannel(source, channelNumber, startInChannel);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/copyToChannel`"}, set-duration! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 89, :column 7, :end-line 89, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  A double.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/duration`"}, :name audio.AudioBuffer/set-duration!, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A double.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/duration`"}, sample-rate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 153, :column 7, :end-line 153, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  A floating-point value indicating the current sample rate of\n  buffers data, in samples per second.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.sampleRate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/sampleRate`"}, :name audio.AudioBuffer/sample-rate, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A floating-point value indicating the current sample rate of\n  buffers data, in samples per second.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.sampleRate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/sampleRate`"}, copy-from-channel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 36, :column 7, :end-line 36, :end-column 24, :arglists (quote ([this destination channel-number start-in-channel])), :doc "Method.\n\n  The copyFromChannel() method of the `audio.AudioBuffer` interface\n  the audio sample data from the specified channel of the AudioBuffer\n  a specified `web.Float32Array`.\n\n  `myArrayBuffer.copyFromChannel(destination, channelNumber, startInChannel);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/copyFromChannel`"}, :name audio.AudioBuffer/copy-from-channel, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 24, :method-params ([this destination channel-number start-in-channel]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this destination channel-number start-in-channel])), :doc "Method.\n\n  The copyFromChannel() method of the `audio.AudioBuffer` interface\n  the audio sample data from the specified channel of the AudioBuffer\n  a specified `web.Float32Array`.\n\n  `myArrayBuffer.copyFromChannel(destination, channelNumber, startInChannel);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/copyFromChannel`"}, duration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 77, :column 7, :end-line 77, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  A double.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/duration`"}, :name audio.AudioBuffer/duration, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A double.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.duration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/duration`"}, constructor {:name audio.AudioBuffer/constructor, :file "src/audio/AudioBuffer.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 9, :column 6, :end-line 9, :end-column 17}, :doc "Constructor.\n\n  The AudioBuffer constructor of the Web Audio API creates a new `audio.AudioBuffer` object.\n\n  Inherits parameters from the `audio.AudioNodeOptions` dictionary.\n\n\n  options\n  Options are as follows:\n\n  length: The size of the audio buffer in sample-frames. To determine the length to use for a specific number of seconds of audio, use numSeconds * (sampleRate * numberOfChannels).\n  numberOfChannels: The number of channels for the buffer. The default is 1, and all user agents are required to support at least 32 channels.\n  sampleRate: The sample rate in Hz for the buffer. The default is the sample rate of the context used in constructing this object. User agents are required to support sample rates from 8,000 Hz to 96,000 Hz (but are allowed to go farther outside this range).\n\n\n\n\n  Deprecated parameters\n\n\n  context\n  A reference to an `audio.AudioContext`. This parameter was removed from the spec.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/AudioBuffer`", :tag js}, length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 101, :column 7, :end-line 101, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The length property of the `audio.AudioBuffer` interface returns\n  integer representing the length, in sample-frames, of the PCM\n  stored in the buffer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/length`"}, :name audio.AudioBuffer/length, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The length property of the `audio.AudioBuffer` interface returns\n  integer representing the length, in sample-frames, of the PCM\n  stored in the buffer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/length`"}, set-number-of-channels! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioBuffer.cljs", :line 141, :column 7, :end-line 141, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  An integer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.numberOfChannels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/numberOfChannels`"}, :name audio.AudioBuffer/set-number-of-channels!, :variadic false, :file "src/audio/AudioBuffer.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An integer.\n\n  `var myArrayBuffer = audioCtx.createBuffer(2, frameCount, audioCtx.sampleRate);\n  myArrayBuffer.numberOfChannels;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioBuffer/numberOfChannels`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The AudioBuffer interface represents a short audio asset residing\n  memory, created from an audio file using the `audio.AudioContext.decodeAudioData()`\n  or from raw data using `audio.AudioContext.createBuffer()`. Once\n  into an AudioBuffer, the audio can then be played by being passed\n  an `audio.AudioBufferSourceNode`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name audio.AudioTrack, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {enabled {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrack` property enabled specifies whether or\n  the described audio track is currently enabled for use. If the\n  is disabled by setting enabled to false, the track is muted and\n  not produce audio.\n\n  `isAudioEnabled = AudioTrack.enabled;\n\n  AudioTrack.enabled = true | false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/enabled`"}, :name audio.AudioTrack/enabled, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `audio.AudioTrack` property enabled specifies whether or\n  the described audio track is currently enabled for use. If the\n  is disabled by setting enabled to false, the track is muted and\n  not produce audio.\n\n  `isAudioEnabled = AudioTrack.enabled;\n\n  AudioTrack.enabled = true | false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/enabled`"}, set-enabled! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrack` property enabled specifies whether or\n  the described audio track is currently enabled for use. If the\n  is disabled by setting enabled to false, the track is muted and\n  not produce audio.\n\n  `isAudioEnabled = AudioTrack.enabled;\n\n  AudioTrack.enabled = true | false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/enabled`"}, :name audio.AudioTrack/set-enabled!, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `audio.AudioTrack` property enabled specifies whether or\n  the described audio track is currently enabled for use. If the\n  is disabled by setting enabled to false, the track is muted and\n  not produce audio.\n\n  `isAudioEnabled = AudioTrack.enabled;\n\n  AudioTrack.enabled = true | false;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/enabled`"}, id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 38, :column 7, :end-line 38, :end-column 9, :arglists (quote ([this])), :doc "Property.\n\n  The id property contains a string which uniquely identifies the\n  represented by the `audio.AudioTrack`.\n\n  `var trackID = AudioTrack.id;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/id`"}, :name audio.AudioTrack/id, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The id property contains a string which uniquely identifies the\n  represented by the `audio.AudioTrack`.\n\n  `var trackID = AudioTrack.id;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/id`"}, kind {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 50, :column 7, :end-line 50, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The kind property contains a string indicating the category of\n  contained in the `audio.AudioTrack`.\n\n  `var trackKind = AudioTrack.kind;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/kind`"}, :name audio.AudioTrack/kind, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The kind property contains a string indicating the category of\n  contained in the `audio.AudioTrack`.\n\n  `var trackKind = AudioTrack.kind;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/kind`"}, label {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 62, :column 7, :end-line 62, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrack` property label returns a string\n  the audio track's human-readable label, if one is available;\n  it returns an empty string.\n\n  `var audioTrackLabel = AudioTrack.label;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/label`"}, :name audio.AudioTrack/label, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrack` property label returns a string\n  the audio track's human-readable label, if one is available;\n  it returns an empty string.\n\n  `var audioTrackLabel = AudioTrack.label;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/label`"}, language {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 75, :column 7, :end-line 75, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrack` property language returns a\n  identifying the language used in the audio track.\n\n  `var audioTrackLanguage = AudioTrack.language;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/language`"}, :name audio.AudioTrack/language, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrack` property language returns a\n  identifying the language used in the audio track.\n\n  `var audioTrackLanguage = AudioTrack.language;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/language`"}, source-buffer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/audio/AudioTrack.cljs", :line 87, :column 7, :end-line 87, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrack` property sourceBuffer returns\n  `web.SourceBuffer` that created the track, or null if the track\n  not created by a `web.SourceBuffer` or the `web.SourceBuffer`\n  been removed from the `media.MediaSource.sourceBuffers` attribute\n  its parent media source.\n\n  `var sourceBuffer = AudioTrack.sourceBuffer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/sourceBuffer`"}, :name audio.AudioTrack/source-buffer, :variadic false, :file "src/audio/AudioTrack.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `audio.AudioTrack` property sourceBuffer returns\n  `web.SourceBuffer` that created the track, or null if the track\n  not created by a `web.SourceBuffer` or the `web.SourceBuffer`\n  been removed from the `media.MediaSource.sourceBuffers` attribute\n  its parent media source.\n\n  `var sourceBuffer = AudioTrack.sourceBuffer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioTrack/sourceBuffer`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The AudioTrack interface represents a single audio track from\n  of the HTML media elements, `web.<audio>` or `web.<video>`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name media.MediaKeySystemConfiguration, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {audio-capabilities {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 6, :column 7, :end-line 6, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.audioCapabilities read-only property\n  an array of supported audio type and capability pairs.\n\n  `var audioCapabilities[ {contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.audioCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/audioCapabilities`"}, :name media.MediaKeySystemConfiguration/audio-capabilities, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.audioCapabilities read-only property\n  an array of supported audio type and capability pairs.\n\n  `var audioCapabilities[ {contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.audioCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/audioCapabilities`"}, video-capabilities {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 104, :column 7, :end-line 104, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.videoCapabilities read-only property\n  an array of supported video type and capability pairs.\n\n  `var videoCapabilities[{contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.videoCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/videoCapabilities`"}, :name media.MediaKeySystemConfiguration/video-capabilities, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.videoCapabilities read-only property\n  an array of supported video type and capability pairs.\n\n  `var videoCapabilities[{contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.videoCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/videoCapabilities`"}, persistent-state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 80, :column 7, :end-line 80, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.persistentState read-only property\n  whether the ability to persist state is required.\n\n  `var persistentState = mediaSystemConfiguration.persistentSTate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/persistentState`"}, :name media.MediaKeySystemConfiguration/persistent-state, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.persistentState read-only property\n  whether the ability to persist state is required.\n\n  `var persistentState = mediaSystemConfiguration.persistentSTate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/persistentState`"}, init-data-types {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 54, :column 7, :end-line 54, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.initDataTypes read-only property\n  a list of supported initialization data type names. An initialization\n  type is a string indicating the format of the initialization\n\n  `var dataTypes[] = mediaSystemConfiguration.initDataTypes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/initDataTypes`"}, :name media.MediaKeySystemConfiguration/init-data-types, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.initDataTypes read-only property\n  a list of supported initialization data type names. An initialization\n  type is a string indicating the format of the initialization\n\n  `var dataTypes[] = mediaSystemConfiguration.initDataTypes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/initDataTypes`"}, set-persistent-state! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 92, :column 7, :end-line 92, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.persistentState read-only property\n  whether the ability to persist state is required.\n\n  `var persistentState = mediaSystemConfiguration.persistentSTate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/persistentState`"}, :name media.MediaKeySystemConfiguration/set-persistent-state!, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.persistentState read-only property\n  whether the ability to persist state is required.\n\n  `var persistentState = mediaSystemConfiguration.persistentSTate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/persistentState`"}, set-video-capabilities! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 116, :column 7, :end-line 116, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.videoCapabilities read-only property\n  an array of supported video type and capability pairs.\n\n  `var videoCapabilities[{contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.videoCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/videoCapabilities`"}, :name media.MediaKeySystemConfiguration/set-video-capabilities!, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.videoCapabilities read-only property\n  an array of supported video type and capability pairs.\n\n  `var videoCapabilities[{contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.videoCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/videoCapabilities`"}, set-distinctive-identifier! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 42, :column 7, :end-line 42, :end-column 34, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.distinctiveIdentifier read-only\n  indicates whether a persistent distinctive identifier is required.\n\n  `var distinctiveIdentifier = mediaSystemConfiguration.distinctiveIdentifier;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/distinctiveIdentifier`"}, :name media.MediaKeySystemConfiguration/set-distinctive-identifier!, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 34, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.distinctiveIdentifier read-only\n  indicates whether a persistent distinctive identifier is required.\n\n  `var distinctiveIdentifier = mediaSystemConfiguration.distinctiveIdentifier;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/distinctiveIdentifier`"}, set-audio-capabilities! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 18, :column 7, :end-line 18, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.audioCapabilities read-only property\n  an array of supported audio type and capability pairs.\n\n  `var audioCapabilities[ {contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.audioCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/audioCapabilities`"}, :name media.MediaKeySystemConfiguration/set-audio-capabilities!, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.audioCapabilities read-only property\n  an array of supported audio type and capability pairs.\n\n  `var audioCapabilities[ {contentType: 'contentType', robustness:'robustness'}] = mediaSystemConfiguration.audioCapabilities;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/audioCapabilities`"}, set-init-data-types! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 67, :column 7, :end-line 67, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.initDataTypes read-only property\n  a list of supported initialization data type names. An initialization\n  type is a string indicating the format of the initialization\n\n  `var dataTypes[] = mediaSystemConfiguration.initDataTypes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/initDataTypes`"}, :name media.MediaKeySystemConfiguration/set-init-data-types!, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemConfiguration.initDataTypes read-only property\n  a list of supported initialization data type names. An initialization\n  type is a string indicating the format of the initialization\n\n  `var dataTypes[] = mediaSystemConfiguration.initDataTypes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/initDataTypes`"}, distinctive-identifier {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemConfiguration.cljs", :line 30, :column 7, :end-line 30, :end-column 29, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.distinctiveIdentifier read-only\n  indicates whether a persistent distinctive identifier is required.\n\n  `var distinctiveIdentifier = mediaSystemConfiguration.distinctiveIdentifier;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/distinctiveIdentifier`"}, :name media.MediaKeySystemConfiguration/distinctive-identifier, :variadic false, :file "src/media/MediaKeySystemConfiguration.cljs", :end-column 29, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemConfiguration.distinctiveIdentifier read-only\n  indicates whether a persistent distinctive identifier is required.\n\n  `var distinctiveIdentifier = mediaSystemConfiguration.distinctiveIdentifier;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration/distinctiveIdentifier`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MediaKeySystemConfiguration interface Encrypted Media Extensions\n  provides configuration information about the media key system."}
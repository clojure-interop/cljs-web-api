{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name media.MediaKeySystemAccess, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {create-media-keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemAccess.cljs", :line 8, :column 7, :end-line 8, :end-column 24, :arglists (quote ([this])), :doc "Method.\n\n  The MediaKeySystemAccess.createMediaKeys() method returns a `web.Promise`\n  resolves to a new `media.MediaKeys` object.\n\n  `var mediaKeys = mediaKeySystemAccess.createMediaKeys();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/createMediaKeys`"}, :name media.MediaKeySystemAccess/create-media-keys, :variadic false, :file "src/media/MediaKeySystemAccess.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The MediaKeySystemAccess.createMediaKeys() method returns a `web.Promise`\n  resolves to a new `media.MediaKeys` object.\n\n  `var mediaKeys = mediaKeySystemAccess.createMediaKeys();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/createMediaKeys`"}, get-configuration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemAccess.cljs", :line 20, :column 7, :end-line 20, :end-column 24, :arglists (quote ([this])), :doc "Method.\n\n  The MediaKeySystemAccess.getConfiguration() method returns a\n  object with the supported combination of configuration options.\n\n  `var mediaKeySystemConfiguration = mediaKeySystemAccess.getConfiguration();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/getConfiguration`"}, :name media.MediaKeySystemAccess/get-configuration, :variadic false, :file "src/media/MediaKeySystemAccess.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The MediaKeySystemAccess.getConfiguration() method returns a\n  object with the supported combination of configuration options.\n\n  `var mediaKeySystemConfiguration = mediaKeySystemAccess.getConfiguration();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/getConfiguration`"}, key-system {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemAccess.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemAccess.keySystem read-only property returns\n  `dom.DOMString` identifying the key system being used.\n\n  `var keySystem = mediaKeySystemAccess.keySystem;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/keySystem`"}, :name media.MediaKeySystemAccess/key-system, :variadic false, :file "src/media/MediaKeySystemAccess.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MediaKeySystemAccess.keySystem read-only property returns\n  `dom.DOMString` identifying the key system being used.\n\n  `var keySystem = mediaKeySystemAccess.keySystem;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/keySystem`"}, set-key-system! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeySystemAccess.cljs", :line 44, :column 7, :end-line 44, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemAccess.keySystem read-only property returns\n  `dom.DOMString` identifying the key system being used.\n\n  `var keySystem = mediaKeySystemAccess.keySystem;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/keySystem`"}, :name media.MediaKeySystemAccess/set-key-system!, :variadic false, :file "src/media/MediaKeySystemAccess.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MediaKeySystemAccess.keySystem read-only property returns\n  `dom.DOMString` identifying the key system being used.\n\n  `var keySystem = mediaKeySystemAccess.keySystem;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess/keySystem`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MediaKeySystemAccess interface of the EncryptedMediaExtensions\n  provides access to a Key System for decryption and/or a content\n  provider. You can request an instance of this object using the\n  method."}
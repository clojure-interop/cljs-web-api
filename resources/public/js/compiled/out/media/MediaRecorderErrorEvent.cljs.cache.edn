{:rename-macros {}, :renames {}, :externs {MediaRecorderErrorEvent {}}, :use-macros {}, :excludes #{}, :name media.MediaRecorderErrorEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name media.MediaRecorderErrorEvent/constructor, :file "src/media/MediaRecorderErrorEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaRecorderErrorEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The MediaRecorderErrorEvent() constructor creates a new `media.MediaRecorderErrorEvent` object that represents an error that occurred during the recording of media by the MediaStream Recording API.\n\n  errorInfo\n  An object describing the error object to be created. It must contain the error property at a minimum.\n\n  error\n  A `dom.DOMException` that describes the error that occurred. This object's `web.name` property should indicate the name of the error that occurred. The other fields may or may not be present.\n\n\n\n\n\n  Some user agents add to the error object other properties that provide information such as stack dumps, the name of the JavaScript file and the line number where the error occurred, and other debugging aids, but you should not rely on this information in a production environment.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorderErrorEvent/MediaRecorderErrorEvent`", :tag js}, error {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaRecorderErrorEvent.cljs", :line 27, :column 7, :end-line 27, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The read-only error property in the `media.MediaRecorderErrorEvent`\n  is a `dom.DOMException` object providing details about the exception\n  was thrown by a `media.MediaRecorder` instance.\n\n  `error = MediaRecorderErrorEvent.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorderErrorEvent/error`"}, :name media.MediaRecorderErrorEvent/error, :variadic false, :file "src/media/MediaRecorderErrorEvent.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only error property in the `media.MediaRecorderErrorEvent`\n  is a `dom.DOMException` object providing details about the exception\n  was thrown by a `media.MediaRecorder` instance.\n\n  `error = MediaRecorderErrorEvent.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorderErrorEvent/error`"}, set-error! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaRecorderErrorEvent.cljs", :line 40, :column 7, :end-line 40, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only error property in the `media.MediaRecorderErrorEvent`\n  is a `dom.DOMException` object providing details about the exception\n  was thrown by a `media.MediaRecorder` instance.\n\n  `error = MediaRecorderErrorEvent.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorderErrorEvent/error`"}, :name media.MediaRecorderErrorEvent/set-error!, :variadic false, :file "src/media/MediaRecorderErrorEvent.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only error property in the `media.MediaRecorderErrorEvent`\n  is a `dom.DOMException` object providing details about the exception\n  was thrown by a `media.MediaRecorder` instance.\n\n  `error = MediaRecorderErrorEvent.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorderErrorEvent/error`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MediaRecorderErrorEvent interface represents errors returned\n  the MediaStream Recording API. It is an `web.Event` object that\n  a reference to a `dom.DOMException` describing the error that"}
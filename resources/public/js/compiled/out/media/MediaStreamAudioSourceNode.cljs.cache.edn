{:rename-macros {}, :renames {}, :externs {MediaStreamAudioSourceNode {}}, :use-macros {}, :excludes #{}, :name media.MediaStreamAudioSourceNode, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name media.MediaStreamAudioSourceNode/constructor, :file "src/media/MediaStreamAudioSourceNode.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaStreamAudioSourceNode.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The Web Audio API's MediaStreamAudioSourceNode() constructor creates and returns a new `media.MediaStreamAudioSourceNode` object which uses the first audio track of a given `media.MediaStream` as its source.\n\n  context\n  An `audio.AudioContext` representing the audio context you want the node to be associated with.\n  options\n\n  A `media.MediaStreamAudioSourceOptions` object defining the properties you want the MediaStreamAudioSourceNode to have:\n\n\n  `web.mediaStream`\n  A required property which specifies the `media.MediaStream` from which to obtain audio for the node.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode/MediaStreamAudioSourceNode`", :tag js}, media-stream {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaStreamAudioSourceNode.cljs", :line 25, :column 7, :end-line 25, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The `media.MediaStreamAudioSourceNode` interface's read-only\n  property indicates the `media.MediaStream` that contains the\n  track from which the node is receiving audio.\n\n  `audioSourceStream = mediaStreamAudioSourceNode.mediaStream;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode/mediaStream`"}, :name media.MediaStreamAudioSourceNode/media-stream, :variadic false, :file "src/media/MediaStreamAudioSourceNode.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `media.MediaStreamAudioSourceNode` interface's read-only\n  property indicates the `media.MediaStream` that contains the\n  track from which the node is receiving audio.\n\n  `audioSourceStream = mediaStreamAudioSourceNode.mediaStream;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode/mediaStream`"}, set-media-stream! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaStreamAudioSourceNode.cljs", :line 38, :column 7, :end-line 38, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The `media.MediaStreamAudioSourceNode` interface's read-only\n  property indicates the `media.MediaStream` that contains the\n  track from which the node is receiving audio.\n\n  `audioSourceStream = mediaStreamAudioSourceNode.mediaStream;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode/mediaStream`"}, :name media.MediaStreamAudioSourceNode/set-media-stream!, :variadic false, :file "src/media/MediaStreamAudioSourceNode.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `media.MediaStreamAudioSourceNode` interface's read-only\n  property indicates the `media.MediaStream` that contains the\n  track from which the node is receiving audio.\n\n  `audioSourceStream = mediaStreamAudioSourceNode.mediaStream;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamAudioSourceNode/mediaStream`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MediaStreamAudioSourceNode interface is a type of `audio.AudioNode`\n  operates as an audio source whose media is received from a `media.MediaStream`\n  using the WebRTC or Media Capture and Streams APIs."}
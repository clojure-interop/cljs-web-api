{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{get keys}, :name media.MediaKeyStatusMap, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The entries() read-only property of the `media.MediaKeyStatusMap`\n  returns a new Iterator object, containing an array of [key, value]\n  for each element in the status map, in insertion order.\n\n  `// TBD`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/entries`"}, :name media.MediaKeyStatusMap/entries, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The entries() read-only property of the `media.MediaKeyStatusMap`\n  returns a new Iterator object, containing an array of [key, value]\n  for each element in the status map, in insertion order.\n\n  `// TBD`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/entries`"}, for-each {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The forEach property of the `media.MediaKeyStatusMap` interface\n  callback once for each key-value pair in the status map, in insertion\n  If an argument is present it will be passed to the callback.\n\n  `mediaKeyStatusMap.forEach(callback[, thisArg])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/forEach`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name media.MediaKeyStatusMap/for-each, :variadic true, :file "src/media/MediaKeyStatusMap.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The forEach property of the `media.MediaKeyStatusMap` interface\n  callback once for each key-value pair in the status map, in insertion\n  If an argument is present it will be passed to the callback.\n\n  `mediaKeyStatusMap.forEach(callback[, thisArg])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/forEach`"}, get {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 32, :column 7, :end-line 32, :end-column 10, :arglists (quote ([this key])), :doc "Method.\n\n  The get property of the `media.MediaKeyStatusMap` interface returns\n  value associated with the given key, or undefined if there is\n\n  `var value = mediaKeyStatusMap.get(key);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/get`"}, :name media.MediaKeyStatusMap/get, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 10, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc "Method.\n\n  The get property of the `media.MediaKeyStatusMap` interface returns\n  value associated with the given key, or undefined if there is\n\n  `var value = mediaKeyStatusMap.get(key);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/get`"}, has {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 44, :column 7, :end-line 44, :end-column 10, :arglists (quote ([this key])), :doc "Method.\n\n  The has property of the `media.MediaKeyStatusMap` interface returns\n  `web.Boolean`, asserting whether a value has been associated\n  the given key.\n\n  `var boolean = mediaKeyStatusMap(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/has`"}, :name media.MediaKeyStatusMap/has, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 10, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc "Method.\n\n  The has property of the `media.MediaKeyStatusMap` interface returns\n  `web.Boolean`, asserting whether a value has been associated\n  the given key.\n\n  `var boolean = mediaKeyStatusMap(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/has`"}, keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 57, :column 7, :end-line 57, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The keys property of the `media.MediaKeyStatusMap` interface\n  a new Iterator object, containing keys for each element in the\n  map, in insertion order\n\n  `var iterator = mediaKeyStatusMap.keys()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/keys`"}, :name media.MediaKeyStatusMap/keys, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The keys property of the `media.MediaKeyStatusMap` interface\n  a new Iterator object, containing keys for each element in the\n  map, in insertion order\n\n  `var iterator = mediaKeyStatusMap.keys()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/keys`"}, values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 70, :column 7, :end-line 70, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The values property of the `media.MediaKeyStatusMap` interface\n  a new Iterator object, containing values for each element in\n  status map, in insertion order.\n\n  `var iterator = mediaKeyStatusMap.values()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/values`"}, :name media.MediaKeyStatusMap/values, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The values property of the `media.MediaKeyStatusMap` interface\n  a new Iterator object, containing values for each element in\n  status map, in insertion order.\n\n  `var iterator = mediaKeyStatusMap.values()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/values`"}, size {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 83, :column 7, :end-line 83, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The size read-only property of the `media.MediaKeyStatusMap`\n  returns the number of key/value paIrs in the status map.\n\n  `var size = MediaKeyStatusMap.size;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/size`"}, :name media.MediaKeyStatusMap/size, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The size read-only property of the `media.MediaKeyStatusMap`\n  returns the number of key/value paIrs in the status map.\n\n  `var size = MediaKeyStatusMap.size;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/size`"}, set-size! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/media/MediaKeyStatusMap.cljs", :line 95, :column 7, :end-line 95, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The size read-only property of the `media.MediaKeyStatusMap`\n  returns the number of key/value paIrs in the status map.\n\n  `var size = MediaKeyStatusMap.size;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/size`"}, :name media.MediaKeyStatusMap/set-size!, :variadic false, :file "src/media/MediaKeyStatusMap.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The size read-only property of the `media.MediaKeyStatusMap`\n  returns the number of key/value paIrs in the status map.\n\n  `var size = MediaKeyStatusMap.size;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MediaKeyStatusMap/size`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MediaKeyStatusMap interface of the EncryptedMediaExtensions\n  is a read-only map of media key statuses by key IDs."}
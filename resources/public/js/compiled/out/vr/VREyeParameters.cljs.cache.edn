{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name vr.VREyeParameters, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {render-height {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 135, :column 7, :end-line 135, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The renderHeight read-only property of the `vr.VREyeParameters`\n  describes the recommended render target height of each eye viewport,\n  pixels.\n\n  `var myRenderHeight = eyeParametersInstance.renderHeight;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderHeight`"}, :name vr.VREyeParameters/render-height, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The renderHeight read-only property of the `vr.VREyeParameters`\n  describes the recommended render target height of each eye viewport,\n  pixels.\n\n  `var myRenderHeight = eyeParametersInstance.renderHeight;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderHeight`"}, set-render-height! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 148, :column 7, :end-line 148, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The renderHeight read-only property of the `vr.VREyeParameters`\n  describes the recommended render target height of each eye viewport,\n  pixels.\n\n  `var myRenderHeight = eyeParametersInstance.renderHeight;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderHeight`"}, :name vr.VREyeParameters/set-render-height!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The renderHeight read-only property of the `vr.VREyeParameters`\n  describes the recommended render target height of each eye viewport,\n  pixels.\n\n  `var myRenderHeight = eyeParametersInstance.renderHeight;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderHeight`"}, field-of-view {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 7, :column 7, :end-line 7, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The fieldOfView read-only property of the `vr.VREyeParameters`\n  returns a `vr.VRFieldOfView` object describing the current field\n  view for the eye, which can vary as the user adjusts their interpupillary\n  (IPD).\n\n  `var myFOV = eyeParametersInstance.fieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/fieldOfView`"}, :name vr.VREyeParameters/field-of-view, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The fieldOfView read-only property of the `vr.VREyeParameters`\n  returns a `vr.VRFieldOfView` object describing the current field\n  view for the eye, which can vary as the user adjusts their interpupillary\n  (IPD).\n\n  `var myFOV = eyeParametersInstance.fieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/fieldOfView`"}, set-recommended-field-of-view! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 122, :column 7, :end-line 122, :end-column 37, :arglists (quote ([this val])), :doc "Property.\n\n  The recommendedFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the recommended field of view for the current eye —\n  based on user calibration.\n\n  `var recFOV = myEyeParameters.recommendedFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/recommendedFieldOfView`"}, :name vr.VREyeParameters/set-recommended-field-of-view!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 37, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The recommendedFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the recommended field of view for the current eye —\n  based on user calibration.\n\n  `var recFOV = myEyeParameters.recommendedFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/recommendedFieldOfView`"}, render-width {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 187, :column 7, :end-line 187, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The renderWidth read-only property of the `vr.VREyeParameters`\n  describes the recommended render target width of each eye viewport,\n  pixels.\n\n  `var myRenderWidth = eyeParametersInstance.renderWidth;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderWidth`"}, :name vr.VREyeParameters/render-width, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The renderWidth read-only property of the `vr.VREyeParameters`\n  describes the recommended render target width of each eye viewport,\n  pixels.\n\n  `var myRenderWidth = eyeParametersInstance.renderWidth;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderWidth`"}, offset {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 83, :column 7, :end-line 83, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The offset read-only property of the `vr.VREyeParameters` interface\n  the offset from the center point between the user's eyes to the\n  of the eye, measured in meters.\n\n  `var myOffset = eyeParametersInstance.offset;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/offset`"}, :name vr.VREyeParameters/offset, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The offset read-only property of the `vr.VREyeParameters` interface\n  the offset from the center point between the user's eyes to the\n  of the eye, measured in meters.\n\n  `var myOffset = eyeParametersInstance.offset;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/offset`"}, maximum-field-of-view {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 35, :column 7, :end-line 35, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The maximumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the maximum supported field of view for the current\n\n  `var maxFOV = myEyeParameters.maximumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/maximumFieldOfView`"}, :name vr.VREyeParameters/maximum-field-of-view, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The maximumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the maximum supported field of view for the current\n\n  `var maxFOV = myEyeParameters.maximumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/maximumFieldOfView`"}, set-render-width! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 200, :column 7, :end-line 200, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The renderWidth read-only property of the `vr.VREyeParameters`\n  describes the recommended render target width of each eye viewport,\n  pixels.\n\n  `var myRenderWidth = eyeParametersInstance.renderWidth;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderWidth`"}, :name vr.VREyeParameters/set-render-width!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The renderWidth read-only property of the `vr.VREyeParameters`\n  describes the recommended render target width of each eye viewport,\n  pixels.\n\n  `var myRenderWidth = eyeParametersInstance.renderWidth;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderWidth`"}, set-offset! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 96, :column 7, :end-line 96, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The offset read-only property of the `vr.VREyeParameters` interface\n  the offset from the center point between the user's eyes to the\n  of the eye, measured in meters.\n\n  `var myOffset = eyeParametersInstance.offset;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/offset`"}, :name vr.VREyeParameters/set-offset!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The offset read-only property of the `vr.VREyeParameters` interface\n  the offset from the center point between the user's eyes to the\n  of the eye, measured in meters.\n\n  `var myOffset = eyeParametersInstance.offset;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/offset`"}, minimum-field-of-view {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 59, :column 7, :end-line 59, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The minimumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the minimum supported field of view for the current\n\n  `var minFOV = myEyeParameters.minimumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/minimumFieldOfView`"}, :name vr.VREyeParameters/minimum-field-of-view, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The minimumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the minimum supported field of view for the current\n\n  `var minFOV = myEyeParameters.minimumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/minimumFieldOfView`"}, set-render-rect! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 174, :column 7, :end-line 174, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The renderRect read-only property of the `vr.VREyeParameters`\n  specifies the viewport of a canvas into which visuals for the\n  eye should be rendered.\n\n  `var myRenderRect = MyEyeParameters.renderRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderRect`"}, :name vr.VREyeParameters/set-render-rect!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The renderRect read-only property of the `vr.VREyeParameters`\n  specifies the viewport of a canvas into which visuals for the\n  eye should be rendered.\n\n  `var myRenderRect = MyEyeParameters.renderRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderRect`"}, render-rect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 161, :column 7, :end-line 161, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The renderRect read-only property of the `vr.VREyeParameters`\n  specifies the viewport of a canvas into which visuals for the\n  eye should be rendered.\n\n  `var myRenderRect = MyEyeParameters.renderRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderRect`"}, :name vr.VREyeParameters/render-rect, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The renderRect read-only property of the `vr.VREyeParameters`\n  specifies the viewport of a canvas into which visuals for the\n  eye should be rendered.\n\n  `var myRenderRect = MyEyeParameters.renderRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/renderRect`"}, set-maximum-field-of-view! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 47, :column 7, :end-line 47, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The maximumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the maximum supported field of view for the current\n\n  `var maxFOV = myEyeParameters.maximumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/maximumFieldOfView`"}, :name vr.VREyeParameters/set-maximum-field-of-view!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The maximumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the maximum supported field of view for the current\n\n  `var maxFOV = myEyeParameters.maximumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/maximumFieldOfView`"}, set-field-of-view! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 21, :column 7, :end-line 21, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The fieldOfView read-only property of the `vr.VREyeParameters`\n  returns a `vr.VRFieldOfView` object describing the current field\n  view for the eye, which can vary as the user adjusts their interpupillary\n  (IPD).\n\n  `var myFOV = eyeParametersInstance.fieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/fieldOfView`"}, :name vr.VREyeParameters/set-field-of-view!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The fieldOfView read-only property of the `vr.VREyeParameters`\n  returns a `vr.VRFieldOfView` object describing the current field\n  view for the eye, which can vary as the user adjusts their interpupillary\n  (IPD).\n\n  `var myFOV = eyeParametersInstance.fieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/fieldOfView`"}, set-minimum-field-of-view! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 71, :column 7, :end-line 71, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The minimumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the minimum supported field of view for the current\n\n  `var minFOV = myEyeParameters.minimumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/minimumFieldOfView`"}, :name vr.VREyeParameters/set-minimum-field-of-view!, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The minimumFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the minimum supported field of view for the current\n\n  `var minFOV = myEyeParameters.minimumFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/minimumFieldOfView`"}, recommended-field-of-view {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VREyeParameters.cljs", :line 109, :column 7, :end-line 109, :end-column 32, :arglists (quote ([this])), :doc "Property.\n\n  The recommendedFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the recommended field of view for the current eye —\n  based on user calibration.\n\n  `var recFOV = myEyeParameters.recommendedFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/recommendedFieldOfView`"}, :name vr.VREyeParameters/recommended-field-of-view, :variadic false, :file "src/vr/VREyeParameters.cljs", :end-column 32, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The recommendedFieldOfView read-only property of the `vr.VREyeParameters`\n  describes the recommended field of view for the current eye —\n  based on user calibration.\n\n  `var recFOV = myEyeParameters.recommendedFieldOfView;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/recommendedFieldOfView`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The VREyeParameters interface of the WebVR API represents all\n  information required to correctly render a scene for a given\n  including field of view information."}
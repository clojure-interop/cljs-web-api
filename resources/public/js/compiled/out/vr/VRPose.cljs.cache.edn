{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name vr.VRPose, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {linear-acceleration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 117, :column 7, :end-line 117, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The linearAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the linear acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myLinearAcceleration = VRPose.linearAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearAcceleration`"}, :name vr.VRPose/linear-acceleration, :variadic false, :file "src/vr/VRPose.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The linearAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the linear acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myLinearAcceleration = VRPose.linearAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearAcceleration`"}, set-linear-acceleration! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 131, :column 7, :end-line 131, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The linearAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the linear acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myLinearAcceleration = VRPose.linearAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearAcceleration`"}, :name vr.VRPose/set-linear-acceleration!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The linearAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the linear acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myLinearAcceleration = VRPose.linearAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearAcceleration`"}, timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 223, :column 7, :end-line 223, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRPose` interface\n  the current time stamp of the system — a monotonically increasing\n  representing the time since the current app was started.\n\n  `var myTimeStamp = VRPose.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/timeStamp`"}, :name vr.VRPose/timestamp, :variadic false, :file "src/vr/VRPose.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRPose` interface\n  the current time stamp of the system — a monotonically increasing\n  representing the time since the current app was started.\n\n  `var myTimeStamp = VRPose.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/timeStamp`"}, angular-velocity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 35, :column 7, :end-line 35, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The angularVelocity read-only property of the `vr.VRPose` interface\n  an array representing the angular velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in radians per second.\n\n  `var myAngularVelocity = VRPose.angularVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularVelocity`"}, :name vr.VRPose/angular-velocity, :variadic false, :file "src/vr/VRPose.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The angularVelocity read-only property of the `vr.VRPose` interface\n  an array representing the angular velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in radians per second.\n\n  `var myAngularVelocity = VRPose.angularVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularVelocity`"}, linear-velocity {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 145, :column 7, :end-line 145, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The linearVelocity read-only property of the `vr.VRPose` interface\n  an array representing the linear velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in meters per second.\n\n  `var myLinearVelocity = VRPose.linearVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearVelocity`"}, :name vr.VRPose/linear-velocity, :variadic false, :file "src/vr/VRPose.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The linearVelocity read-only property of the `vr.VRPose` interface\n  an array representing the linear velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in meters per second.\n\n  `var myLinearVelocity = VRPose.linearVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearVelocity`"}, set-has-position! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 103, :column 7, :end-line 103, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The hasPosition read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.position`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the position property will return null.\n\n  `var myHasPosition = VRPositionState.hasPosition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasPosition`"}, :name vr.VRPose/set-has-position!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The hasPosition read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.position`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the position property will return null.\n\n  `var myHasPosition = VRPositionState.hasPosition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasPosition`"}, set-orientation! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 184, :column 7, :end-line 184, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The orientation read-only property of the `vr.VRPositionState`\n  returns the orientation of the sensor at the current `vr.VRPose.timestamp`,\n  a quarternion value.\n\n  `var myOrientation = VRPose.orientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/orientation`"}, :name vr.VRPose/set-orientation!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The orientation read-only property of the `vr.VRPositionState`\n  returns the orientation of the sensor at the current `vr.VRPose.timestamp`,\n  a quarternion value.\n\n  `var myOrientation = VRPose.orientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/orientation`"}, set-linear-velocity! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 158, :column 7, :end-line 158, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The linearVelocity read-only property of the `vr.VRPose` interface\n  an array representing the linear velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in meters per second.\n\n  `var myLinearVelocity = VRPose.linearVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearVelocity`"}, :name vr.VRPose/set-linear-velocity!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The linearVelocity read-only property of the `vr.VRPose` interface\n  an array representing the linear velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in meters per second.\n\n  `var myLinearVelocity = VRPose.linearVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/linearVelocity`"}, has-orientation {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 61, :column 7, :end-line 61, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The hasOrientation read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.orientation`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the orientation property will return null.\n\n  `var myHasOrientation = VRPositionState.hasOrientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasOrientation`"}, :name vr.VRPose/has-orientation, :variadic false, :file "src/vr/VRPose.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The hasOrientation read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.orientation`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the orientation property will return null.\n\n  `var myHasOrientation = VRPositionState.hasOrientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasOrientation`"}, set-angular-acceleration! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 21, :column 7, :end-line 21, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The angularAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the angular acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myAngularAcceleration = VRPose.angularAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularAcceleration`"}, :name vr.VRPose/set-angular-acceleration!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The angularAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the angular acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myAngularAcceleration = VRPose.angularAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularAcceleration`"}, set-position! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 210, :column 7, :end-line 210, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The position read-only property of the `vr.VRPose` interface\n  the position of the `vr.VRDisplay` at the current `vr.VRPose.timestamp`\n  a 3D vector.\n\n  `var myPosition = VRPose.position;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/position`"}, :name vr.VRPose/set-position!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The position read-only property of the `vr.VRPose` interface\n  the position of the `vr.VRDisplay` at the current `vr.VRPose.timestamp`\n  a 3D vector.\n\n  `var myPosition = VRPose.position;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/position`"}, orientation {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 171, :column 7, :end-line 171, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The orientation read-only property of the `vr.VRPositionState`\n  returns the orientation of the sensor at the current `vr.VRPose.timestamp`,\n  a quarternion value.\n\n  `var myOrientation = VRPose.orientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/orientation`"}, :name vr.VRPose/orientation, :variadic false, :file "src/vr/VRPose.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The orientation read-only property of the `vr.VRPositionState`\n  returns the orientation of the sensor at the current `vr.VRPose.timestamp`,\n  a quarternion value.\n\n  `var myOrientation = VRPose.orientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/orientation`"}, set-angular-velocity! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 48, :column 7, :end-line 48, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The angularVelocity read-only property of the `vr.VRPose` interface\n  an array representing the angular velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in radians per second.\n\n  `var myAngularVelocity = VRPose.angularVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularVelocity`"}, :name vr.VRPose/set-angular-velocity!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The angularVelocity read-only property of the `vr.VRPose` interface\n  an array representing the angular velocity vector of the `vr.VRDisplay`\n  the current `vr.VRPose.timestamp`, in radians per second.\n\n  `var myAngularVelocity = VRPose.angularVelocity;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularVelocity`"}, has-position {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 89, :column 7, :end-line 89, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The hasPosition read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.position`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the position property will return null.\n\n  `var myHasPosition = VRPositionState.hasPosition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasPosition`"}, :name vr.VRPose/has-position, :variadic false, :file "src/vr/VRPose.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The hasPosition read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.position`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the position property will return null.\n\n  `var myHasPosition = VRPositionState.hasPosition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasPosition`"}, set-has-orientation! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 75, :column 7, :end-line 75, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The hasOrientation read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.orientation`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the orientation property will return null.\n\n  `var myHasOrientation = VRPositionState.hasOrientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasOrientation`"}, :name vr.VRPose/set-has-orientation!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The hasOrientation read-only property of the `vr.VRPositionState`\n  returns a boolean indicating whether the `vr.VRPositionState.orientation`\n  is valid (i.e. if the hardware is currently registering a valid\n  If it is false, the orientation property will return null.\n\n  `var myHasOrientation = VRPositionState.hasOrientation;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/hasOrientation`"}, angular-acceleration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 7, :column 7, :end-line 7, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The angularAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the angular acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myAngularAcceleration = VRPose.angularAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularAcceleration`"}, :name vr.VRPose/angular-acceleration, :variadic false, :file "src/vr/VRPose.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The angularAcceleration read-only property of the `vr.VRPose`\n  returns an array representing the angular acceleration vector\n  the `vr.VRDisplay` at the current `vr.VRPose.timestamp`, in meters\n  second per second.\n\n  `var myAngularAcceleration = VRPose.angularAcceleration;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/angularAcceleration`"}, set-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 236, :column 7, :end-line 236, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRPose` interface\n  the current time stamp of the system — a monotonically increasing\n  representing the time since the current app was started.\n\n  `var myTimeStamp = VRPose.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/timeStamp`"}, :name vr.VRPose/set-timestamp!, :variadic false, :file "src/vr/VRPose.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRPose` interface\n  the current time stamp of the system — a monotonically increasing\n  representing the time since the current app was started.\n\n  `var myTimeStamp = VRPose.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/timeStamp`"}, position {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRPose.cljs", :line 197, :column 7, :end-line 197, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The position read-only property of the `vr.VRPose` interface\n  the position of the `vr.VRDisplay` at the current `vr.VRPose.timestamp`\n  a 3D vector.\n\n  `var myPosition = VRPose.position;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/position`"}, :name vr.VRPose/position, :variadic false, :file "src/vr/VRPose.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 197, :end-line 197, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The position read-only property of the `vr.VRPose` interface\n  the position of the `vr.VRDisplay` at the current `vr.VRPose.timestamp`\n  a 3D vector.\n\n  `var myPosition = VRPose.position;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRPose/position`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The VRPose interface of the WebVR API represents the state of\n  VR sensor at a given timestamp (which includes orientation, position,\n  and acceleration information.)"}
{:rename-macros {}, :renames {}, :externs {VRFrameData {}}, :use-macros {}, :excludes #{}, :name vr.VRFrameData, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-pose! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 80, :column 7, :end-line 80, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The pose read-only property of the `vr.VRFrameData` interface\n  the `vr.VRPose` of the `vr.VRDisplay` at the current `vr.VRFrameData.timestamp`.\n\n  `var myPose = vrFrameDataInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/pose`"}, :name vr.VRFrameData/set-pose!, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pose read-only property of the `vr.VRFrameData` interface\n  the `vr.VRPose` of the `vr.VRDisplay` at the current `vr.VRFrameData.timestamp`.\n\n  `var myPose = vrFrameDataInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/pose`"}, timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 144, :column 7, :end-line 144, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRFrameData` interface\n  a constantly increasing timestamp value representing the time\n  frame update occurred.\n\n  `var myTimestamp = vrFrameDataInstance.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/timestamp`"}, :name vr.VRFrameData/timestamp, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRFrameData` interface\n  a constantly increasing timestamp value representing the time\n  frame update occurred.\n\n  `var myTimestamp = vrFrameDataInstance.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/timestamp`"}, right-projection-matrix {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 92, :column 7, :end-line 92, :end-column 30, :arglists (quote ([this])), :doc "Property.\n\n  The rightProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the right eye’s rendering.\n\n  `var myRPM = vrFrameDataInstance.rightProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightProjectionMatrix`"}, :name vr.VRFrameData/right-projection-matrix, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 30, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The rightProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the right eye’s rendering.\n\n  `var myRPM = vrFrameDataInstance.rightProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightProjectionMatrix`"}, set-left-view-matrix! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 55, :column 7, :end-line 55, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The leftViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the left eye’s rendering.\n\n  `var myLVM = vrFrameDataInstance.leftViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftViewMatrix`"}, :name vr.VRFrameData/set-left-view-matrix!, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The leftViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the left eye’s rendering.\n\n  `var myLVM = vrFrameDataInstance.leftViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftViewMatrix`"}, left-projection-matrix {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 16, :column 7, :end-line 16, :end-column 29, :arglists (quote ([this])), :doc "Property.\n\n  The leftProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the left eye’s rendering.\n\n  `var myLPM = vrFrameDataInstance.leftProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftProjectionMatrix`"}, :name vr.VRFrameData/left-projection-matrix, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 29, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The leftProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the left eye’s rendering.\n\n  `var myLPM = vrFrameDataInstance.leftProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftProjectionMatrix`"}, set-left-projection-matrix! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 29, :column 7, :end-line 29, :end-column 34, :arglists (quote ([this val])), :doc "Property.\n\n  The leftProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the left eye’s rendering.\n\n  `var myLPM = vrFrameDataInstance.leftProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftProjectionMatrix`"}, :name vr.VRFrameData/set-left-projection-matrix!, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 34, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The leftProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the left eye’s rendering.\n\n  `var myLPM = vrFrameDataInstance.leftProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftProjectionMatrix`"}, left-view-matrix {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 42, :column 7, :end-line 42, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The leftViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the left eye’s rendering.\n\n  `var myLVM = vrFrameDataInstance.leftViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftViewMatrix`"}, :name vr.VRFrameData/left-view-matrix, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The leftViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the left eye’s rendering.\n\n  `var myLVM = vrFrameDataInstance.leftViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/leftViewMatrix`"}, set-right-projection-matrix! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 105, :column 7, :end-line 105, :end-column 35, :arglists (quote ([this val])), :doc "Property.\n\n  The rightProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the right eye’s rendering.\n\n  `var myRPM = vrFrameDataInstance.rightProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightProjectionMatrix`"}, :name vr.VRFrameData/set-right-projection-matrix!, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 35, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The rightProjectionMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  projection to be used for the right eye’s rendering.\n\n  `var myRPM = vrFrameDataInstance.rightProjectionMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightProjectionMatrix`"}, set-right-view-matrix! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 131, :column 7, :end-line 131, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The rightViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the right eye’s rendering.\n\n  `var myRVM = vrFrameDataInstance.rightViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightViewMatrix`"}, :name vr.VRFrameData/set-right-view-matrix!, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The rightViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the right eye’s rendering.\n\n  `var myRVM = vrFrameDataInstance.rightViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightViewMatrix`"}, right-view-matrix {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 118, :column 7, :end-line 118, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The rightViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the right eye’s rendering.\n\n  `var myRVM = vrFrameDataInstance.rightViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightViewMatrix`"}, :name vr.VRFrameData/right-view-matrix, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The rightViewMatrix read-only property of the `vr.VRFrameData`\n  returns a `web.Float32Array` representing a 4x4 matrix that describes\n  view transform to be used for the right eye’s rendering.\n\n  `var myRVM = vrFrameDataInstance.rightViewMatrix;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/rightViewMatrix`"}, constructor {:name vr.VRFrameData/constructor, :file "src/vr/VRFrameData.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The `vr.VRFrameData` constructor creates a VRFrameData object instance.\n\n  None.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/VRFrameData`", :tag js}, pose {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 68, :column 7, :end-line 68, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The pose read-only property of the `vr.VRFrameData` interface\n  the `vr.VRPose` of the `vr.VRDisplay` at the current `vr.VRFrameData.timestamp`.\n\n  `var myPose = vrFrameDataInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/pose`"}, :name vr.VRFrameData/pose, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pose read-only property of the `vr.VRFrameData` interface\n  the `vr.VRPose` of the `vr.VRDisplay` at the current `vr.VRFrameData.timestamp`.\n\n  `var myPose = vrFrameDataInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/pose`"}, set-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRFrameData.cljs", :line 157, :column 7, :end-line 157, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRFrameData` interface\n  a constantly increasing timestamp value representing the time\n  frame update occurred.\n\n  `var myTimestamp = vrFrameDataInstance.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/timestamp`"}, :name vr.VRFrameData/set-timestamp!, :variadic false, :file "src/vr/VRFrameData.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The timestamp read-only property of the `vr.VRFrameData` interface\n  a constantly increasing timestamp value representing the time\n  frame update occurred.\n\n  `var myTimestamp = vrFrameDataInstance.timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRFrameData/timestamp`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The VRFrameData interface of the WebVR API represents all the\n  needed to render a single frame of a VR scene; constructed by"}
{:rename-macros {}, :renames {}, :externs {VRDisplayEvent {}}, :use-macros {}, :excludes #{}, :name vr.VRDisplayEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name vr.VRDisplayEvent/constructor, :file "src/vr/VRDisplayEvent.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRDisplayEvent.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The `vr.VRDisplayEvent` constructor creates a VRDisplayEvent object instance.\n\n  type\n  \\tA `dom.DOMString` describing the type of event object you want to create.\n  \\teventInitDict\n  \\tA object contaning initialization options to use when creating the constructor. These are:\n\n  \\t\\tdisplay\n  \\t\\tA property containing the `vr.VRDisplay` the event is to be associated with.\n  \\t\\treason\n  \\t\\tA property containing a string representing the human-readable reason why the event is to be fired (see `vr.VRDisplayEvent.reason`).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/VRDisplayEvent`", :tag js}, display {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRDisplayEvent.cljs", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The display read-only property of the `vr.VRDisplayEvent` interface\n  the `vr.VRDisplay` associated with this event.\n\n  `var myDisplay = vrDisplayEventInstance.display;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/display`"}, :name vr.VRDisplayEvent/display, :variadic false, :file "src/vr/VRDisplayEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The display read-only property of the `vr.VRDisplayEvent` interface\n  the `vr.VRDisplay` associated with this event.\n\n  `var myDisplay = vrDisplayEventInstance.display;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/display`"}, set-display! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRDisplayEvent.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The display read-only property of the `vr.VRDisplayEvent` interface\n  the `vr.VRDisplay` associated with this event.\n\n  `var myDisplay = vrDisplayEventInstance.display;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/display`"}, :name vr.VRDisplayEvent/set-display!, :variadic false, :file "src/vr/VRDisplayEvent.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The display read-only property of the `vr.VRDisplayEvent` interface\n  the `vr.VRDisplay` associated with this event.\n\n  `var myDisplay = vrDisplayEventInstance.display;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/display`"}, reason {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRDisplayEvent.cljs", :line 48, :column 7, :end-line 48, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The reason read-only property of the `vr.VRDisplayEvent` interface\n  a human-readable reason why the event was fired.\n\n  `var myReason = vrDisplayEventInstance.reason;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/reason`"}, :name vr.VRDisplayEvent/reason, :variadic false, :file "src/vr/VRDisplayEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The reason read-only property of the `vr.VRDisplayEvent` interface\n  a human-readable reason why the event was fired.\n\n  `var myReason = vrDisplayEventInstance.reason;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/reason`"}, set-reason! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/vr/VRDisplayEvent.cljs", :line 60, :column 7, :end-line 60, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The reason read-only property of the `vr.VRDisplayEvent` interface\n  a human-readable reason why the event was fired.\n\n  `var myReason = vrDisplayEventInstance.reason;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/reason`"}, :name vr.VRDisplayEvent/set-reason!, :variadic false, :file "src/vr/VRDisplayEvent.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The reason read-only property of the `vr.VRDisplayEvent` interface\n  a human-readable reason why the event was fired.\n\n  `var myReason = vrDisplayEventInstance.reason;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VRDisplayEvent/reason`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The VRDisplayEvent interface of the WebVR API represents represents\n  event object of WebVR-related events (see the list of WebVR window"}
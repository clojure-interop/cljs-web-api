{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name payment.PaymentAddress, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {country {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 45, :column 7, :end-line 45, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The country read-only property of the `payment.PaymentAddress`\n  is a string identifying the address's country using the ISO 3166-1\n  standard. The string is always in its canonical upper-case form.\n\n  `var paymentCountry = PaymentAddress.country;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/country`"}, :name payment.PaymentAddress/country, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The country read-only property of the `payment.PaymentAddress`\n  is a string identifying the address's country using the ISO 3166-1\n  standard. The string is always in its canonical upper-case form.\n\n  `var paymentCountry = PaymentAddress.country;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/country`"}, region-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 179, :column 7, :end-line 179, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The regionCode read-only attribute of the `payment.PaymentAddress`\n  returns a one-, two-, or three-alphanumeric code (`dom.DOMString`)\n  the region of the address (e.g., \\\"CA\\\" for California, or \\\"11\\\"\n  Lisbon, Portugal).\n\n  `var regionCode = paymentAddress.regionCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/regionCode`"}, :name payment.PaymentAddress/region-code, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The regionCode read-only attribute of the `payment.PaymentAddress`\n  returns a one-, two-, or three-alphanumeric code (`dom.DOMString`)\n  the region of the address (e.g., \\\"CA\\\" for California, or \\\"11\\\"\n  Lisbon, Portugal).\n\n  `var regionCode = paymentAddress.regionCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/regionCode`"}, sorting-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 193, :column 7, :end-line 193, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The sortingCode read-only property of the `payment.PaymentAddress`\n  returns a string containing a postal sorting code such as is\n  in France.\n\n  `var sortingCode = PaymentAddress.sortingCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/sortingCode`"}, :name payment.PaymentAddress/sorting-code, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The sortingCode read-only property of the `payment.PaymentAddress`\n  returns a string containing a postal sorting code such as is\n  in France.\n\n  `var sortingCode = PaymentAddress.sortingCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/sortingCode`"}, set-recipient! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 152, :column 7, :end-line 152, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only recipient property of the `payment.PaymentAddress`\n  returns a string containing the name of the recipient, purchaser,\n  contact person at the payment address.\n\n  `var paymentRecipient = PaymentAddress.recipient;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/recipient`"}, :name payment.PaymentAddress/set-recipient!, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only recipient property of the `payment.PaymentAddress`\n  returns a string containing the name of the recipient, purchaser,\n  contact person at the payment address.\n\n  `var paymentRecipient = PaymentAddress.recipient;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/recipient`"}, phone {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 112, :column 7, :end-line 112, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The read-only phone property of the `payment.PaymentAddress`\n  returns a string containing the telephone number of the recipient\n  contact person.\n\n  `var paymentPhone = PaymentAddress.phone;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/phone`"}, :name payment.PaymentAddress/phone, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only phone property of the `payment.PaymentAddress`\n  returns a string containing the telephone number of the recipient\n  contact person.\n\n  `var paymentPhone = PaymentAddress.phone;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/phone`"}, address-line {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 19, :column 7, :end-line 19, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The addressLine read-only property of the `payment.PaymentAddress`\n  is an array of `dom.DOMString` objects, each specifying a line\n  the address that is not covered by one of the other properties\n  PaymentAddress.\n\n  `var paymentAddressLines = PaymentAddress.addressLine;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/addressLine`"}, :name payment.PaymentAddress/address-line, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The addressLine read-only property of the `payment.PaymentAddress`\n  is an array of `dom.DOMString` objects, each specifying a line\n  the address that is not covered by one of the other properties\n  PaymentAddress.\n\n  `var paymentAddressLines = PaymentAddress.addressLine;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/addressLine`"}, recipient {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 139, :column 7, :end-line 139, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The read-only recipient property of the `payment.PaymentAddress`\n  returns a string containing the name of the recipient, purchaser,\n  contact person at the payment address.\n\n  `var paymentRecipient = PaymentAddress.recipient;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/recipient`"}, :name payment.PaymentAddress/recipient, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only recipient property of the `payment.PaymentAddress`\n  returns a string containing the name of the recipient, purchaser,\n  contact person at the payment address.\n\n  `var paymentRecipient = PaymentAddress.recipient;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/recipient`"}, to-json {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The toJSON() property of the `payment.PaymentAddress` interface\n  a standard serializer that returns a JSON representation of the\n  object's properties.\n\n  `var json = PaymentAddress.toJSON()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/toJSON`"}, :name payment.PaymentAddress/to-json, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The toJSON() property of the `payment.PaymentAddress` interface\n  a standard serializer that returns a JSON representation of the\n  object's properties.\n\n  `var json = PaymentAddress.toJSON()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/toJSON`"}, city {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The city read-only property of the `payment.PaymentAddress` interface\n  a string containing the city or town portion of the address.\n\n  `var paymentCity = PaymentAddress.city;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/city`"}, :name payment.PaymentAddress/city, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The city read-only property of the `payment.PaymentAddress` interface\n  a string containing the city or town portion of the address.\n\n  `var paymentCity = PaymentAddress.city;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/city`"}, organization {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 99, :column 7, :end-line 99, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The organization read-only property of the `payment.PaymentAddress`\n  returns a string containing the name of the organization, firm,\n  or institution at the address.\n\n  `var paymentOrganization = PaymentAddress.organization;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/organization`"}, :name payment.PaymentAddress/organization, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The organization read-only property of the `payment.PaymentAddress`\n  returns a string containing the name of the organization, firm,\n  or institution at the address.\n\n  `var paymentOrganization = PaymentAddress.organization;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/organization`"}, set-country! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 58, :column 7, :end-line 58, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The country read-only property of the `payment.PaymentAddress`\n  is a string identifying the address's country using the ISO 3166-1\n  standard. The string is always in its canonical upper-case form.\n\n  `var paymentCountry = PaymentAddress.country;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/country`"}, :name payment.PaymentAddress/set-country!, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The country read-only property of the `payment.PaymentAddress`\n  is a string identifying the address's country using the ISO 3166-1\n  standard. The string is always in its canonical upper-case form.\n\n  `var paymentCountry = PaymentAddress.country;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/country`"}, postal-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 125, :column 7, :end-line 125, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The postalCode read-only property of the `payment.PaymentAddress`\n  returns a string containing a code used by a jurisdiction for\n  routing, for example, the ZIP Code in the United States or the\n  Index Number (PIN code) in India.\n\n  `var paymentPostalCode = PaymentAddress.postalCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/postalCode`"}, :name payment.PaymentAddress/postal-code, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The postalCode read-only property of the `payment.PaymentAddress`\n  returns a string containing a code used by a jurisdiction for\n  routing, for example, the ZIP Code in the United States or the\n  Index Number (PIN code) in India.\n\n  `var paymentPostalCode = PaymentAddress.postalCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/postalCode`"}, region {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 165, :column 7, :end-line 165, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only region property of the `payment.PaymentAddress`\n  returns a string containing the top-level administrative subdivision\n  the country in which the address is located. For example, this\n  be a state, province, oblast, or prefecture.\n\n  `var paymentRegion = PaymentAddress.region;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/region`"}, :name payment.PaymentAddress/region, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only region property of the `payment.PaymentAddress`\n  returns a string containing the top-level administrative subdivision\n  the country in which the address is located. For example, this\n  be a state, province, oblast, or prefecture.\n\n  `var paymentRegion = PaymentAddress.region;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/region`"}, set-dependent-locality! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 85, :column 7, :end-line 85, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only dependentLocality property of the `payment.PaymentAddress`\n  is a string containing a sublocality designation within a city,\n  as a neighborhood, borough, district, or, in the United Kingdom,\n  dependent locality. Also known as a post town.\n\n  `var paymentDependentLocality = PaymentAddress.dependentLocality;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/dependentLocality`"}, :name payment.PaymentAddress/set-dependent-locality!, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only dependentLocality property of the `payment.PaymentAddress`\n  is a string containing a sublocality designation within a city,\n  as a neighborhood, borough, district, or, in the United Kingdom,\n  dependent locality. Also known as a post town.\n\n  `var paymentDependentLocality = PaymentAddress.dependentLocality;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/dependentLocality`"}, language-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 206, :column 7, :end-line 206, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The languageCode read-only property of the `payment.PaymentAddress`\n  returns a string containing the BCP-47 language code for the\n\n  `var paymentLanguageCode = PaymentAddress.languageCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/languageCode`"}, :name payment.PaymentAddress/language-code, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The languageCode read-only property of the `payment.PaymentAddress`\n  returns a string containing the BCP-47 language code for the\n\n  `var paymentLanguageCode = PaymentAddress.languageCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/languageCode`"}, dependent-locality {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 71, :column 7, :end-line 71, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The read-only dependentLocality property of the `payment.PaymentAddress`\n  is a string containing a sublocality designation within a city,\n  as a neighborhood, borough, district, or, in the United Kingdom,\n  dependent locality. Also known as a post town.\n\n  `var paymentDependentLocality = PaymentAddress.dependentLocality;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/dependentLocality`"}, :name payment.PaymentAddress/dependent-locality, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only dependentLocality property of the `payment.PaymentAddress`\n  is a string containing a sublocality designation within a city,\n  as a neighborhood, borough, district, or, in the United Kingdom,\n  dependent locality. Also known as a post town.\n\n  `var paymentDependentLocality = PaymentAddress.dependentLocality;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/dependentLocality`"}, set-language-code! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/payment/PaymentAddress.cljs", :line 218, :column 7, :end-line 218, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The languageCode read-only property of the `payment.PaymentAddress`\n  returns a string containing the BCP-47 language code for the\n\n  `var paymentLanguageCode = PaymentAddress.languageCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/languageCode`"}, :name payment.PaymentAddress/set-language-code!, :variadic false, :file "src/payment/PaymentAddress.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The languageCode read-only property of the `payment.PaymentAddress`\n  returns a string containing the BCP-47 language code for the\n\n  `var paymentLanguageCode = PaymentAddress.languageCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PaymentAddress/languageCode`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PaymentAddress interface of the Payment Request API is used\n  store shipping or payment address information."}
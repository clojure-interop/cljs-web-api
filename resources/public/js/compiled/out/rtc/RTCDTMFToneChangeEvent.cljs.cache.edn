{:rename-macros {}, :renames {}, :externs {RTCDTMFToneChangeEvent {}}, :use-macros {}, :excludes #{}, :name rtc.RTCDTMFToneChangeEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name rtc.RTCDTMFToneChangeEvent/constructor, :file "src/rtc/RTCDTMFToneChangeEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFToneChangeEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The RTCDTMFToneChangeEvent() constructor creates a new `rtc.RTCDTMFToneChangeEvent`.\n\n  type\n  A `dom.DOMString` containing the name of the event. This is always \\\"tonechange\\\".\n  options\n  A dictionary of type RTCDTMFToneChangeEventInit, which may contain one or more of the following fields:\n\n  tone\n  A `dom.DOMString` containing a single DTMF tone character which has just begun to play, or an empty string (\\\"\\\") to indicate that the previous tone has stopped playing. See Tone characters for details on what characters are permitted.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/RTCDTMFToneChangeEvent`", :tag js}, tone {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFToneChangeEvent.cljs", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only property RTCDTMFToneChangeEvent.tone returns the\n  character which has just begun to play, or an empty string (\\\"\\\").\n  all queued tones have finished playing (that is, `rtc.RTCDTMFSender.toneBuffer`\n  empty).\n\n  `var tone = RTCDTMFToneChangeEvent.tone;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/tone`"}, :name rtc.RTCDTMFToneChangeEvent/tone, :variadic false, :file "src/rtc/RTCDTMFToneChangeEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only property RTCDTMFToneChangeEvent.tone returns the\n  character which has just begun to play, or an empty string (\\\"\\\").\n  all queued tones have finished playing (that is, `rtc.RTCDTMFSender.toneBuffer`\n  empty).\n\n  `var tone = RTCDTMFToneChangeEvent.tone;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/tone`"}, set-tone! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFToneChangeEvent.cljs", :line 37, :column 7, :end-line 37, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only property RTCDTMFToneChangeEvent.tone returns the\n  character which has just begun to play, or an empty string (\\\"\\\").\n  all queued tones have finished playing (that is, `rtc.RTCDTMFSender.toneBuffer`\n  empty).\n\n  `var tone = RTCDTMFToneChangeEvent.tone;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/tone`"}, :name rtc.RTCDTMFToneChangeEvent/set-tone!, :variadic false, :file "src/rtc/RTCDTMFToneChangeEvent.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only property RTCDTMFToneChangeEvent.tone returns the\n  character which has just begun to play, or an empty string (\\\"\\\").\n  all queued tones have finished playing (that is, `rtc.RTCDTMFSender.toneBuffer`\n  empty).\n\n  `var tone = RTCDTMFToneChangeEvent.tone;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/tone`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The RTCDTMFToneChangeEvent interface represents events sent to\n  that DTMF tones have started or finished playing. This interface\n  used by the tonechange event."}
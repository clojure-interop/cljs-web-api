{:rename-macros {}, :renames {}, :externs {RTCSessionDescription {}}, :use-macros {}, :excludes #{type}, :name rtc.RTCSessionDescription, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name rtc.RTCSessionDescription/constructor, :file "src/rtc/RTCSessionDescription.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :doc "Constructor.\n\n  The RTCSessionDescription() constructor creates a new `rtc.RTCSessionDescription` with its properties initialized as described in the specified object.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/RTCSessionDescription`", :tag js}, to-json {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 16, :column 7, :end-line 16, :end-column 14, :arglists (quote ([this & args])), :doc "Method.\n\n  The RTCSessionDescription.toJSON() method generates a JSON description\n  the object. Both properties, `web.type` and `web.sdp`, are contained\n  the generated JSON.\n\n  `var jsonValue = sd.toJSON();\n\n  The result value is a `web.JSON` object containing the following values:\n\n\n  \\\"type\\\", containing the value of the `rtc.RTCSessionDescription.type` property and can be one of the following values: \\\"offer\\\", \\\"answer\\\", \\\"pranswer\\\" or null.\n  \\\"sdp\\\", containing a `dom.DOMString`, or null, with the SDP message corresponding to `rtc.RTCSessionDescription.sdp` property.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/toJSON`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name rtc.RTCSessionDescription/to-json, :variadic true, :file "src/rtc/RTCSessionDescription.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The RTCSessionDescription.toJSON() method generates a JSON description\n  the object. Both properties, `web.type` and `web.sdp`, are contained\n  the generated JSON.\n\n  `var jsonValue = sd.toJSON();\n\n  The result value is a `web.JSON` object containing the following values:\n\n\n  \\\"type\\\", containing the value of the `rtc.RTCSessionDescription.type` property and can be one of the following values: \\\"offer\\\", \\\"answer\\\", \\\"pranswer\\\" or null.\n  \\\"sdp\\\", containing a `dom.DOMString`, or null, with the SDP message corresponding to `rtc.RTCSessionDescription.sdp` property.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/toJSON`"}, rtc-session-description {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 35, :column 7, :end-line 35, :end-column 30, :arglists (quote ([this rtc-session-description-init])), :doc "Method.\n\n  The RTCSessionDescription() constructor creates a new `rtc.RTCSessionDescription`\n  its properties initialized as described in the specified object.\n\n  `sessionDescription = new RTCSessionDescription(rtcSessionDescriptionInit);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/RTCSessionDescription`"}, :name rtc.RTCSessionDescription/rtc-session-description, :variadic false, :file "src/rtc/RTCSessionDescription.cljs", :end-column 30, :method-params ([this rtc-session-description-init]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this rtc-session-description-init])), :doc "Method.\n\n  The RTCSessionDescription() constructor creates a new `rtc.RTCSessionDescription`\n  its properties initialized as described in the specified object.\n\n  `sessionDescription = new RTCSessionDescription(rtcSessionDescriptionInit);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/RTCSessionDescription`"}, sdp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 47, :column 7, :end-line 47, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The property RTCSessionDescription.sdp is a read-only `dom.DOMString`\n  the SDP which describes the session.\n\n  `var value = sessionDescription.sdp;\n  sessionDescription.sdp = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/sdp`"}, :name rtc.RTCSessionDescription/sdp, :variadic false, :file "src/rtc/RTCSessionDescription.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The property RTCSessionDescription.sdp is a read-only `dom.DOMString`\n  the SDP which describes the session.\n\n  `var value = sessionDescription.sdp;\n  sessionDescription.sdp = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/sdp`"}, set-sdp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 60, :column 7, :end-line 60, :end-column 15, :arglists (quote ([this val])), :doc "Property.\n\n  The property RTCSessionDescription.sdp is a read-only `dom.DOMString`\n  the SDP which describes the session.\n\n  `var value = sessionDescription.sdp;\n  sessionDescription.sdp = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/sdp`"}, :name rtc.RTCSessionDescription/set-sdp!, :variadic false, :file "src/rtc/RTCSessionDescription.cljs", :end-column 15, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The property RTCSessionDescription.sdp is a read-only `dom.DOMString`\n  the SDP which describes the session.\n\n  `var value = sessionDescription.sdp;\n  sessionDescription.sdp = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/sdp`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 73, :column 7, :end-line 73, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The property RTCSessionDescription.type is a read-only value\n  type RTCSdpType which describes the description's type.\n\n  `var value = sessionDescription.type;\n  sessionDescription.type = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/type`"}, :name rtc.RTCSessionDescription/type, :variadic false, :file "src/rtc/RTCSessionDescription.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The property RTCSessionDescription.type is a read-only value\n  type RTCSdpType which describes the description's type.\n\n  `var value = sessionDescription.type;\n  sessionDescription.type = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/type`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCSessionDescription.cljs", :line 86, :column 7, :end-line 86, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The property RTCSessionDescription.type is a read-only value\n  type RTCSdpType which describes the description's type.\n\n  `var value = sessionDescription.type;\n  sessionDescription.type = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/type`"}, :name rtc.RTCSessionDescription/set-type!, :variadic false, :file "src/rtc/RTCSessionDescription.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The property RTCSessionDescription.type is a read-only value\n  type RTCSdpType which describes the description's type.\n\n  `var value = sessionDescription.type;\n  sessionDescription.type = value;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/type`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The RTCSessionDescription interface describes one end of a connection—or\n  connection—and how it's configured. Each RTCSessionDescription\n  of a description `web.type` indicating which part of the offer/answer\n  process it describes and of the SDP descriptor of the session."}
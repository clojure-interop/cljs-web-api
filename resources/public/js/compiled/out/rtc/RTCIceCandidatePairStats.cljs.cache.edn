{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCIceCandidatePairStats, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-consent-requests-sent! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 735, :column 7, :end-line 735, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentRequestsSent\n  the number of consent requests that have been sent by this peer\n  the remote peer on the connection described by the pair of candidates.\n\n  `consentRequestsSent = rtcIceCandidatePairStats.consentRequestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentRequestsSent`"}, :name rtc.RTCIceCandidatePairStats/set-consent-requests-sent!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentRequestsSent\n  the number of consent requests that have been sent by this peer\n  the remote peer on the connection described by the pair of candidates.\n\n  `consentRequestsSent = rtcIceCandidatePairStats.consentRequestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentRequestsSent`"}, set-consent-expired-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 102, :column 7, :end-line 102, :end-column 37, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentExpiredTimestamp\n  the time at which the most recent STUN binding response expired.\n\n  `consentExpiration = rtcIceCandidatePairStats.consentExpiredTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentExpiredTimestamp`"}, :name rtc.RTCIceCandidatePairStats/set-consent-expired-timestamp!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 37, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentExpiredTimestamp\n  the time at which the most recent STUN binding response expired.\n\n  `consentExpiration = rtcIceCandidatePairStats.consentExpiredTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentExpiredTimestamp`"}, set-readable! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 387, :column 7, :end-line 387, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property readable\n  whether or not the connection described by the candidate pair\n  received at least one valid incoming ICE request.\n\n  `isReadable = rtcIceCandidatePairStats.readable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/readable`"}, :name rtc.RTCIceCandidatePairStats/set-readable!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property readable\n  whether or not the connection described by the candidate pair\n  received at least one valid incoming ICE request.\n\n  `isReadable = rtcIceCandidatePairStats.readable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/readable`"}, set-nominated! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 285, :column 7, :end-line 285, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property nominated specifies\n  or not the candidate pair described by the underlying RTCIceCandidatePair\n  been nominated to be used as the configuration for the WebRTC\n\n  `nominated = rtcIceCandidatePairStats.nominated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/nominated`"}, :name rtc.RTCIceCandidatePairStats/set-nominated!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property nominated specifies\n  or not the candidate pair described by the underlying RTCIceCandidatePair\n  been nominated to be used as the configuration for the WebRTC\n\n  `nominated = rtcIceCandidatePairStats.nominated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/nominated`"}, available-outgoing-bitrate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 8, :column 7, :end-line 8, :end-column 33, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableOutgoingBitrate\n  a value indicative of the available outbound capacity of the\n  connection represented by the candidate pair.\n\n  `availableOutgoingBitrate = rtcIceCandidatePairStats.availableOutgoingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableOutgoingBitrate`"}, :name rtc.RTCIceCandidatePairStats/available-outgoing-bitrate, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 33, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableOutgoingBitrate\n  a value indicative of the available outbound capacity of the\n  connection represented by the candidate pair.\n\n  `availableOutgoingBitrate = rtcIceCandidatePairStats.availableOutgoingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableOutgoingBitrate`"}, set-packets-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 311, :column 7, :end-line 311, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsReceived\n  indicates the total number of packets of any kind that have been\n  on the connection described by the pair of candidates.\n\n  `packetsReceived = rtcIceCandidatePairStats.packetsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsReceived`"}, :name rtc.RTCIceCandidatePairStats/set-packets-received!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsReceived\n  indicates the total number of packets of any kind that have been\n  on the connection described by the pair of candidates.\n\n  `packetsReceived = rtcIceCandidatePairStats.packetsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsReceived`"}, consent-expired-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 90, :column 7, :end-line 90, :end-column 32, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentExpiredTimestamp\n  the time at which the most recent STUN binding response expired.\n\n  `consentExpiration = rtcIceCandidatePairStats.consentExpiredTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentExpiredTimestamp`"}, :name rtc.RTCIceCandidatePairStats/consent-expired-timestamp, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 32, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentExpiredTimestamp\n  the time at which the most recent STUN binding response expired.\n\n  `consentExpiration = rtcIceCandidatePairStats.consentExpiredTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentExpiredTimestamp`"}, bytes-receieved {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 34, :column 7, :end-line 34, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesReceived indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been received to date on the connection\n  by the candidate pair.\n\n  `received = rtcIceCandidatePairStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesReceived`"}, :name rtc.RTCIceCandidatePairStats/bytes-receieved, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesReceived indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been received to date on the connection\n  by the candidate pair.\n\n  `received = rtcIceCandidatePairStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesReceived`"}, set-retransmissions-sent! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 789, :column 7, :end-line 789, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsSent\n  indicates the total number of STUN connectivity check request\n  that have been sent so far on the pair of candidates.\n\n  `retransmissionsSent = rtcIceCandidatePairStats.retransmissionsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsSent`"}, :name rtc.RTCIceCandidatePairStats/set-retransmissions-sent!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 789, :end-line 789, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsSent\n  indicates the total number of STUN connectivity check request\n  that have been sent so far on the pair of candidates.\n\n  `retransmissionsSent = rtcIceCandidatePairStats.retransmissionsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsSent`"}, set-responses-sent! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 524, :column 7, :end-line 524, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's responsesSent\n  indicates the total number of STUN connectivity check responses\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `responsesSent = rtcIceCandidatePairStats.responsesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesSent`"}, :name rtc.RTCIceCandidatePairStats/set-responses-sent!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 524, :end-line 524, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's responsesSent\n  indicates the total number of STUN connectivity check responses\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `responsesSent = rtcIceCandidatePairStats.responsesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesSent`"}, requests-sent {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 456, :column 7, :end-line 456, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsSent\n  indicates the total number of STUN connectivity check requests\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `requestsSent = rtcIceCandidatePairStats.requestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsSent`"}, :name rtc.RTCIceCandidatePairStats/requests-sent, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 456, :end-line 456, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsSent\n  indicates the total number of STUN connectivity check requests\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `requestsSent = rtcIceCandidatePairStats.requestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsSent`"}, set-last-packet-sent-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 179, :column 7, :end-line 179, :end-column 38, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketSentTimestamp\n  the time at which the connection described by the candidate pair\n  sent a packet, not including STUN packets.\n\n  `lastPacketSentTimestamp = rtcIceCandidatePairStats.lastPacketSentTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketSentTimestamp`"}, :name rtc.RTCIceCandidatePairStats/set-last-packet-sent-timestamp!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 38, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketSentTimestamp\n  the time at which the connection described by the candidate pair\n  sent a packet, not including STUN packets.\n\n  `lastPacketSentTimestamp = rtcIceCandidatePairStats.lastPacketSentTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketSentTimestamp`"}, remote-candidate-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 400, :column 7, :end-line 400, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property remoteCandidateId\n  a string that uniquely identifies the remote ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `remoteCandidateId = rtcIceCandidatePairStats.remoteCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/remoteCandidateId`"}, :name rtc.RTCIceCandidatePairStats/remote-candidate-id, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 400, :end-line 400, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property remoteCandidateId\n  a string that uniquely identifies the remote ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `remoteCandidateId = rtcIceCandidatePairStats.remoteCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/remoteCandidateId`"}, set-last-response-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 231, :column 7, :end-line 231, :end-column 35, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastResponseTimestamp\n  the time at which the last STUN response was received on the\n  candidate pair.\n\n  `lastResponseTimestamp = rtcIceCandidatePairStats.lastResponseTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastResponseTimestamp`"}, :name rtc.RTCIceCandidatePairStats/set-last-response-timestamp!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 35, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 231, :end-line 231, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastResponseTimestamp\n  the time at which the last STUN response was received on the\n  candidate pair.\n\n  `lastResponseTimestamp = rtcIceCandidatePairStats.lastResponseTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastResponseTimestamp`"}, set-available-incoming-bitrate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 681, :column 7, :end-line 681, :end-column 38, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableIncomingBitrate\n  a value indicative of the available inbound capacity of the network\n  represented by the candidate pair.\n\n  `availableIncomingBitrate = rtcIceCandidatePairStats.availableIncomingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate`"}, :name rtc.RTCIceCandidatePairStats/set-available-incoming-bitrate!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 38, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 681, :end-line 681, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableIncomingBitrate\n  a value indicative of the available inbound capacity of the network\n  represented by the candidate pair.\n\n  `availableIncomingBitrate = rtcIceCandidatePairStats.availableIncomingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate`"}, set-selected! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 816, :column 7, :end-line 816, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The non-standard, Firefox-specific `rtc.RTCIceCandidatePairStats`\n  selected indicates whether or not the candidate pair described\n  the object is the one currently being used to communicate with\n  remote peer.\n\n  `isSelected = icpStats.selected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/selected`"}, :name rtc.RTCIceCandidatePairStats/set-selected!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 816, :end-line 816, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The non-standard, Firefox-specific `rtc.RTCIceCandidatePairStats`\n  selected indicates whether or not the candidate pair described\n  the object is the one currently being used to communicate with\n  remote peer.\n\n  `isSelected = icpStats.selected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/selected`"}, consent-requests-sent {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 722, :column 7, :end-line 722, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentRequestsSent\n  the number of consent requests that have been sent by this peer\n  the remote peer on the connection described by the pair of candidates.\n\n  `consentRequestsSent = rtcIceCandidatePairStats.consentRequestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentRequestsSent`"}, :name rtc.RTCIceCandidatePairStats/consent-requests-sent, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 722, :end-line 722, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property consentRequestsSent\n  the number of consent requests that have been sent by this peer\n  the remote peer on the connection described by the pair of candidates.\n\n  `consentRequestsSent = rtcIceCandidatePairStats.consentRequestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/consentRequestsSent`"}, nominated {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 272, :column 7, :end-line 272, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property nominated specifies\n  or not the candidate pair described by the underlying RTCIceCandidatePair\n  been nominated to be used as the configuration for the WebRTC\n\n  `nominated = rtcIceCandidatePairStats.nominated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/nominated`"}, :name rtc.RTCIceCandidatePairStats/nominated, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property nominated specifies\n  or not the candidate pair described by the underlying RTCIceCandidatePair\n  been nominated to be used as the configuration for the WebRTC\n\n  `nominated = rtcIceCandidatePairStats.nominated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/nominated`"}, set-retransmissions-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 551, :column 7, :end-line 551, :end-column 36, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsReceived\n  indicates the total number of STUN connectivity check request\n  that have been received so far on the pair of candidates.\n\n  `retransmissionsReceived = rtcIceCandidatePairStats.retransmissionsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsReceived`"}, :name rtc.RTCIceCandidatePairStats/set-retransmissions-received!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 36, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 551, :end-line 551, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsReceived\n  indicates the total number of STUN connectivity check request\n  that have been received so far on the pair of candidates.\n\n  `retransmissionsReceived = rtcIceCandidatePairStats.retransmissionsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsReceived`"}, selected {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 802, :column 7, :end-line 802, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The non-standard, Firefox-specific `rtc.RTCIceCandidatePairStats`\n  selected indicates whether or not the candidate pair described\n  the object is the one currently being used to communicate with\n  remote peer.\n\n  `isSelected = icpStats.selected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/selected`"}, :name rtc.RTCIceCandidatePairStats/selected, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 802, :end-line 802, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The non-standard, Firefox-specific `rtc.RTCIceCandidatePairStats`\n  selected indicates whether or not the candidate pair described\n  the object is the one currently being used to communicate with\n  remote peer.\n\n  `isSelected = icpStats.selected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/selected`"}, set-state! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 576, :column 7, :end-line 576, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The state property in an `rtc.RTCIceCandidatePairStats` object\n  the state of the check list of which the candidate pair is a\n\n  `state = rtcIceCandidatePairStats.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/state`"}, :name rtc.RTCIceCandidatePairStats/set-state!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 576, :end-line 576, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The state property in an `rtc.RTCIceCandidatePairStats` object\n  the state of the check list of which the candidate pair is a\n\n  `state = rtcIceCandidatePairStats.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/state`"}, retransmissions-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 538, :column 7, :end-line 538, :end-column 31, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsReceived\n  indicates the total number of STUN connectivity check request\n  that have been received so far on the pair of candidates.\n\n  `retransmissionsReceived = rtcIceCandidatePairStats.retransmissionsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsReceived`"}, :name rtc.RTCIceCandidatePairStats/retransmissions-received, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 31, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 538, :end-line 538, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsReceived\n  indicates the total number of STUN connectivity check request\n  that have been received so far on the pair of candidates.\n\n  `retransmissionsReceived = rtcIceCandidatePairStats.retransmissionsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsReceived`"}, set-remote-candidate-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 414, :column 7, :end-line 414, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property remoteCandidateId\n  a string that uniquely identifies the remote ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `remoteCandidateId = rtcIceCandidatePairStats.remoteCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/remoteCandidateId`"}, :name rtc.RTCIceCandidatePairStats/set-remote-candidate-id!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property remoteCandidateId\n  a string that uniquely identifies the remote ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `remoteCandidateId = rtcIceCandidatePairStats.remoteCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/remoteCandidateId`"}, set-current-round-trip-time! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 762, :column 7, :end-line 762, :end-column 35, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property currentRoundTripTime\n  a floating-point value indicating the number of seconds it takes\n  data to be sent by this peer to the remote peer and back over\n  connection described by this pair of ICE candidates.\n\n  `rtt = rtcIceCandidatePairStats.currentRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/currentRoundTripTime`"}, :name rtc.RTCIceCandidatePairStats/set-current-round-trip-time!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 35, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 762, :end-line 762, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property currentRoundTripTime\n  a floating-point value indicating the number of seconds it takes\n  data to be sent by this peer to the remote peer and back over\n  connection described by this pair of ICE candidates.\n\n  `rtt = rtcIceCandidatePairStats.currentRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/currentRoundTripTime`"}, total-round-trip-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 588, :column 7, :end-line 588, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's totalRoundTripTime\n  is the total time that has elapsed between sending STUN requests\n  receiving the responses, for all such requests that have been\n  so far on the pair of candidates described by this RTCIceCandidatePairStats\n\n  `totalRTT = rtcIceCandidatePairStats.totalRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/totalRoundTripTime`"}, :name rtc.RTCIceCandidatePairStats/total-round-trip-time, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 588, :end-line 588, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's totalRoundTripTime\n  is the total time that has elapsed between sending STUN requests\n  receiving the responses, for all such requests that have been\n  so far on the pair of candidates described by this RTCIceCandidatePairStats\n\n  `totalRTT = rtcIceCandidatePairStats.totalRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/totalRoundTripTime`"}, current-round-trip-time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 748, :column 7, :end-line 748, :end-column 30, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property currentRoundTripTime\n  a floating-point value indicating the number of seconds it takes\n  data to be sent by this peer to the remote peer and back over\n  connection described by this pair of ICE candidates.\n\n  `rtt = rtcIceCandidatePairStats.currentRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/currentRoundTripTime`"}, :name rtc.RTCIceCandidatePairStats/current-round-trip-time, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 30, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 748, :end-line 748, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property currentRoundTripTime\n  a floating-point value indicating the number of seconds it takes\n  data to be sent by this peer to the remote peer and back over\n  connection described by this pair of ICE candidates.\n\n  `rtt = rtcIceCandidatePairStats.currentRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/currentRoundTripTime`"}, set-packets-sent! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 337, :column 7, :end-line 337, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsSent property\n  the total number of packets which have been sent on the connection\n  by the pair of candidates.\n\n  `packetsSent = rtcIceCandidatePairStats.packetsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsSent`"}, :name rtc.RTCIceCandidatePairStats/set-packets-sent!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsSent property\n  the total number of packets which have been sent on the connection\n  by the pair of candidates.\n\n  `packetsSent = rtcIceCandidatePairStats.packetsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsSent`"}, set-available-outgoing-bitrate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 21, :column 7, :end-line 21, :end-column 38, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableOutgoingBitrate\n  a value indicative of the available outbound capacity of the\n  connection represented by the candidate pair.\n\n  `availableOutgoingBitrate = rtcIceCandidatePairStats.availableOutgoingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableOutgoingBitrate`"}, :name rtc.RTCIceCandidatePairStats/set-available-outgoing-bitrate!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 38, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableOutgoingBitrate\n  a value indicative of the available outbound capacity of the\n  connection represented by the candidate pair.\n\n  `availableOutgoingBitrate = rtcIceCandidatePairStats.availableOutgoingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableOutgoingBitrate`"}, readable {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 374, :column 7, :end-line 374, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property readable\n  whether or not the connection described by the candidate pair\n  received at least one valid incoming ICE request.\n\n  `isReadable = rtcIceCandidatePairStats.readable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/readable`"}, :name rtc.RTCIceCandidatePairStats/readable, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 374, :end-line 374, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property readable\n  whether or not the connection described by the candidate pair\n  received at least one valid incoming ICE request.\n\n  `isReadable = rtcIceCandidatePairStats.readable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/readable`"}, packets-sent {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 324, :column 7, :end-line 324, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsSent property\n  the total number of packets which have been sent on the connection\n  by the pair of candidates.\n\n  `packetsSent = rtcIceCandidatePairStats.packetsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsSent`"}, :name rtc.RTCIceCandidatePairStats/packets-sent, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 324, :end-line 324, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsSent property\n  the total number of packets which have been sent on the connection\n  by the pair of candidates.\n\n  `packetsSent = rtcIceCandidatePairStats.packetsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsSent`"}, requests-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 428, :column 7, :end-line 428, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsReceived\n  indicates the total number of STUN connectivity check requests\n  have been received so far on the connection described by this\n  of candidates.\n\n  `requestsReceived = rtcIceCandidatePairStats.requestsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsReceived`"}, :name rtc.RTCIceCandidatePairStats/requests-received, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 428, :end-line 428, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsReceived\n  indicates the total number of STUN connectivity check requests\n  have been received so far on the connection described by this\n  of candidates.\n\n  `requestsReceived = rtcIceCandidatePairStats.requestsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsReceived`"}, set-first-request-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 127, :column 7, :end-line 127, :end-column 35, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property firstRequestTimestamp\n  the time at which the first STUN request was sent on the described\n  pair.\n\n  `firstRequestTimestamp = rtcIceCandidatePairStats.firstRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/firstRequestTimestamp`"}, :name rtc.RTCIceCandidatePairStats/set-first-request-timestamp!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 35, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property firstRequestTimestamp\n  the time at which the first STUN request was sent on the described\n  pair.\n\n  `firstRequestTimestamp = rtcIceCandidatePairStats.firstRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/firstRequestTimestamp`"}, last-request-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 192, :column 7, :end-line 192, :end-column 29, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastRequestTimestamp\n  the time at which the most recent STUN request was sent on the\n  candidate pair.\n\n  `lastRequestTimestamp = rtcIceCandidatePairStats.lastRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastRequestTimestamp`"}, :name rtc.RTCIceCandidatePairStats/last-request-timestamp, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 29, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastRequestTimestamp\n  the time at which the most recent STUN request was sent on the\n  candidate pair.\n\n  `lastRequestTimestamp = rtcIceCandidatePairStats.lastRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastRequestTimestamp`"}, set-bytes-sent! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 708, :column 7, :end-line 708, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesSent indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been sent so far on the connection\n  by the candidate pair.\n\n  `sent = rtcIceCandidatePairStats.bytesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesSent`"}, :name rtc.RTCIceCandidatePairStats/set-bytes-sent!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 708, :end-line 708, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesSent indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been sent so far on the connection\n  by the candidate pair.\n\n  `sent = rtcIceCandidatePairStats.bytesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesSent`"}, set-requests-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 442, :column 7, :end-line 442, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsReceived\n  indicates the total number of STUN connectivity check requests\n  have been received so far on the connection described by this\n  of candidates.\n\n  `requestsReceived = rtcIceCandidatePairStats.requestsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsReceived`"}, :name rtc.RTCIceCandidatePairStats/set-requests-received!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 442, :end-line 442, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsReceived\n  indicates the total number of STUN connectivity check requests\n  have been received so far on the connection described by this\n  of candidates.\n\n  `requestsReceived = rtcIceCandidatePairStats.requestsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsReceived`"}, transport-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 616, :column 7, :end-line 616, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The transportId property uniquely identifies the `rtc.RTCIceTransport`\n  was inspected to obtain the transport-related statistics contained\n  the `rtc.RTCIceCandidatePairStats` object.\n\n  `transportId = rtcIceCandidatePairStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/transportId`"}, :name rtc.RTCIceCandidatePairStats/transport-id, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 616, :end-line 616, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The transportId property uniquely identifies the `rtc.RTCIceTransport`\n  was inspected to obtain the transport-related statistics contained\n  the `rtc.RTCIceCandidatePairStats` object.\n\n  `transportId = rtcIceCandidatePairStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/transportId`"}, last-response-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 218, :column 7, :end-line 218, :end-column 30, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastResponseTimestamp\n  the time at which the last STUN response was received on the\n  candidate pair.\n\n  `lastResponseTimestamp = rtcIceCandidatePairStats.lastResponseTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastResponseTimestamp`"}, :name rtc.RTCIceCandidatePairStats/last-response-timestamp, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 30, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastResponseTimestamp\n  the time at which the last STUN response was received on the\n  candidate pair.\n\n  `lastResponseTimestamp = rtcIceCandidatePairStats.lastResponseTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastResponseTimestamp`"}, retransmissions-sent {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 776, :column 7, :end-line 776, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsSent\n  indicates the total number of STUN connectivity check request\n  that have been sent so far on the pair of candidates.\n\n  `retransmissionsSent = rtcIceCandidatePairStats.retransmissionsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsSent`"}, :name rtc.RTCIceCandidatePairStats/retransmissions-sent, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 776, :end-line 776, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's retransmissionsSent\n  indicates the total number of STUN connectivity check request\n  that have been sent so far on the pair of candidates.\n\n  `retransmissionsSent = rtcIceCandidatePairStats.retransmissionsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/retransmissionsSent`"}, set-total-round-trip-time! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 602, :column 7, :end-line 602, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's totalRoundTripTime\n  is the total time that has elapsed between sending STUN requests\n  receiving the responses, for all such requests that have been\n  so far on the pair of candidates described by this RTCIceCandidatePairStats\n\n  `totalRTT = rtcIceCandidatePairStats.totalRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/totalRoundTripTime`"}, :name rtc.RTCIceCandidatePairStats/set-total-round-trip-time!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 602, :end-line 602, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's totalRoundTripTime\n  is the total time that has elapsed between sending STUN requests\n  receiving the responses, for all such requests that have been\n  so far on the pair of candidates described by this RTCIceCandidatePairStats\n\n  `totalRTT = rtcIceCandidatePairStats.totalRoundTripTime;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/totalRoundTripTime`"}, state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 564, :column 7, :end-line 564, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The state property in an `rtc.RTCIceCandidatePairStats` object\n  the state of the check list of which the candidate pair is a\n\n  `state = rtcIceCandidatePairStats.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/state`"}, :name rtc.RTCIceCandidatePairStats/state, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 564, :end-line 564, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The state property in an `rtc.RTCIceCandidatePairStats` object\n  the state of the check list of which the candidate pair is a\n\n  `state = rtcIceCandidatePairStats.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/state`"}, writable {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 642, :column 7, :end-line 642, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property writable\n  whether or not the connection described by the candidate pair\n  writable.\n\n  `isWritable = rtcIceCandidatePairStats.writable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/writable`"}, :name rtc.RTCIceCandidatePairStats/writable, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 642, :end-line 642, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property writable\n  whether or not the connection described by the candidate pair\n  writable.\n\n  `isWritable = rtcIceCandidatePairStats.writable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/writable`"}, last-packet-received-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 140, :column 7, :end-line 140, :end-column 37, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketReceivedTimestamp\n  the time at which the connection described by the candidate pair\n  received a packet. STUN packets are not included.\n\n  `lastPacketReceivedTimestamp = rtcIceCandidatePairStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketReceivedTimestamp`"}, :name rtc.RTCIceCandidatePairStats/last-packet-received-timestamp, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 37, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 140, :end-line 140, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketReceivedTimestamp\n  the time at which the connection described by the candidate pair\n  received a packet. STUN packets are not included.\n\n  `lastPacketReceivedTimestamp = rtcIceCandidatePairStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketReceivedTimestamp`"}, set-last-packet-received-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 153, :column 7, :end-line 153, :end-column 42, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketReceivedTimestamp\n  the time at which the connection described by the candidate pair\n  received a packet. STUN packets are not included.\n\n  `lastPacketReceivedTimestamp = rtcIceCandidatePairStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketReceivedTimestamp`"}, :name rtc.RTCIceCandidatePairStats/set-last-packet-received-timestamp!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 42, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketReceivedTimestamp\n  the time at which the connection described by the candidate pair\n  received a packet. STUN packets are not included.\n\n  `lastPacketReceivedTimestamp = rtcIceCandidatePairStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketReceivedTimestamp`"}, last-packet-sent-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 166, :column 7, :end-line 166, :end-column 33, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketSentTimestamp\n  the time at which the connection described by the candidate pair\n  sent a packet, not including STUN packets.\n\n  `lastPacketSentTimestamp = rtcIceCandidatePairStats.lastPacketSentTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketSentTimestamp`"}, :name rtc.RTCIceCandidatePairStats/last-packet-sent-timestamp, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 33, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 166, :end-line 166, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastPacketSentTimestamp\n  the time at which the connection described by the candidate pair\n  sent a packet, not including STUN packets.\n\n  `lastPacketSentTimestamp = rtcIceCandidatePairStats.lastPacketSentTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastPacketSentTimestamp`"}, available-incoming-bitrate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 668, :column 7, :end-line 668, :end-column 33, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableIncomingBitrate\n  a value indicative of the available inbound capacity of the network\n  represented by the candidate pair.\n\n  `availableIncomingBitrate = rtcIceCandidatePairStats.availableIncomingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate`"}, :name rtc.RTCIceCandidatePairStats/available-incoming-bitrate, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 33, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 668, :end-line 668, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property availableIncomingBitrate\n  a value indicative of the available inbound capacity of the network\n  represented by the candidate pair.\n\n  `availableIncomingBitrate = rtcIceCandidatePairStats.availableIncomingBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/availableIncomingBitrate`"}, responses-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 484, :column 7, :end-line 484, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The responsesReceived property in the `rtc.RTCIceCandidatePairStats`\n  indicates the total number of STUN connectivity check responses\n  have been received on the connection described by this pair of\n\n  `responsesReceived = rtcIceCandidatePairStats.responsesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesReceived`"}, :name rtc.RTCIceCandidatePairStats/responses-received, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 484, :end-line 484, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The responsesReceived property in the `rtc.RTCIceCandidatePairStats`\n  indicates the total number of STUN connectivity check responses\n  have been received on the connection described by this pair of\n\n  `responsesReceived = rtcIceCandidatePairStats.responsesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesReceived`"}, circuit-breaker-trigger-count {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 62, :column 7, :end-line 62, :end-column 36, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property circuitBreakerTriggerCount\n  the number of times the circuit-breaker has been triggered to\n  a connection timeout or other unexpected connection abort on\n  specific connection configuration.\n\n  `cbtCount = rtcIceCandidatePairStats.circuitBreakerTriggerCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/circuitBreakerTriggerCount`"}, :name rtc.RTCIceCandidatePairStats/circuit-breaker-trigger-count, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 36, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property circuitBreakerTriggerCount\n  the number of times the circuit-breaker has been triggered to\n  a connection timeout or other unexpected connection abort on\n  specific connection configuration.\n\n  `cbtCount = rtcIceCandidatePairStats.circuitBreakerTriggerCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/circuitBreakerTriggerCount`"}, bytes-sent {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 694, :column 7, :end-line 694, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesSent indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been sent so far on the connection\n  by the candidate pair.\n\n  `sent = rtcIceCandidatePairStats.bytesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesSent`"}, :name rtc.RTCIceCandidatePairStats/bytes-sent, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 694, :end-line 694, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesSent indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been sent so far on the connection\n  by the candidate pair.\n\n  `sent = rtcIceCandidatePairStats.bytesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesSent`"}, packets-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 298, :column 7, :end-line 298, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsReceived\n  indicates the total number of packets of any kind that have been\n  on the connection described by the pair of candidates.\n\n  `packetsReceived = rtcIceCandidatePairStats.packetsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsReceived`"}, :name rtc.RTCIceCandidatePairStats/packets-received, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's packetsReceived\n  indicates the total number of packets of any kind that have been\n  on the connection described by the pair of candidates.\n\n  `packetsReceived = rtcIceCandidatePairStats.packetsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/packetsReceived`"}, set-writable! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 655, :column 7, :end-line 655, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property writable\n  whether or not the connection described by the candidate pair\n  writable.\n\n  `isWritable = rtcIceCandidatePairStats.writable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/writable`"}, :name rtc.RTCIceCandidatePairStats/set-writable!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 655, :end-line 655, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property writable\n  whether or not the connection described by the candidate pair\n  writable.\n\n  `isWritable = rtcIceCandidatePairStats.writable;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/writable`"}, priority {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 350, :column 7, :end-line 350, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property priority\n  the priority of the candidate pair as an integer value.\n\n  `pairPriority = rtcIceCandidatePairStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/priority`"}, :name rtc.RTCIceCandidatePairStats/priority, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property priority\n  the priority of the candidate pair as an integer value.\n\n  `pairPriority = rtcIceCandidatePairStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/priority`"}, first-request-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 114, :column 7, :end-line 114, :end-column 30, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property firstRequestTimestamp\n  the time at which the first STUN request was sent on the described\n  pair.\n\n  `firstRequestTimestamp = rtcIceCandidatePairStats.firstRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/firstRequestTimestamp`"}, :name rtc.RTCIceCandidatePairStats/first-request-timestamp, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 30, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property firstRequestTimestamp\n  the time at which the first STUN request was sent on the described\n  pair.\n\n  `firstRequestTimestamp = rtcIceCandidatePairStats.firstRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/firstRequestTimestamp`"}, set-last-request-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 205, :column 7, :end-line 205, :end-column 34, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastRequestTimestamp\n  the time at which the most recent STUN request was sent on the\n  candidate pair.\n\n  `lastRequestTimestamp = rtcIceCandidatePairStats.lastRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastRequestTimestamp`"}, :name rtc.RTCIceCandidatePairStats/set-last-request-timestamp!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 34, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property lastRequestTimestamp\n  the time at which the most recent STUN request was sent on the\n  candidate pair.\n\n  `lastRequestTimestamp = rtcIceCandidatePairStats.lastRequestTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/lastRequestTimestamp`"}, set-local-candidate-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 258, :column 7, :end-line 258, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property localCandidateId\n  a string that uniquely identifies the local ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `localCandidateId = rtcIceCandidatePairStats.localCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/localCandidateId`"}, :name rtc.RTCIceCandidatePairStats/set-local-candidate-id!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property localCandidateId\n  a string that uniquely identifies the local ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `localCandidateId = rtcIceCandidatePairStats.localCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/localCandidateId`"}, local-candidate-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 244, :column 7, :end-line 244, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property localCandidateId\n  a string that uniquely identifies the local ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `localCandidateId = rtcIceCandidatePairStats.localCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/localCandidateId`"}, :name rtc.RTCIceCandidatePairStats/local-candidate-id, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property localCandidateId\n  a string that uniquely identifies the local ICE candidate which\n  analyzed to generate the `rtc.RTCIceCandidateStats` used to compute\n  statistics for this pair of candidates.\n\n  `localCandidateId = rtcIceCandidatePairStats.localCandidateId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/localCandidateId`"}, set-priority! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 362, :column 7, :end-line 362, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property priority\n  the priority of the candidate pair as an integer value.\n\n  `pairPriority = rtcIceCandidatePairStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/priority`"}, :name rtc.RTCIceCandidatePairStats/set-priority!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The obsolete `rtc.RTCIceCandidatePairStats` property priority\n  the priority of the candidate pair as an integer value.\n\n  `pairPriority = rtcIceCandidatePairStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/priority`"}, set-transport-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 629, :column 7, :end-line 629, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The transportId property uniquely identifies the `rtc.RTCIceTransport`\n  was inspected to obtain the transport-related statistics contained\n  the `rtc.RTCIceCandidatePairStats` object.\n\n  `transportId = rtcIceCandidatePairStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/transportId`"}, :name rtc.RTCIceCandidatePairStats/set-transport-id!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 629, :end-line 629, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The transportId property uniquely identifies the `rtc.RTCIceTransport`\n  was inspected to obtain the transport-related statistics contained\n  the `rtc.RTCIceCandidatePairStats` object.\n\n  `transportId = rtcIceCandidatePairStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/transportId`"}, responses-sent {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 510, :column 7, :end-line 510, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's responsesSent\n  indicates the total number of STUN connectivity check responses\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `responsesSent = rtcIceCandidatePairStats.responsesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesSent`"}, :name rtc.RTCIceCandidatePairStats/responses-sent, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 510, :end-line 510, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's responsesSent\n  indicates the total number of STUN connectivity check responses\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `responsesSent = rtcIceCandidatePairStats.responsesSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesSent`"}, set-circuit-breaker-trigger-count! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 76, :column 7, :end-line 76, :end-column 41, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property circuitBreakerTriggerCount\n  the number of times the circuit-breaker has been triggered to\n  a connection timeout or other unexpected connection abort on\n  specific connection configuration.\n\n  `cbtCount = rtcIceCandidatePairStats.circuitBreakerTriggerCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/circuitBreakerTriggerCount`"}, :name rtc.RTCIceCandidatePairStats/set-circuit-breaker-trigger-count!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 41, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property circuitBreakerTriggerCount\n  the number of times the circuit-breaker has been triggered to\n  a connection timeout or other unexpected connection abort on\n  specific connection configuration.\n\n  `cbtCount = rtcIceCandidatePairStats.circuitBreakerTriggerCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/circuitBreakerTriggerCount`"}, set-requests-sent! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 470, :column 7, :end-line 470, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsSent\n  indicates the total number of STUN connectivity check requests\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `requestsSent = rtcIceCandidatePairStats.requestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsSent`"}, :name rtc.RTCIceCandidatePairStats/set-requests-sent!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 470, :end-line 470, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` dictionary's requestsSent\n  indicates the total number of STUN connectivity check requests\n  have been sent so far on the connection described by this pair\n  candidates.\n\n  `requestsSent = rtcIceCandidatePairStats.requestsSent;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/requestsSent`"}, set-responses-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 497, :column 7, :end-line 497, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The responsesReceived property in the `rtc.RTCIceCandidatePairStats`\n  indicates the total number of STUN connectivity check responses\n  have been received on the connection described by this pair of\n\n  `responsesReceived = rtcIceCandidatePairStats.responsesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesReceived`"}, :name rtc.RTCIceCandidatePairStats/set-responses-received!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 497, :end-line 497, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The responsesReceived property in the `rtc.RTCIceCandidatePairStats`\n  indicates the total number of STUN connectivity check responses\n  have been received on the connection described by this pair of\n\n  `responsesReceived = rtcIceCandidatePairStats.responsesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/responsesReceived`"}, set-bytes-receieved! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidatePairStats.cljs", :line 48, :column 7, :end-line 48, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesReceived indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been received to date on the connection\n  by the candidate pair.\n\n  `received = rtcIceCandidatePairStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesReceived`"}, :name rtc.RTCIceCandidatePairStats/set-bytes-receieved!, :variadic false, :file "src/rtc/RTCIceCandidatePairStats.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidatePairStats` property bytesReceived indicates\n  total number of payload bytes—that is, bytes which aren't overhead\n  as headers or padding—that hve been received to date on the connection\n  by the candidate pair.\n\n  `received = rtcIceCandidatePairStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidatePairStats/bytesReceived`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WebRTC RTCIceCandidatePairStats dictionary reports statistics\n  provide insight into the quality and performance of an `rtc.RTCPeerConnection`\n  connected and configured as described by the specified pair of\n  candidates."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCRtpEncodingParameters, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {max-bitrate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpEncodingParameters.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's maxBitrate property\n  the maximum number of bits per second to allow a track encoded\n  this encoding to use.\n\n  `rtpEncodingParameters.maxBitrate = maxBitsPerSecond;\n\n  rtpEncodingParameters = {\n  maxBitrate: maxBitsPerSecond\n  };\n\n  maxBitsPerSecond = rtpEncodingParameters.maxBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/maxBitrate`"}, :name rtc.RTCRtpEncodingParameters/max-bitrate, :variadic false, :file "src/rtc/RTCRtpEncodingParameters.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's maxBitrate property\n  the maximum number of bits per second to allow a track encoded\n  this encoding to use.\n\n  `rtpEncodingParameters.maxBitrate = maxBitsPerSecond;\n\n  rtpEncodingParameters = {\n  maxBitrate: maxBitsPerSecond\n  };\n\n  maxBitsPerSecond = rtpEncodingParameters.maxBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/maxBitrate`"}, set-max-bitrate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpEncodingParameters.cljs", :line 25, :column 7, :end-line 25, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's maxBitrate property\n  the maximum number of bits per second to allow a track encoded\n  this encoding to use.\n\n  `rtpEncodingParameters.maxBitrate = maxBitsPerSecond;\n\n  rtpEncodingParameters = {\n  maxBitrate: maxBitsPerSecond\n  };\n\n  maxBitsPerSecond = rtpEncodingParameters.maxBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/maxBitrate`"}, :name rtc.RTCRtpEncodingParameters/set-max-bitrate!, :variadic false, :file "src/rtc/RTCRtpEncodingParameters.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's maxBitrate property\n  the maximum number of bits per second to allow a track encoded\n  this encoding to use.\n\n  `rtpEncodingParameters.maxBitrate = maxBitsPerSecond;\n\n  rtpEncodingParameters = {\n  maxBitrate: maxBitsPerSecond\n  };\n\n  maxBitsPerSecond = rtpEncodingParameters.maxBitrate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/maxBitrate`"}, scale-resolution-down-by {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpEncodingParameters.cljs", :line 44, :column 7, :end-line 44, :end-column 31, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's scaleResolutionDownBy\n  can be used to specify a factor by which to reduce the size of\n  video track during encoding.\n\n  `rtpEncodingParameters.scaleResolutionDownBy = scalingFactor;\n\n  rtpEncodingParameters = {\n  scaleResolutionDownBy: scalingFactor\n  };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/scaleResolutionDownBy`"}, :name rtc.RTCRtpEncodingParameters/scale-resolution-down-by, :variadic false, :file "src/rtc/RTCRtpEncodingParameters.cljs", :end-column 31, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's scaleResolutionDownBy\n  can be used to specify a factor by which to reduce the size of\n  video track during encoding.\n\n  `rtpEncodingParameters.scaleResolutionDownBy = scalingFactor;\n\n  rtpEncodingParameters = {\n  scaleResolutionDownBy: scalingFactor\n  };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/scaleResolutionDownBy`"}, set-scale-resolution-down-by! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpEncodingParameters.cljs", :line 61, :column 7, :end-line 61, :end-column 36, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's scaleResolutionDownBy\n  can be used to specify a factor by which to reduce the size of\n  video track during encoding.\n\n  `rtpEncodingParameters.scaleResolutionDownBy = scalingFactor;\n\n  rtpEncodingParameters = {\n  scaleResolutionDownBy: scalingFactor\n  };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/scaleResolutionDownBy`"}, :name rtc.RTCRtpEncodingParameters/set-scale-resolution-down-by!, :variadic false, :file "src/rtc/RTCRtpEncodingParameters.cljs", :end-column 36, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCRtpEncodingParameters` dictionary's scaleResolutionDownBy\n  can be used to specify a factor by which to reduce the size of\n  video track during encoding.\n\n  `rtpEncodingParameters.scaleResolutionDownBy = scalingFactor;\n\n  rtpEncodingParameters = {\n  scaleResolutionDownBy: scalingFactor\n  };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/scaleResolutionDownBy`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "An instance of the WebRTC API's RTCRtpEncodingParameters dictionary\n  a single configuration of a codec for an `rtc.RTCRtpSender`."}
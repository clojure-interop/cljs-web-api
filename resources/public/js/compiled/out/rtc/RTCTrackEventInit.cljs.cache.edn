{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCTrackEventInit, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {receiver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's receiver property specifies\n  `rtc.RTCRtpReceiver` associated with the event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var rtpReceiver = trackEventInit.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/receiver`"}, :name rtc.RTCTrackEventInit/receiver, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's receiver property specifies\n  `rtc.RTCRtpReceiver` associated with the event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var rtpReceiver = trackEventInit.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/receiver`"}, set-receiver! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 26, :column 7, :end-line 26, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's receiver property specifies\n  `rtc.RTCRtpReceiver` associated with the event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var rtpReceiver = trackEventInit.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/receiver`"}, :name rtc.RTCTrackEventInit/set-receiver!, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's receiver property specifies\n  `rtc.RTCRtpReceiver` associated with the event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var rtpReceiver = trackEventInit.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/receiver`"}, streams {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 45, :column 7, :end-line 45, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's optional streams property\n  an array containing a `media.MediaStream` object for each of\n  streams associated with the event's track.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var streamList = trackEventInit.streams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/streams`"}, :name rtc.RTCTrackEventInit/streams, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's optional streams property\n  an array containing a `media.MediaStream` object for each of\n  streams associated with the event's track.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var streamList = trackEventInit.streams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/streams`"}, set-streams! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 65, :column 7, :end-line 65, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's optional streams property\n  an array containing a `media.MediaStream` object for each of\n  streams associated with the event's track.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var streamList = trackEventInit.streams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/streams`"}, :name rtc.RTCTrackEventInit/set-streams!, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's optional streams property\n  an array containing a `media.MediaStream` object for each of\n  streams associated with the event's track.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var streamList = trackEventInit.streams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/streams`"}, track {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 85, :column 7, :end-line 85, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's track property specifies\n  `media.MediaStreamTrack` associated with the track event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var track = trackEventInit.track;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/track`"}, :name rtc.RTCTrackEventInit/track, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's track property specifies\n  `media.MediaStreamTrack` associated with the track event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var track = trackEventInit.track;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/track`"}, set-track! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 104, :column 7, :end-line 104, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's track property specifies\n  `media.MediaStreamTrack` associated with the track event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var track = trackEventInit.track;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/track`"}, :name rtc.RTCTrackEventInit/set-track!, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCTrackEventInit` dictionary's track property specifies\n  `media.MediaStreamTrack` associated with the track event.\n\n  `var trackEventInit = {\n  receiver: rtpReceiver,\n  track: mediaStreamTrack,\n  streams: [videoStream],\n  transceiver: rtpTransceiver\n  };\n\n  var track = trackEventInit.track;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEventInit/track`"}, transceiver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 123, :column 7, :end-line 123, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}, :name rtc.RTCTrackEventInit/transceiver, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}, set-transceiver! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEventInit.cljs", :line 135, :column 7, :end-line 135, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}, :name rtc.RTCTrackEventInit/set-transceiver!, :variadic false, :file "src/rtc/RTCTrackEventInit.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WebRTC API's RTCTrackEventInit dictionary is used to provide\n  describing an `rtc.RTCTrackEvent` when instantiating a new track\n  using `web.new RTCTrackEvent()`."}
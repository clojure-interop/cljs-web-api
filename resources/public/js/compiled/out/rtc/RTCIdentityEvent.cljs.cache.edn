{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCIdentityEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {assertion {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIdentityEvent.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The read-only property RTCIdentityEvent.assertion returns the\n  containing a blob being the coded assertion associated with the\n\n  `var blob = event.assertion;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIdentityEvent/assertion`"}, :name rtc.RTCIdentityEvent/assertion, :variadic false, :file "src/rtc/RTCIdentityEvent.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only property RTCIdentityEvent.assertion returns the\n  containing a blob being the coded assertion associated with the\n\n  `var blob = event.assertion;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIdentityEvent/assertion`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The RTCIdentityEvent interface represents an identity assertion\n  by an identity provider (idP). This is usually for an `rtc.RTCPeerConnection`.\n  only event sent with this type is identityresult.."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCIceCandidateStats, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-deleted! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 46, :column 7, :end-line 46, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's deleted property\n  whether or not the candidate has been deleted or released.\n\n  `isDeleted = rtcIceCandidateStats.deleted;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/deleted`"}, :name rtc.RTCIceCandidateStats/set-deleted!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's deleted property\n  whether or not the candidate has been deleted or released.\n\n  `isDeleted = rtcIceCandidateStats.deleted;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/deleted`"}, moz-local-transport {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 58, :column 7, :end-line 58, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The non-standard Mozilla extension to the `rtc.RTCIceCandidateStats`\n  mozLocalTransport, has been supplanted by the standard `web.protocol`\n  `web.relayProtocol` properties.\n\n  `Instead of using mozLocalTransport, you should use code like this:\n\n\n\n  localTransport = rtcIceCandidateStats.relayProtocol || rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/mozLocalTransport`"}, :name rtc.RTCIceCandidateStats/moz-local-transport, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The non-standard Mozilla extension to the `rtc.RTCIceCandidateStats`\n  mozLocalTransport, has been supplanted by the standard `web.protocol`\n  `web.relayProtocol` properties.\n\n  `Instead of using mozLocalTransport, you should use code like this:\n\n\n\n  localTransport = rtcIceCandidateStats.relayProtocol || rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/mozLocalTransport`"}, deleted {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 34, :column 7, :end-line 34, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's deleted property\n  whether or not the candidate has been deleted or released.\n\n  `isDeleted = rtcIceCandidateStats.deleted;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/deleted`"}, :name rtc.RTCIceCandidateStats/deleted, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's deleted property\n  whether or not the candidate has been deleted or released.\n\n  `isDeleted = rtcIceCandidateStats.deleted;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/deleted`"}, address {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The address property of the `rtc.RTCIceCandidateStats` dictionary\n  the address of the ICE candidate. While it's preferred that the\n  be specified as an IPv4 or IPv6 numeric address, a fully-qualified\n  name can be used as well.\n\n  `candidateAddress = rtcIceCandidateStats.address;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/address`"}, :name rtc.RTCIceCandidateStats/address, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The address property of the `rtc.RTCIceCandidateStats` dictionary\n  the address of the ICE candidate. While it's preferred that the\n  be specified as an IPv4 or IPv6 numeric address, a fully-qualified\n  name can be used as well.\n\n  `candidateAddress = rtcIceCandidateStats.address;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/address`"}, relay-protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 168, :column 7, :end-line 168, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's relayProtocol property\n  the protocol being used by a local ICE candidate to communicate\n  the TURN server.\n\n  `relayProtocol = rtcIceCandidateStats.relayProtocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/relayProtocol`"}, :name rtc.RTCIceCandidateStats/relay-protocol, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's relayProtocol property\n  the protocol being used by a local ICE candidate to communicate\n  the TURN server.\n\n  `relayProtocol = rtcIceCandidateStats.relayProtocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/relayProtocol`"}, candidate-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 248, :column 7, :end-line 248, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` interface's candidateType property\n  a string which indicates the type of ICE candidate the object\n\n  `candidateType = rtcIceCandidateStats.candidateType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/candidateType`"}, :name rtc.RTCIceCandidateStats/candidate-type, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` interface's candidateType property\n  a string which indicates the type of ICE candidate the object\n\n  `candidateType = rtcIceCandidateStats.candidateType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/candidateType`"}, set-network-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 105, :column 7, :end-line 105, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's networkType property\n  the type of network used by a local candidate to communicate\n  a remote peer.\n\n  `networkType = rtcIceCandidateStats.networkType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/networkType`"}, :name rtc.RTCIceCandidateStats/set-network-type!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's networkType property\n  the type of network used by a local candidate to communicate\n  a remote peer.\n\n  `networkType = rtcIceCandidateStats.networkType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/networkType`"}, protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 142, :column 7, :end-line 142, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's protocol property\n  the protocol the specified candidate would use for communication\n  the remote peer.\n\n  `protocol = rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/protocol`"}, :name rtc.RTCIceCandidateStats/protocol, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's protocol property\n  the protocol the specified candidate would use for communication\n  the remote peer.\n\n  `protocol = rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/protocol`"}, set-candidate-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 260, :column 7, :end-line 260, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` interface's candidateType property\n  a string which indicates the type of ICE candidate the object\n\n  `candidateType = rtcIceCandidateStats.candidateType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/candidateType`"}, :name rtc.RTCIceCandidateStats/set-candidate-type!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` interface's candidateType property\n  a string which indicates the type of ICE candidate the object\n\n  `candidateType = rtcIceCandidateStats.candidateType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/candidateType`"}, transport-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 194, :column 7, :end-line 194, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's transportId property\n  a string that uniquely identifies the transport that produced\n  `rtc.RTCTransportStats` from which information about this candidate\n  taken.\n\n  `transportID = rtcIceCandidateStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/transportId`"}, :name rtc.RTCIceCandidateStats/transport-id, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's transportId property\n  a string that uniquely identifies the transport that produced\n  `rtc.RTCTransportStats` from which information about this candidate\n  taken.\n\n  `transportID = rtcIceCandidateStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/transportId`"}, network-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 92, :column 7, :end-line 92, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's networkType property\n  the type of network used by a local candidate to communicate\n  a remote peer.\n\n  `networkType = rtcIceCandidateStats.networkType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/networkType`"}, :name rtc.RTCIceCandidateStats/network-type, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's networkType property\n  the type of network used by a local candidate to communicate\n  a remote peer.\n\n  `networkType = rtcIceCandidateStats.networkType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/networkType`"}, set-address! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The address property of the `rtc.RTCIceCandidateStats` dictionary\n  the address of the ICE candidate. While it's preferred that the\n  be specified as an IPv4 or IPv6 numeric address, a fully-qualified\n  name can be used as well.\n\n  `candidateAddress = rtcIceCandidateStats.address;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/address`"}, :name rtc.RTCIceCandidateStats/set-address!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The address property of the `rtc.RTCIceCandidateStats` dictionary\n  the address of the ICE candidate. While it's preferred that the\n  be specified as an IPv4 or IPv6 numeric address, a fully-qualified\n  name can be used as well.\n\n  `candidateAddress = rtcIceCandidateStats.address;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/address`"}, port {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 118, :column 7, :end-line 118, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's port property specifies\n  network port used by the candidate.\n\n  `candidatePort = rtcIceCandidateStats.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/port`"}, :name rtc.RTCIceCandidateStats/port, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's port property specifies\n  network port used by the candidate.\n\n  `candidatePort = rtcIceCandidateStats.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/port`"}, set-relay-protocol! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 181, :column 7, :end-line 181, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's relayProtocol property\n  the protocol being used by a local ICE candidate to communicate\n  the TURN server.\n\n  `relayProtocol = rtcIceCandidateStats.relayProtocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/relayProtocol`"}, :name rtc.RTCIceCandidateStats/set-relay-protocol!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's relayProtocol property\n  the protocol being used by a local ICE candidate to communicate\n  the TURN server.\n\n  `relayProtocol = rtcIceCandidateStats.relayProtocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/relayProtocol`"}, set-moz-local-transport! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 75, :column 7, :end-line 75, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The non-standard Mozilla extension to the `rtc.RTCIceCandidateStats`\n  mozLocalTransport, has been supplanted by the standard `web.protocol`\n  `web.relayProtocol` properties.\n\n  `Instead of using mozLocalTransport, you should use code like this:\n\n\n\n  localTransport = rtcIceCandidateStats.relayProtocol || rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/mozLocalTransport`"}, :name rtc.RTCIceCandidateStats/set-moz-local-transport!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The non-standard Mozilla extension to the `rtc.RTCIceCandidateStats`\n  mozLocalTransport, has been supplanted by the standard `web.protocol`\n  `web.relayProtocol` properties.\n\n  `Instead of using mozLocalTransport, you should use code like this:\n\n\n\n  localTransport = rtcIceCandidateStats.relayProtocol || rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/mozLocalTransport`"}, priority {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 272, :column 7, :end-line 272, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's priority property\n  a positive integer value indicating the priority (or desirability)\n  the described candidate.\n\n  `priority = rtcIceCandidateStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/priority`"}, :name rtc.RTCIceCandidateStats/priority, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's priority property\n  a positive integer value indicating the priority (or desirability)\n  the described candidate.\n\n  `priority = rtcIceCandidateStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/priority`"}, set-priority! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 285, :column 7, :end-line 285, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's priority property\n  a positive integer value indicating the priority (or desirability)\n  the described candidate.\n\n  `priority = rtcIceCandidateStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/priority`"}, :name rtc.RTCIceCandidateStats/set-priority!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 285, :end-line 285, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's priority property\n  a positive integer value indicating the priority (or desirability)\n  the described candidate.\n\n  `priority = rtcIceCandidateStats.priority;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/priority`"}, set-transport-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 208, :column 7, :end-line 208, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's transportId property\n  a string that uniquely identifies the transport that produced\n  `rtc.RTCTransportStats` from which information about this candidate\n  taken.\n\n  `transportID = rtcIceCandidateStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/transportId`"}, :name rtc.RTCIceCandidateStats/set-transport-id!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's transportId property\n  a string that uniquely identifies the transport that produced\n  `rtc.RTCTransportStats` from which information about this candidate\n  taken.\n\n  `transportID = rtcIceCandidateStats.transportId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/transportId`"}, url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 222, :column 7, :end-line 222, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's url property specifies\n  URL of the ICE server from which the described candidate was\n  This property is only available for local candidates.\n\n  `url = rtcIceCandidateStats.url;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/url`"}, :name rtc.RTCIceCandidateStats/url, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's url property specifies\n  URL of the ICE server from which the described candidate was\n  This property is only available for local candidates.\n\n  `url = rtcIceCandidateStats.url;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/url`"}, set-protocol! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 155, :column 7, :end-line 155, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's protocol property\n  the protocol the specified candidate would use for communication\n  the remote peer.\n\n  `protocol = rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/protocol`"}, :name rtc.RTCIceCandidateStats/set-protocol!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's protocol property\n  the protocol the specified candidate would use for communication\n  the remote peer.\n\n  `protocol = rtcIceCandidateStats.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/protocol`"}, set-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 235, :column 7, :end-line 235, :end-column 15, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's url property specifies\n  URL of the ICE server from which the described candidate was\n  This property is only available for local candidates.\n\n  `url = rtcIceCandidateStats.url;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/url`"}, :name rtc.RTCIceCandidateStats/set-url!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 15, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's url property specifies\n  URL of the ICE server from which the described candidate was\n  This property is only available for local candidates.\n\n  `url = rtcIceCandidateStats.url;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/url`"}, set-port! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCIceCandidateStats.cljs", :line 130, :column 7, :end-line 130, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's port property specifies\n  network port used by the candidate.\n\n  `candidatePort = rtcIceCandidateStats.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/port`"}, :name rtc.RTCIceCandidateStats/set-port!, :variadic false, :file "src/rtc/RTCIceCandidateStats.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCIceCandidateStats` dictionary's port property specifies\n  network port used by the candidate.\n\n  `candidatePort = rtcIceCandidateStats.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats/port`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WebRTC API's RTCIceCandidateStats dictionary provides statistics\n  to an `rtc.RTCIceCandidate`."}
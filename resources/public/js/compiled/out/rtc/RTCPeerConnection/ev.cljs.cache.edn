{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCPeerConnection.ev, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {addstream {:name rtc.RTCPeerConnection.ev/addstream, :file "src/rtc/RTCPeerConnection/ev.cljs", :line 5, :column 1, :end-line 5, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnection/ev.cljs", :line 5, :column 6, :end-line 5, :end-column 15}, :doc "Event.\n\n  The obsolete addstream event is sent to an `rtc.RTCPeerConnection`\n  new media, in the form of a `media.MediaStream` object, has been\n  to it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addstream_event`", :tag string}, identityresult {:name rtc.RTCPeerConnection.ev/identityresult, :file "src/rtc/RTCPeerConnection/ev.cljs", :line 16, :column 1, :end-line 16, :end-column 20, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnection/ev.cljs", :line 16, :column 6, :end-line 16, :end-column 20}, :doc "Event.\n\n  An identityresult event is sent to an `rtc.RTCPeerConnection`\n  `web.onidentityresult` event handler to inform it that an assertion\n  been generated by an associated identity provider (IdP) during\n  process of creating an SDP offer or answer.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/identityresult_event`", :tag string}, negotiationneeded {:name rtc.RTCPeerConnection.ev/negotiationneeded, :file "src/rtc/RTCPeerConnection/ev.cljs", :line 28, :column 1, :end-line 28, :end-column 23, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnection/ev.cljs", :line 28, :column 6, :end-line 28, :end-column 23}, :doc "Event.\n\n  A negotiationneeded event is sent to the `rtc.RTCPeerConnection`\n  negotiation of the connection through the signaling channel is\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event`", :tag string}, removestream {:name rtc.RTCPeerConnection.ev/removestream, :file "src/rtc/RTCPeerConnection/ev.cljs", :line 38, :column 1, :end-line 38, :end-column 18, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnection/ev.cljs", :line 38, :column 6, :end-line 38, :end-column 18}, :doc "Event.\n\n  The obsolete removestream event was sent to an `rtc.RTCPeerConnection`\n  inform it that a `media.MediaStream` had been removed from the\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/removestream_event`", :tag string}, signalingstatechange {:name rtc.RTCPeerConnection.ev/signalingstatechange, :file "src/rtc/RTCPeerConnection/ev.cljs", :line 48, :column 1, :end-line 48, :end-column 26, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnection/ev.cljs", :line 48, :column 6, :end-line 48, :end-column 26}, :doc "Event.\n\n  An signalingstatechange event is sent to an `rtc.RTCPeerConnection`\n  notify it that its signaling state, as indicated by the `web.signalingState`\n  has changed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event`", :tag string}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "RTCPeerConnection Events."}
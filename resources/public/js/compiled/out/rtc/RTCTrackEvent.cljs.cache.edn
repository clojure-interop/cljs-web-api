{:rename-macros {}, :renames {}, :externs {RTCTrackEvent {}}, :use-macros {}, :excludes #{}, :name rtc.RTCTrackEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name rtc.RTCTrackEvent/constructor, :file "src/rtc/RTCTrackEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The RTCTrackEvent() constructor creates and returns a new `rtc.RTCTrackEvent` object, configured to describe the track which has been added to the `rtc.RTCPeerConnection`.\n\n  eventInfo\n  An object based on the `rtc.RTCTrackEventInit` dictionary, providing information about the track which has been added to the `rtc.RTCPeerConnection`. This object has the following properties:\n  `web.receiver`\n  The `rtc.RTCRtpReceiver` which is being used to receive the track's media.\n  `web.streams` Optional\n  An array of `media.MediaStream` objects representing each of the streams that comprise the event's corresponding track.\n  `web.track`\n  The `media.MediaStreamTrack` the event is associated with.\n  `web.transceiver`\n  The `rtc.RTCRtpTransceiver` associated with the event.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/RTCTrackEvent`", :tag js}, receiver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEvent.cljs", :line 26, :column 7, :end-line 26, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The read-only receiver property of the `rtc.RTCTrackEvent` interface\n  the `rtc.RTCRtpReceiver` which is used to receive data containing\n  for the `web.track` to which the event refers.\n\n  `var rtpReceiver = trackEvent.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/receiver`"}, :name rtc.RTCTrackEvent/receiver, :variadic false, :file "src/rtc/RTCTrackEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only receiver property of the `rtc.RTCTrackEvent` interface\n  the `rtc.RTCRtpReceiver` which is used to receive data containing\n  for the `web.track` to which the event refers.\n\n  `var rtpReceiver = trackEvent.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/receiver`"}, streams {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEvent.cljs", :line 39, :column 7, :end-line 39, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only streams\n  specifies an array of `media.MediaStream` objects, one for each\n  the streams that comprise the track being added to the `rtc.RTCPeerConnection`.\n\n  `var streams = trackEvent.streams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/streams`"}, :name rtc.RTCTrackEvent/streams, :variadic false, :file "src/rtc/RTCTrackEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only streams\n  specifies an array of `media.MediaStream` objects, one for each\n  the streams that comprise the track being added to the `rtc.RTCPeerConnection`.\n\n  `var streams = trackEvent.streams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/streams`"}, track {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEvent.cljs", :line 52, :column 7, :end-line 52, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only track\n  specifies the `media.MediaStreamTrack` that has been added to\n  `rtc.RTCPeerConnection`.\n\n  `var track = trackEvent.track;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/track`"}, :name rtc.RTCTrackEvent/track, :variadic false, :file "src/rtc/RTCTrackEvent.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only track\n  specifies the `media.MediaStreamTrack` that has been added to\n  `rtc.RTCPeerConnection`.\n\n  `var track = trackEvent.track;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/track`"}, transceiver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEvent.cljs", :line 65, :column 7, :end-line 65, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}, :name rtc.RTCTrackEvent/transceiver, :variadic false, :file "src/rtc/RTCTrackEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}, set-transceiver! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCTrackEvent.cljs", :line 77, :column 7, :end-line 77, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}, :name rtc.RTCTrackEvent/set-transceiver!, :variadic false, :file "src/rtc/RTCTrackEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The WebRTC API interface `rtc.RTCTrackEvent`'s read-only transceiver\n  indicates the `rtc.RTCRtpTransceiver` affiliated with the event's\n\n  `var rtpTransceiver = trackEvent.transceiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WebRTC API interface RTCTrackEvent represents the track event,\n  is sent when a new `media.MediaStreamTrack` is added to an `rtc.RTCRtpReceiver`\n  is part of the `rtc.RTCPeerConnection`."}
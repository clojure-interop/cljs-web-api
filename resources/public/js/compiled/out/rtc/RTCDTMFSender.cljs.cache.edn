{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCDTMFSender, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {insert-dtmf {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFSender.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([this & args])), :doc "Method.\n\n  The insertDTMF() method on the `rtc.RTCDTMFSender` interface\n  sending tones to the remote peer over the `rtc.RTCPeerConnection`.\n  of the tones is performed asynchronously, with tonechange events\n  to the RTCDTMFSender every time a tone starts or ends.\n\n  `RTCDTMFSender.insertDTMF(tones[, duration[, interToneGap]]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/insertDTMF`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name rtc.RTCDTMFSender/insert-dtmf, :variadic true, :file "src/rtc/RTCDTMFSender.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The insertDTMF() method on the `rtc.RTCDTMFSender` interface\n  sending tones to the remote peer over the `rtc.RTCPeerConnection`.\n  of the tones is performed asynchronously, with tonechange events\n  to the RTCDTMFSender every time a tone starts or ends.\n\n  `RTCDTMFSender.insertDTMF(tones[, duration[, interToneGap]]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/insertDTMF`"}, ontonechange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFSender.cljs", :line 20, :column 7, :end-line 20, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The ontonechange property of the `rtc.RTCDTMFSender` interface\n  used to set the event handler for the tonechange event, which\n  sent to the RTCDTMFSender each time a tone begins or ends. The\n  handler receives as input a single parameter of type `rtc.RTCDTMFToneChangeEvent`,\n  describes the change.\n\n  `RTCDTMFSender.ontonechange = toneChangeHandlerFunction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/ontonechange`"}, :name rtc.RTCDTMFSender/ontonechange, :variadic false, :file "src/rtc/RTCDTMFSender.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ontonechange property of the `rtc.RTCDTMFSender` interface\n  used to set the event handler for the tonechange event, which\n  sent to the RTCDTMFSender each time a tone begins or ends. The\n  handler receives as input a single parameter of type `rtc.RTCDTMFToneChangeEvent`,\n  describes the change.\n\n  `RTCDTMFSender.ontonechange = toneChangeHandlerFunction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/ontonechange`"}, set-ontonechange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFSender.cljs", :line 35, :column 7, :end-line 35, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The ontonechange property of the `rtc.RTCDTMFSender` interface\n  used to set the event handler for the tonechange event, which\n  sent to the RTCDTMFSender each time a tone begins or ends. The\n  handler receives as input a single parameter of type `rtc.RTCDTMFToneChangeEvent`,\n  describes the change.\n\n  `RTCDTMFSender.ontonechange = toneChangeHandlerFunction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/ontonechange`"}, :name rtc.RTCDTMFSender/set-ontonechange!, :variadic false, :file "src/rtc/RTCDTMFSender.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ontonechange property of the `rtc.RTCDTMFSender` interface\n  used to set the event handler for the tonechange event, which\n  sent to the RTCDTMFSender each time a tone begins or ends. The\n  handler receives as input a single parameter of type `rtc.RTCDTMFToneChangeEvent`,\n  describes the change.\n\n  `RTCDTMFSender.ontonechange = toneChangeHandlerFunction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/ontonechange`"}, tone-buffer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFSender.cljs", :line 50, :column 7, :end-line 50, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCDTMFSender` interface's toneBuffer property returns\n  string containing a list of the DTMF tones currently queued for\n  to the remote peer over the `rtc.RTCPeerConnection`. To place\n  into the buffer, call `web.insertDTMF()`.\n\n  `var toneBuffer = RTCDTMFSender.toneBuffer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/toneBuffer`"}, :name rtc.RTCDTMFSender/tone-buffer, :variadic false, :file "src/rtc/RTCDTMFSender.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCDTMFSender` interface's toneBuffer property returns\n  string containing a list of the DTMF tones currently queued for\n  to the remote peer over the `rtc.RTCPeerConnection`. To place\n  into the buffer, call `web.insertDTMF()`.\n\n  `var toneBuffer = RTCDTMFSender.toneBuffer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/toneBuffer`"}, set-tone-buffer! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCDTMFSender.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCDTMFSender` interface's toneBuffer property returns\n  string containing a list of the DTMF tones currently queued for\n  to the remote peer over the `rtc.RTCPeerConnection`. To place\n  into the buffer, call `web.insertDTMF()`.\n\n  `var toneBuffer = RTCDTMFSender.toneBuffer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/toneBuffer`"}, :name rtc.RTCDTMFSender/set-tone-buffer!, :variadic false, :file "src/rtc/RTCDTMFSender.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCDTMFSender` interface's toneBuffer property returns\n  string containing a list of the DTMF tones currently queued for\n  to the remote peer over the `rtc.RTCPeerConnection`. To place\n  into the buffer, call `web.insertDTMF()`.\n\n  `var toneBuffer = RTCDTMFSender.toneBuffer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/toneBuffer`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "Listen to these events using `web.addEventListener()` or by assigning\n  event listener to the oneventname property of this interface."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCRtpTransceiver, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {current-direction {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 33, :column 7, :end-line 33, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` property currentDirection\n  a string which indicates the current directionality of the transceiver.\n\n  `var direction = RTCRtpTransceiver.currentDirection`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection`"}, :name rtc.RTCRtpTransceiver/current-direction, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` property currentDirection\n  a string which indicates the current directionality of the transceiver.\n\n  `var direction = RTCRtpTransceiver.currentDirection`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection`"}, receiver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 83, :column 7, :end-line 83, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The read-only receiver property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpReceiver` responsible for receiving\n  decoding incoming media data for the transceiver's stream.\n\n  `var rtpReceiver = RTCRtpTransceiver.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/receiver`"}, :name rtc.RTCRtpTransceiver/receiver, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only receiver property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpReceiver` responsible for receiving\n  decoding incoming media data for the transceiver's stream.\n\n  `var rtpReceiver = RTCRtpTransceiver.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/receiver`"}, direction {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 45, :column 7, :end-line 45, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` property direction is a\n  which indicates the transceiver's preferred directionality.\n\n  `var direction = RTCRtpTransceiver.direction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/direction`"}, :name rtc.RTCRtpTransceiver/direction, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` property direction is a\n  which indicates the transceiver's preferred directionality.\n\n  `var direction = RTCRtpTransceiver.direction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/direction`"}, mid {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 69, :column 7, :end-line 69, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` interface's mid property\n  the negotiated media ID (mid) which the local and remote peers\n  agreed upon to uniquely identify the stream's pairing of sender\n  receiver.\n\n  `var mediaID = RTCRtpTransceiver.mid;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/mid`"}, :name rtc.RTCRtpTransceiver/mid, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` interface's mid property\n  the negotiated media ID (mid) which the local and remote peers\n  agreed upon to uniquely identify the stream's pairing of sender\n  receiver.\n\n  `var mediaID = RTCRtpTransceiver.mid;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/mid`"}, set-sender! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 122, :column 7, :end-line 122, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only sender property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpSender` responsible for encoding and\n  outgoing media data for the transceiver's stream.\n\n  `var rtpSender = RTCRtpTransceiver.sender;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/sender`"}, :name rtc.RTCRtpTransceiver/set-sender!, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only sender property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpSender` responsible for encoding and\n  outgoing media data for the transceiver's stream.\n\n  `var rtpSender = RTCRtpTransceiver.sender;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/sender`"}, stopped {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 135, :column 7, :end-line 135, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The read-only stopped property on the `rtc.RTCRtpTransceiver`\n  indicates whether or not the transceiver's associated sender\n  receiver have both been stopped.\n\n  `var isStopped = RTCRtpTransceiver.stopped;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stopped`"}, :name rtc.RTCRtpTransceiver/stopped, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only stopped property on the `rtc.RTCRtpTransceiver`\n  indicates whether or not the transceiver's associated sender\n  receiver have both been stopped.\n\n  `var isStopped = RTCRtpTransceiver.stopped;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stopped`"}, set-codec-preferences {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 7, :column 7, :end-line 7, :end-column 28, :arglists (quote ([this codecs])), :doc "Method.\n\n  The `rtc.RTCRtpTransceiver` method setCodecPreferences() configures\n  transceiver's codecs given a list of `rtc.RTCRtpCodeCapability`\n  specifying the new preferences for each codec.\n\n  `rtcRtpTransceiver.setCodecPreferences(codecs)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences`"}, :name rtc.RTCRtpTransceiver/set-codec-preferences, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 28, :method-params ([this codecs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this codecs])), :doc "Method.\n\n  The `rtc.RTCRtpTransceiver` method setCodecPreferences() configures\n  transceiver's codecs given a list of `rtc.RTCRtpCodeCapability`\n  specifying the new preferences for each codec.\n\n  `rtcRtpTransceiver.setCodecPreferences(codecs)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences`"}, set-direction! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 57, :column 7, :end-line 57, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` property direction is a\n  which indicates the transceiver's preferred directionality.\n\n  `var direction = RTCRtpTransceiver.direction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/direction`"}, :name rtc.RTCRtpTransceiver/set-direction!, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only `rtc.RTCRtpTransceiver` property direction is a\n  which indicates the transceiver's preferred directionality.\n\n  `var direction = RTCRtpTransceiver.direction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/direction`"}, stop {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The stop() method in the `rtc.RTCRtpTransceiver` interface permanently\n  the transceiver by stopping both the associated `rtc.RTCRtpSender`\n  `rtc.RTCRtpReceiver`.\n\n  `RTCRtpTransceiver.stop()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stop`"}, :name rtc.RTCRtpTransceiver/stop, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The stop() method in the `rtc.RTCRtpTransceiver` interface permanently\n  the transceiver by stopping both the associated `rtc.RTCRtpSender`\n  `rtc.RTCRtpReceiver`.\n\n  `RTCRtpTransceiver.stop()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stop`"}, set-stopped! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 148, :column 7, :end-line 148, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only stopped property on the `rtc.RTCRtpTransceiver`\n  indicates whether or not the transceiver's associated sender\n  receiver have both been stopped.\n\n  `var isStopped = RTCRtpTransceiver.stopped;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stopped`"}, :name rtc.RTCRtpTransceiver/set-stopped!, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only stopped property on the `rtc.RTCRtpTransceiver`\n  indicates whether or not the transceiver's associated sender\n  receiver have both been stopped.\n\n  `var isStopped = RTCRtpTransceiver.stopped;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stopped`"}, sender {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 109, :column 7, :end-line 109, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only sender property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpSender` responsible for encoding and\n  outgoing media data for the transceiver's stream.\n\n  `var rtpSender = RTCRtpTransceiver.sender;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/sender`"}, :name rtc.RTCRtpTransceiver/sender, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only sender property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpSender` responsible for encoding and\n  outgoing media data for the transceiver's stream.\n\n  `var rtpSender = RTCRtpTransceiver.sender;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/sender`"}, set-receiver! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpTransceiver.cljs", :line 96, :column 7, :end-line 96, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only receiver property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpReceiver` responsible for receiving\n  decoding incoming media data for the transceiver's stream.\n\n  `var rtpReceiver = RTCRtpTransceiver.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/receiver`"}, :name rtc.RTCRtpTransceiver/set-receiver!, :variadic false, :file "src/rtc/RTCRtpTransceiver.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only receiver property of WebRTC's `rtc.RTCRtpTransceiver`\n  indicates the `rtc.RTCRtpReceiver` responsible for receiving\n  decoding incoming media data for the transceiver's stream.\n\n  `var rtpReceiver = RTCRtpTransceiver.receiver;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/receiver`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WebRTC interface RTCRtpTransceiver describes a permanent\n  of an `rtc.RTCRtpSender` and an `rtc.RTCRtpReceiver`, along with\n  shared state."}
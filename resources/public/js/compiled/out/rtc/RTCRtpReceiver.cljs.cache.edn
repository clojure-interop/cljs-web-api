{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCRtpReceiver, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-contributing-sources {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpReceiver.cljs", :line 6, :column 7, :end-line 6, :end-column 31, :arglists (quote ([this])), :doc "Method.\n\n  The getContributingSources() method of the `rtc.RTCRtpReceiver`\n  returns an array of `rtc.RTCRtpContributingSource` instances,\n  corresponding to one CSRC (contributing source) identifier received\n  the current RTCRtpReceiver in the last ten seconds.\n\n  `var rtcRtpContributingSources = rtcRtpReceiver.getContributingSources()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getContributingSources`"}, :name rtc.RTCRtpReceiver/get-contributing-sources, :variadic false, :file "src/rtc/RTCRtpReceiver.cljs", :end-column 31, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getContributingSources() method of the `rtc.RTCRtpReceiver`\n  returns an array of `rtc.RTCRtpContributingSource` instances,\n  corresponding to one CSRC (contributing source) identifier received\n  the current RTCRtpReceiver in the last ten seconds.\n\n  `var rtcRtpContributingSources = rtcRtpReceiver.getContributingSources()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getContributingSources`"}, get-stats {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpReceiver.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The `rtc.RTCRtpReceiver` method getStats() asynchronously requests\n  `rtc.RTCStatsReport` object which provides statistics about incoming\n  on the owning `rtc.RTCPeerConnection`, returning a `web.Promise`\n  fulfillment handler will be called once the results are available.\n\n  `var promise = RTCRtpReceiver.getStats();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getStats`"}, :name rtc.RTCRtpReceiver/get-stats, :variadic false, :file "src/rtc/RTCRtpReceiver.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The `rtc.RTCRtpReceiver` method getStats() asynchronously requests\n  `rtc.RTCStatsReport` object which provides statistics about incoming\n  on the owning `rtc.RTCPeerConnection`, returning a `web.Promise`\n  fulfillment handler will be called once the results are available.\n\n  `var promise = RTCRtpReceiver.getStats();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getStats`"}, get-synchronization-sources {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpReceiver.cljs", :line 34, :column 7, :end-line 34, :end-column 34, :arglists (quote ([this])), :doc "Method.\n\n  The getSynchronizationSources() method of the `rtc.RTCRtpReceiver`\n  returns an array of `rtc.RTCRtpContributingSource` instances,\n  corresponding to one SSRC (synchronization source) identifier\n  by the current RTCRtpReceiver in the last ten seconds.\n\n  `var rtcRtpContributingSources = rtcRtpReceiver.getContributingSources()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getSynchronizationSources`"}, :name rtc.RTCRtpReceiver/get-synchronization-sources, :variadic false, :file "src/rtc/RTCRtpReceiver.cljs", :end-column 34, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getSynchronizationSources() method of the `rtc.RTCRtpReceiver`\n  returns an array of `rtc.RTCRtpContributingSource` instances,\n  corresponding to one SSRC (synchronization source) identifier\n  by the current RTCRtpReceiver in the last ten seconds.\n\n  `var rtcRtpContributingSources = rtcRtpReceiver.getContributingSources()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getSynchronizationSources`"}, track {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpReceiver.cljs", :line 48, :column 7, :end-line 48, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The track read-only property of the `rtc.RTCRtpReceiver` interface\n  the `media.MediaStreamTrack` associated with the current `rtc.RTCRtpReceiver`\n\n  `var mediaStreamTrack = rtcRtpReceiver.track`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/track`"}, :name rtc.RTCRtpReceiver/track, :variadic false, :file "src/rtc/RTCRtpReceiver.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The track read-only property of the `rtc.RTCRtpReceiver` interface\n  the `media.MediaStreamTrack` associated with the current `rtc.RTCRtpReceiver`\n\n  `var mediaStreamTrack = rtcRtpReceiver.track`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/track`"}, set-track! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCRtpReceiver.cljs", :line 60, :column 7, :end-line 60, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The track read-only property of the `rtc.RTCRtpReceiver` interface\n  the `media.MediaStreamTrack` associated with the current `rtc.RTCRtpReceiver`\n\n  `var mediaStreamTrack = rtcRtpReceiver.track`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/track`"}, :name rtc.RTCRtpReceiver/set-track!, :variadic false, :file "src/rtc/RTCRtpReceiver.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The track read-only property of the `rtc.RTCRtpReceiver` interface\n  the `media.MediaStreamTrack` associated with the current `rtc.RTCRtpReceiver`\n\n  `var mediaStreamTrack = rtcRtpReceiver.track`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/track`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The RTCRtpReceiver interface of the WebRTC API manages the reception\n  decoding of data for a `media.MediaStreamTrack` on an `rtc.RTCPeerConnection`."}
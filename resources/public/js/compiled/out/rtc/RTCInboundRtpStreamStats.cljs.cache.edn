{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rtc.RTCInboundRtpStreamStats, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {receiver-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 325, :column 7, :end-line 325, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The receiverId property of the `rtc.RTCInboundRtpStreamStats`\n  specifies the `web.id` of the `rtc.RTCAudioReceiverStats` or\n  object representing the `rtc.RTCRtpReceiver` receiving the stream.\n\n  `var receiverStatsId = rtcInboundRtpStreamStats.receiverId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/receiverId`"}, :name rtc.RTCInboundRtpStreamStats/receiver-id, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The receiverId property of the `rtc.RTCInboundRtpStreamStats`\n  specifies the `web.id` of the `rtc.RTCAudioReceiverStats` or\n  object representing the `rtc.RTCRtpReceiver` receiving the stream.\n\n  `var receiverStatsId = rtcInboundRtpStreamStats.receiverId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/receiverId`"}, per-dscp-packets-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 243, :column 7, :end-line 243, :end-column 32, :arglists (quote ([this])), :doc "Property.\n\n  The perDscpPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  is a record comprised of key/value pairs in which each key is\n  string representation of a Differentiated Services Code Point\n  the value is the number of packets received for that DCSP.\n\n  `var perDscpPacketsReceived = rtcInboundRtpStreamStats.perDscpPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/perDscpPacketsReceived`"}, :name rtc.RTCInboundRtpStreamStats/per-dscp-packets-received, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 32, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The perDscpPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  is a record comprised of key/value pairs in which each key is\n  string representation of a Differentiated Services Code Point\n  the value is the number of packets received for that DCSP.\n\n  `var perDscpPacketsReceived = rtcInboundRtpStreamStats.perDscpPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/perDscpPacketsReceived`"}, fec-packets-discarded {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 59, :column 7, :end-line 59, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The fecPacketsDiscarded property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of RTP Forward Error\n  (FEC) packets that have been discarded.\n\n  `var fecPacketsDiscarded = rtcInboundRtpStreamStats.fecPacketsDiscarded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsDiscarded`"}, :name rtc.RTCInboundRtpStreamStats/fec-packets-discarded, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The fecPacketsDiscarded property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of RTP Forward Error\n  (FEC) packets that have been discarded.\n\n  `var fecPacketsDiscarded = rtcInboundRtpStreamStats.fecPacketsDiscarded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsDiscarded`"}, set-frames-decoded! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 124, :column 7, :end-line 124, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The framesDecoded property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of frames which have been decoded\n  for this media source.\n\n  `var framesDecoded = rtcInboundRtpStreamStats.framesDecoded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded`"}, :name rtc.RTCInboundRtpStreamStats/set-frames-decoded!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The framesDecoded property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of frames which have been decoded\n  for this media source.\n\n  `var framesDecoded = rtcInboundRtpStreamStats.framesDecoded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded`"}, set-sli-count! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 392, :column 7, :end-line 392, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The sliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  how many Slice Loss Indication (SLI) packets the `rtc.RTCRtpReceiver`\n  which this object provdes statistics sent to the remote `rtc.RTCRtpSender`.\n\n  `var sliCount = rtcInboundRtpStreamStats.sliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/sliCount`"}, :name rtc.RTCInboundRtpStreamStats/set-sli-count!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 392, :end-line 392, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The sliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  how many Slice Loss Indication (SLI) packets the `rtc.RTCRtpReceiver`\n  which this object provdes statistics sent to the remote `rtc.RTCRtpSender`.\n\n  `var sliCount = rtcInboundRtpStreamStats.sliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/sliCount`"}, set-packets-duplicated! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 202, :column 7, :end-line 202, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The packetsDuplicated property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of packets discarded because they\n  duplicates of previously-received packets.\n\n  `var packetsDuplicated = rtcInboundRtpStreamStats.packetsDuplicated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsDuplicated`"}, :name rtc.RTCInboundRtpStreamStats/set-packets-duplicated!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The packetsDuplicated property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of packets discarded because they\n  duplicates of previously-received packets.\n\n  `var packetsDuplicated = rtcInboundRtpStreamStats.packetsDuplicated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsDuplicated`"}, set-bytes-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 46, :column 7, :end-line 46, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCInboundRtpStreamStats` dictionary's bytesReceived\n  is an integer value which indicates the total number of bytes\n  so far from this synchronization source (SSRC).\n\n  `var bytesReceived = rtcInboundRtpStreamStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/bytesReceived`"}, :name rtc.RTCInboundRtpStreamStats/set-bytes-received!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `rtc.RTCInboundRtpStreamStats` dictionary's bytesReceived\n  is an integer value which indicates the total number of bytes\n  so far from this synchronization source (SSRC).\n\n  `var bytesReceived = rtcInboundRtpStreamStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/bytesReceived`"}, pli-count {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 271, :column 7, :end-line 271, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The pliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of times the `rtc.RTCRtpReceiver` described by these\n  sent a Picture Loss Indication (PLI) packet to the sender.\n\n  `var pliCount = RTCInboundRtpStreamStats.pliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/pliCount`"}, :name rtc.RTCInboundRtpStreamStats/pli-count, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of times the `rtc.RTCRtpReceiver` described by these\n  sent a Picture Loss Indication (PLI) packet to the sender.\n\n  `var pliCount = RTCInboundRtpStreamStats.pliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/pliCount`"}, remote-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 351, :column 7, :end-line 351, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The remoteId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCRemoteOutboundRtpStreamStats` object\n  the remote peer's `rtc.RTCRtpSender` which is sending the media\n  the local peer.\n\n  `var remoteStatsId = rtcInboundRtpStreamStats.remoteId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId`"}, :name rtc.RTCInboundRtpStreamStats/remote-id, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The remoteId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCRemoteOutboundRtpStreamStats` object\n  the remote peer's `rtc.RTCRtpSender` which is sending the media\n  the local peer.\n\n  `var remoteStatsId = rtcInboundRtpStreamStats.remoteId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId`"}, set-fec-packets-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 446, :column 7, :end-line 446, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The fecPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  indicates how many Forward Error Correction (FEC) packets have\n  received by this RTP receiver from the remote peer.\n\n  `var fecPacketsReceived = rtcInboundRtpStreamStats.fecPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsReceived`"}, :name rtc.RTCInboundRtpStreamStats/set-fec-packets-received!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 446, :end-line 446, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The fecPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  indicates how many Forward Error Correction (FEC) packets have\n  received by this RTP receiver from the remote peer.\n\n  `var fecPacketsReceived = rtcInboundRtpStreamStats.fecPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsReceived`"}, average-rtcp-interval {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 7, :column 7, :end-line 7, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The averageRtcpInterval property of the `rtc.RTCInboundRtpStreamStats`\n  is a floating-point value indicating the average RTCP transmission\n  in seconds.\n\n  `var averageRtcpInterval = rtcInboundRtpStreamStats.averageRtcpInterval;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/averageRtcpInterval`"}, :name rtc.RTCInboundRtpStreamStats/average-rtcp-interval, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The averageRtcpInterval property of the `rtc.RTCInboundRtpStreamStats`\n  is a floating-point value indicating the average RTCP transmission\n  in seconds.\n\n  `var averageRtcpInterval = rtcInboundRtpStreamStats.averageRtcpInterval;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/averageRtcpInterval`"}, packets-duplicated {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 189, :column 7, :end-line 189, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The packetsDuplicated property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of packets discarded because they\n  duplicates of previously-received packets.\n\n  `var packetsDuplicated = rtcInboundRtpStreamStats.packetsDuplicated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsDuplicated`"}, :name rtc.RTCInboundRtpStreamStats/packets-duplicated, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The packetsDuplicated property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of packets discarded because they\n  duplicates of previously-received packets.\n\n  `var packetsDuplicated = rtcInboundRtpStreamStats.packetsDuplicated;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsDuplicated`"}, set-fec-packets-discarded! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 72, :column 7, :end-line 72, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The fecPacketsDiscarded property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of RTP Forward Error\n  (FEC) packets that have been discarded.\n\n  `var fecPacketsDiscarded = rtcInboundRtpStreamStats.fecPacketsDiscarded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsDiscarded`"}, :name rtc.RTCInboundRtpStreamStats/set-fec-packets-discarded!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The fecPacketsDiscarded property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of RTP Forward Error\n  (FEC) packets that have been discarded.\n\n  `var fecPacketsDiscarded = rtcInboundRtpStreamStats.fecPacketsDiscarded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsDiscarded`"}, set-per-dscp-packets-received! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 257, :column 7, :end-line 257, :end-column 37, :arglists (quote ([this val])), :doc "Property.\n\n  The perDscpPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  is a record comprised of key/value pairs in which each key is\n  string representation of a Differentiated Services Code Point\n  the value is the number of packets received for that DCSP.\n\n  `var perDscpPacketsReceived = rtcInboundRtpStreamStats.perDscpPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/perDscpPacketsReceived`"}, :name rtc.RTCInboundRtpStreamStats/set-per-dscp-packets-received!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 37, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The perDscpPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  is a record comprised of key/value pairs in which each key is\n  string representation of a Differentiated Services Code Point\n  the value is the number of packets received for that DCSP.\n\n  `var perDscpPacketsReceived = rtcInboundRtpStreamStats.perDscpPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/perDscpPacketsReceived`"}, packets-failed-decryption {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 215, :column 7, :end-line 215, :end-column 32, :arglists (quote ([this])), :doc "Property.\n\n  The packetsFailedDecryption property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of RTP packets which failed to be\n  successfully after being received by the local end of the connection\n  this session.\n\n  `var packetsFailedDecryption = rtcInboundRtpStreamStats.packetsFailedDecryption;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsFailedDecryption`"}, :name rtc.RTCInboundRtpStreamStats/packets-failed-decryption, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 32, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The packetsFailedDecryption property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of RTP packets which failed to be\n  successfully after being received by the local end of the connection\n  this session.\n\n  `var packetsFailedDecryption = rtcInboundRtpStreamStats.packetsFailedDecryption;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsFailedDecryption`"}, set-nack-count! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 176, :column 7, :end-line 176, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The nackCount property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of times the receiver\n  a NACK packet to the sender.\n\n  `var nackCount = rtcInboundRtpStreamStats.nackCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/nackCount`"}, :name rtc.RTCInboundRtpStreamStats/set-nack-count!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The nackCount property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of times the receiver\n  a NACK packet to the sender.\n\n  `var nackCount = rtcInboundRtpStreamStats.nackCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/nackCount`"}, nack-count {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 163, :column 7, :end-line 163, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The nackCount property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of times the receiver\n  a NACK packet to the sender.\n\n  `var nackCount = rtcInboundRtpStreamStats.nackCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/nackCount`"}, :name rtc.RTCInboundRtpStreamStats/nack-count, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The nackCount property of the `rtc.RTCInboundRtpStreamStats`\n  is a numeric value indicating the number of times the receiver\n  a NACK packet to the sender.\n\n  `var nackCount = rtcInboundRtpStreamStats.nackCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/nackCount`"}, fir-count {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The firCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of Full Intra Request (FIR) packets have been sent\n  the receiver to the sender.\n\n  `var firCount = rtcInboundRtpStreamStats.firCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/firCount`"}, :name rtc.RTCInboundRtpStreamStats/fir-count, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The firCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of Full Intra Request (FIR) packets have been sent\n  the receiver to the sender.\n\n  `var firCount = rtcInboundRtpStreamStats.firCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/firCount`"}, set-qp-sum! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 311, :column 7, :end-line 311, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The qpSum property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  a value generated by adding the Quantization Parameter (QP) values\n  every frame sent or received to date on the video track corresponding\n  this RTCInboundRtpStreamStats object.\n\n  `var qpSum = rtcInboundRtpStreamStats.qpSum;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum`"}, :name rtc.RTCInboundRtpStreamStats/set-qp-sum!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The qpSum property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  a value generated by adding the Quantization Parameter (QP) values\n  every frame sent or received to date on the video track corresponding\n  this RTCInboundRtpStreamStats object.\n\n  `var qpSum = rtcInboundRtpStreamStats.qpSum;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum`"}, fec-packets-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 433, :column 7, :end-line 433, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The fecPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  indicates how many Forward Error Correction (FEC) packets have\n  received by this RTP receiver from the remote peer.\n\n  `var fecPacketsReceived = rtcInboundRtpStreamStats.fecPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsReceived`"}, :name rtc.RTCInboundRtpStreamStats/fec-packets-received, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 433, :end-line 433, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The fecPacketsReceived property of the `rtc.RTCInboundRtpStreamStats`\n  indicates how many Forward Error Correction (FEC) packets have\n  received by this RTP receiver from the remote peer.\n\n  `var fecPacketsReceived = rtcInboundRtpStreamStats.fecPacketsReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/fecPacketsReceived`"}, frames-decoded {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 111, :column 7, :end-line 111, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The framesDecoded property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of frames which have been decoded\n  for this media source.\n\n  `var framesDecoded = rtcInboundRtpStreamStats.framesDecoded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded`"}, :name rtc.RTCInboundRtpStreamStats/frames-decoded, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The framesDecoded property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of frames which have been decoded\n  for this media source.\n\n  `var framesDecoded = rtcInboundRtpStreamStats.framesDecoded;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/framesDecoded`"}, set-pli-count! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 284, :column 7, :end-line 284, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The pliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of times the `rtc.RTCRtpReceiver` described by these\n  sent a Picture Loss Indication (PLI) packet to the sender.\n\n  `var pliCount = RTCInboundRtpStreamStats.pliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/pliCount`"}, :name rtc.RTCInboundRtpStreamStats/set-pli-count!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of times the `rtc.RTCRtpReceiver` described by these\n  sent a Picture Loss Indication (PLI) packet to the sender.\n\n  `var pliCount = RTCInboundRtpStreamStats.pliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/pliCount`"}, last-packet-received-timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 137, :column 7, :end-line 137, :end-column 37, :arglists (quote ([this])), :doc "Property.\n\n  The lastPacketReceivedTimestamp property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the time at which the most recently received packet\n  from this source.\n\n  `var lastPacketTimestamp = rtcInboundRtpStreamStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/lastPacketReceivedTimestamp`"}, :name rtc.RTCInboundRtpStreamStats/last-packet-received-timestamp, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 37, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The lastPacketReceivedTimestamp property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the time at which the most recently received packet\n  from this source.\n\n  `var lastPacketTimestamp = rtcInboundRtpStreamStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/lastPacketReceivedTimestamp`"}, set-last-packet-received-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 150, :column 7, :end-line 150, :end-column 42, :arglists (quote ([this val])), :doc "Property.\n\n  The lastPacketReceivedTimestamp property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the time at which the most recently received packet\n  from this source.\n\n  `var lastPacketTimestamp = rtcInboundRtpStreamStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/lastPacketReceivedTimestamp`"}, :name rtc.RTCInboundRtpStreamStats/set-last-packet-received-timestamp!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 42, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The lastPacketReceivedTimestamp property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the time at which the most recently received packet\n  from this source.\n\n  `var lastPacketTimestamp = rtcInboundRtpStreamStats.lastPacketReceivedTimestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/lastPacketReceivedTimestamp`"}, qp-sum {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 297, :column 7, :end-line 297, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The qpSum property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  a value generated by adding the Quantization Parameter (QP) values\n  every frame sent or received to date on the video track corresponding\n  this RTCInboundRtpStreamStats object.\n\n  `var qpSum = rtcInboundRtpStreamStats.qpSum;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum`"}, :name rtc.RTCInboundRtpStreamStats/qp-sum, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The qpSum property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  a value generated by adding the Quantization Parameter (QP) values\n  every frame sent or received to date on the video track corresponding\n  this RTCInboundRtpStreamStats object.\n\n  `var qpSum = rtcInboundRtpStreamStats.qpSum;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/qpSum`"}, set-packets-failed-decryption! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 229, :column 7, :end-line 229, :end-column 37, :arglists (quote ([this val])), :doc "Property.\n\n  The packetsFailedDecryption property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of RTP packets which failed to be\n  successfully after being received by the local end of the connection\n  this session.\n\n  `var packetsFailedDecryption = rtcInboundRtpStreamStats.packetsFailedDecryption;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsFailedDecryption`"}, :name rtc.RTCInboundRtpStreamStats/set-packets-failed-decryption!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 37, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The packetsFailedDecryption property of the `rtc.RTCInboundRtpStreamStats`\n  indicates the total number of RTP packets which failed to be\n  successfully after being received by the local end of the connection\n  this session.\n\n  `var packetsFailedDecryption = rtcInboundRtpStreamStats.packetsFailedDecryption;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/packetsFailedDecryption`"}, set-average-rtcp-interval! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 20, :column 7, :end-line 20, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The averageRtcpInterval property of the `rtc.RTCInboundRtpStreamStats`\n  is a floating-point value indicating the average RTCP transmission\n  in seconds.\n\n  `var averageRtcpInterval = rtcInboundRtpStreamStats.averageRtcpInterval;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/averageRtcpInterval`"}, :name rtc.RTCInboundRtpStreamStats/set-average-rtcp-interval!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The averageRtcpInterval property of the `rtc.RTCInboundRtpStreamStats`\n  is a floating-point value indicating the average RTCP transmission\n  in seconds.\n\n  `var averageRtcpInterval = rtcInboundRtpStreamStats.averageRtcpInterval;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/averageRtcpInterval`"}, set-receiver-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 338, :column 7, :end-line 338, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The receiverId property of the `rtc.RTCInboundRtpStreamStats`\n  specifies the `web.id` of the `rtc.RTCAudioReceiverStats` or\n  object representing the `rtc.RTCRtpReceiver` receiving the stream.\n\n  `var receiverStatsId = rtcInboundRtpStreamStats.receiverId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/receiverId`"}, :name rtc.RTCInboundRtpStreamStats/set-receiver-id!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The receiverId property of the `rtc.RTCInboundRtpStreamStats`\n  specifies the `web.id` of the `rtc.RTCAudioReceiverStats` or\n  object representing the `rtc.RTCRtpReceiver` receiving the stream.\n\n  `var receiverStatsId = rtcInboundRtpStreamStats.receiverId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/receiverId`"}, set-track-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 419, :column 7, :end-line 419, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The trackId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCReceiverAudioTrackAttachmentStats`\n  `rtc.RTCReceiverVideoTrackAttachmentStats` object representing\n  `media.MediaStreamTrack` which is receiving the incoming media.\n\n  `var trackStatsId = rtcInboundRtpStreamStats.trackId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/trackId`"}, :name rtc.RTCInboundRtpStreamStats/set-track-id!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 419, :end-line 419, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The trackId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCReceiverAudioTrackAttachmentStats`\n  `rtc.RTCReceiverVideoTrackAttachmentStats` object representing\n  `media.MediaStreamTrack` which is receiving the incoming media.\n\n  `var trackStatsId = rtcInboundRtpStreamStats.trackId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/trackId`"}, sli-count {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 379, :column 7, :end-line 379, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The sliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  how many Slice Loss Indication (SLI) packets the `rtc.RTCRtpReceiver`\n  which this object provdes statistics sent to the remote `rtc.RTCRtpSender`.\n\n  `var sliCount = rtcInboundRtpStreamStats.sliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/sliCount`"}, :name rtc.RTCInboundRtpStreamStats/sli-count, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 379, :end-line 379, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The sliCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  how many Slice Loss Indication (SLI) packets the `rtc.RTCRtpReceiver`\n  which this object provdes statistics sent to the remote `rtc.RTCRtpSender`.\n\n  `var sliCount = rtcInboundRtpStreamStats.sliCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/sliCount`"}, set-remote-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 365, :column 7, :end-line 365, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The remoteId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCRemoteOutboundRtpStreamStats` object\n  the remote peer's `rtc.RTCRtpSender` which is sending the media\n  the local peer.\n\n  `var remoteStatsId = rtcInboundRtpStreamStats.remoteId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId`"}, :name rtc.RTCInboundRtpStreamStats/set-remote-id!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The remoteId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCRemoteOutboundRtpStreamStats` object\n  the remote peer's `rtc.RTCRtpSender` which is sending the media\n  the local peer.\n\n  `var remoteStatsId = rtcInboundRtpStreamStats.remoteId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/remoteId`"}, set-fir-count! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 98, :column 7, :end-line 98, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The firCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of Full Intra Request (FIR) packets have been sent\n  the receiver to the sender.\n\n  `var firCount = rtcInboundRtpStreamStats.firCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/firCount`"}, :name rtc.RTCInboundRtpStreamStats/set-fir-count!, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The firCount property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the number of Full Intra Request (FIR) packets have been sent\n  the receiver to the sender.\n\n  `var firCount = rtcInboundRtpStreamStats.firCount;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/firCount`"}, track-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 405, :column 7, :end-line 405, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The trackId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCReceiverAudioTrackAttachmentStats`\n  `rtc.RTCReceiverVideoTrackAttachmentStats` object representing\n  `media.MediaStreamTrack` which is receiving the incoming media.\n\n  `var trackStatsId = rtcInboundRtpStreamStats.trackId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/trackId`"}, :name rtc.RTCInboundRtpStreamStats/track-id, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 405, :end-line 405, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The trackId property of the `rtc.RTCInboundRtpStreamStats` dictionary\n  the `web.id` of the `rtc.RTCReceiverAudioTrackAttachmentStats`\n  `rtc.RTCReceiverVideoTrackAttachmentStats` object representing\n  `media.MediaStreamTrack` which is receiving the incoming media.\n\n  `var trackStatsId = rtcInboundRtpStreamStats.trackId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/trackId`"}, bytes-received {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCInboundRtpStreamStats.cljs", :line 33, :column 7, :end-line 33, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCInboundRtpStreamStats` dictionary's bytesReceived\n  is an integer value which indicates the total number of bytes\n  so far from this synchronization source (SSRC).\n\n  `var bytesReceived = rtcInboundRtpStreamStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/bytesReceived`"}, :name rtc.RTCInboundRtpStreamStats/bytes-received, :variadic false, :file "src/rtc/RTCInboundRtpStreamStats.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `rtc.RTCInboundRtpStreamStats` dictionary's bytesReceived\n  is an integer value which indicates the total number of bytes\n  so far from this synchronization source (SSRC).\n\n  `var bytesReceived = rtcInboundRtpStreamStats.bytesReceived;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCInboundRtpStreamStats/bytesReceived`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WebRTC API's RTCInboundRtpStreamStats dictionary, based upon\n  and `rtc.RTCStats`, contains statistics related to the receiving\n  of an RTP stream on the local end of the `rtc.RTCPeerConnection`."}
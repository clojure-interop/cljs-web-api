{:rename-macros {}, :renames {}, :externs {RTCPeerConnectionIceEvent {}}, :use-macros {}, :excludes #{}, :name rtc.RTCPeerConnectionIceEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name rtc.RTCPeerConnectionIceEvent/constructor, :file "src/rtc/RTCPeerConnectionIceEvent.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnectionIceEvent.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The RTCPeerConnectionIceEvent() constructor creates a new `rtc.RTCPeerConnectionIceEvent`.\n\n  type\n  Is a `dom.DOMString` containing the name of the event, like \\\"icecandidate\\\".\n  options\n  A dictionary of type RTCPeerConnectionInit, which may contain one or more of the following fields:\n\n  \\\"candidate\\\" (optional, default is null): A `rtc.RTCIceCandidate` representing the ICE candidate being concerned by the event.  If null, the event indicates the end of candidate gathering.\n  \\\"url\\\" (optional, default is null): The URL of the STUN or TURN server which was used to gather the candidate. If the candidate was not gathered by a STUN or TURN server, this value must be null.\n  \\\"bubbles\\\" (optional, default is false): Inherited from EventInit(), this Boolean option indicates whether or not the event must bubble.\n  \\\"cancelable\\\" (optional, default is false, inherited from EventInit(), this Boolean indicates whether or not the event can be canceled.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/RTCPeerConnectionIceEvent`", :tag js}, candidate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnectionIceEvent.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The read-only candidate property of the `rtc.RTCPeerConnectionIceEvent`\n  returns the `rtc.RTCIceCandidate` associated with the event.\n\n  `var candidate = event.candidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate`"}, :name rtc.RTCPeerConnectionIceEvent/candidate, :variadic false, :file "src/rtc/RTCPeerConnectionIceEvent.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only candidate property of the `rtc.RTCPeerConnectionIceEvent`\n  returns the `rtc.RTCIceCandidate` associated with the event.\n\n  `var candidate = event.candidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate`"}, set-candidate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/rtc/RTCPeerConnectionIceEvent.cljs", :line 36, :column 7, :end-line 36, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only candidate property of the `rtc.RTCPeerConnectionIceEvent`\n  returns the `rtc.RTCIceCandidate` associated with the event.\n\n  `var candidate = event.candidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate`"}, :name rtc.RTCPeerConnectionIceEvent/set-candidate!, :variadic false, :file "src/rtc/RTCPeerConnectionIceEvent.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only candidate property of the `rtc.RTCPeerConnectionIceEvent`\n  returns the `rtc.RTCIceCandidate` associated with the event.\n\n  `var candidate = event.candidate;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The RTCPeerConnectionIceEvent interface represents events that\n  in relation to ICE candidates with the target, usually an `rtc.RTCPeerConnection`."}
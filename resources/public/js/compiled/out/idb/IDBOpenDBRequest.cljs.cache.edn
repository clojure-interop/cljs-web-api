{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name idb.IDBOpenDBRequest, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {onblocked {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBOpenDBRequest.cljs", :line 5, :column 7, :end-line 5, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onblocked event handler of the `idb.IDBOpenDBRequest` interface\n  the event handler for the blocked event. This event is triggered\n  the upgradeneeded should be triggered because of a version change\n  the database is still in use (that is, not closed) somewhere,\n  after the versionchange event was sent.\n\n  `IDBOpenDBRequest.onblocked = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onblocked`"}, :name idb.IDBOpenDBRequest/onblocked, :variadic false, :file "src/idb/IDBOpenDBRequest.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onblocked event handler of the `idb.IDBOpenDBRequest` interface\n  the event handler for the blocked event. This event is triggered\n  the upgradeneeded should be triggered because of a version change\n  the database is still in use (that is, not closed) somewhere,\n  after the versionchange event was sent.\n\n  `IDBOpenDBRequest.onblocked = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onblocked`"}, set-onblocked! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBOpenDBRequest.cljs", :line 20, :column 7, :end-line 20, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The onblocked event handler of the `idb.IDBOpenDBRequest` interface\n  the event handler for the blocked event. This event is triggered\n  the upgradeneeded should be triggered because of a version change\n  the database is still in use (that is, not closed) somewhere,\n  after the versionchange event was sent.\n\n  `IDBOpenDBRequest.onblocked = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onblocked`"}, :name idb.IDBOpenDBRequest/set-onblocked!, :variadic false, :file "src/idb/IDBOpenDBRequest.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onblocked event handler of the `idb.IDBOpenDBRequest` interface\n  the event handler for the blocked event. This event is triggered\n  the upgradeneeded should be triggered because of a version change\n  the database is still in use (that is, not closed) somewhere,\n  after the versionchange event was sent.\n\n  `IDBOpenDBRequest.onblocked = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onblocked`"}, onupgradeneeded {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBOpenDBRequest.cljs", :line 35, :column 7, :end-line 35, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  In the following example you can see the onupgradeneeded handler\n  used to update the database structure if a database with a higher\n  number is loaded. For a full working example, see our To-do Notifications\n  (view example live.)\n\n  `IDBOpenDBRequest.onupgradeneeded = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onupgradeneeded`"}, :name idb.IDBOpenDBRequest/onupgradeneeded, :variadic false, :file "src/idb/IDBOpenDBRequest.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  In the following example you can see the onupgradeneeded handler\n  used to update the database structure if a database with a higher\n  number is loaded. For a full working example, see our To-do Notifications\n  (view example live.)\n\n  `IDBOpenDBRequest.onupgradeneeded = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onupgradeneeded`"}, set-onupgradeneeded! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBOpenDBRequest.cljs", :line 49, :column 7, :end-line 49, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  In the following example you can see the onupgradeneeded handler\n  used to update the database structure if a database with a higher\n  number is loaded. For a full working example, see our To-do Notifications\n  (view example live.)\n\n  `IDBOpenDBRequest.onupgradeneeded = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onupgradeneeded`"}, :name idb.IDBOpenDBRequest/set-onupgradeneeded!, :variadic false, :file "src/idb/IDBOpenDBRequest.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  In the following example you can see the onupgradeneeded handler\n  used to update the database structure if a database with a higher\n  number is loaded. For a full working example, see our To-do Notifications\n  (view example live.)\n\n  `IDBOpenDBRequest.onupgradeneeded = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBOpenDBRequest/onupgradeneeded`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "Also inherits methods from its parents `idb.IDBRequest` and `web.EventTarget`."}
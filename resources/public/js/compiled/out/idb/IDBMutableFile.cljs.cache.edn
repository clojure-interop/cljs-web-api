{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name type}, :name idb.IDBMutableFile, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 119, :column 7, :end-line 119, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  Provides the mime type of the file.\n\n  `var type = instanceOfFileHandle.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/type`"}, :name idb.IDBMutableFile/set-type!, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Provides the mime type of the file.\n\n  `var type = instanceOfFileHandle.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/type`"}, open {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 18, :column 7, :end-line 18, :end-column 11, :arglists (quote ([this mode])), :doc "Method.\n\n  The open method returns a `web.LockedFile` object that allows\n  safely write in the file.\n\n  `var myFile = instanceOfFileHandle.open(mode);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/open`"}, :name idb.IDBMutableFile/open, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 11, :method-params ([this mode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this mode])), :doc "Method.\n\n  The open method returns a `web.LockedFile` object that allows\n  safely write in the file.\n\n  `var myFile = instanceOfFileHandle.open(mode);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/open`"}, set-onabort! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 66, :column 7, :end-line 66, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the associated locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfFileHandle.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onabort`"}, :name idb.IDBMutableFile/set-onabort!, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the associated locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfFileHandle.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onabort`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 94, :column 7, :end-line 94, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfFileHandle.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onerror`"}, :name idb.IDBMutableFile/set-onerror!, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfFileHandle.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onerror`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 41, :column 7, :end-line 41, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  Provides the name of the file.\n\n  `var name = instanceOfFileHandle.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/name`"}, :name idb.IDBMutableFile/set-name!, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Provides the name of the file.\n\n  `var name = instanceOfFileHandle.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/name`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 80, :column 7, :end-line 80, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfFileHandle.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onerror`"}, :name idb.IDBMutableFile/onerror, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfFileHandle.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onerror`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 30, :column 7, :end-line 30, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  Provides the name of the file.\n\n  `var name = instanceOfFileHandle.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/name`"}, :name idb.IDBMutableFile/name, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Provides the name of the file.\n\n  `var name = instanceOfFileHandle.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/name`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 108, :column 7, :end-line 108, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  Provides the mime type of the file.\n\n  `var type = instanceOfFileHandle.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/type`"}, :name idb.IDBMutableFile/type, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Provides the mime type of the file.\n\n  `var type = instanceOfFileHandle.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/type`"}, get-file {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 6, :column 7, :end-line 6, :end-column 15, :arglists (quote ([this])), :doc "Method.\n\n  The getFile method allows to retrieve a read-only snapshot of\n  handled file in the form of a `file.File` object.\n\n  `var request = instanceOfFileHandle.getFile();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/getFile`"}, :name idb.IDBMutableFile/get-file, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getFile method allows to retrieve a read-only snapshot of\n  handled file in the form of a `file.File` object.\n\n  `var request = instanceOfFileHandle.getFile();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/getFile`"}, onabort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBMutableFile.cljs", :line 52, :column 7, :end-line 52, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the associated locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfFileHandle.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onabort`"}, :name idb.IDBMutableFile/onabort, :variadic false, :file "src/idb/IDBMutableFile.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the associated locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfFileHandle.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBMutableFile/onabort`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The IDBMutableFile interface provides access in read or write\n  to a file, dealing with all the necessary locks."}
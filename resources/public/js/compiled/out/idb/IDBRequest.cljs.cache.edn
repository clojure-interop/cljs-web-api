{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name idb.IDBRequest, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-onsuccess! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 86, :column 7, :end-line 86, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  a full working example, see our To-do Notifications app (view\n  live.)\n\n  `request.onsuccess = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onsuccess`"}, :name idb.IDBRequest/set-onsuccess!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  a full working example, see our To-do Notifications app (view\n  live.)\n\n  `request.onsuccess = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onsuccess`"}, set-transaction! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 187, :column 7, :end-line 187, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  An `idb.IDBTransaction`.\n\n  `var myTransaction = request.transaction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/transaction`"}, :name idb.IDBRequest/set-transaction!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `idb.IDBTransaction`.\n\n  `var myTransaction = request.transaction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/transaction`"}, ready-state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 102, :column 7, :end-line 102, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The `idb.IDBRequestReadyState` of the request, which takes one\n  the following two values:\n\n  `var currentReadyState = request.readyState;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/readyState`"}, :name idb.IDBRequest/ready-state, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `idb.IDBRequestReadyState` of the request, which takes one\n  the following two values:\n\n  `var currentReadyState = request.readyState;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/readyState`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 53, :column 7, :end-line 53, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  included at the bottom is an onerror function that reports what\n  error was if the request fails. For a full working example, see\n  To-do Notifications app (view example live.)\n\n  `request.onerror = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onerror`"}, :name idb.IDBRequest/set-onerror!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  included at the bottom is an onerror function that reports what\n  error was if the request fails. For a full working example, see\n  To-do Notifications app (view example live.)\n\n  `request.onerror = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onerror`"}, onsuccess {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 70, :column 7, :end-line 70, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  a full working example, see our To-do Notifications app (view\n  live.)\n\n  `request.onsuccess = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onsuccess`"}, :name idb.IDBRequest/onsuccess, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  a full working example, see our To-do Notifications app (view\n  live.)\n\n  `request.onsuccess = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onsuccess`"}, set-source! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 162, :column 7, :end-line 162, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  An object representing the source of the request, such as an\n  `idb.IDBObjectStore` or `idb.IDBCursor`.\n\n  `var IDBIndex = request.source;\n  var IDBCursor = request.source;\n  var IDBObjectStore = request.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/source`"}, :name idb.IDBRequest/set-source!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An object representing the source of the request, such as an\n  `idb.IDBObjectStore` or `idb.IDBCursor`.\n\n  `var IDBIndex = request.source;\n  var IDBCursor = request.source;\n  var IDBObjectStore = request.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/source`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 36, :column 7, :end-line 36, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  included at the bottom is an onerror function that reports what\n  error was if the request fails. For a full working example, see\n  To-do Notifications app (view example live.)\n\n  `request.onerror = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onerror`"}, :name idb.IDBRequest/onerror, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The following example requests a given record title, onsuccess\n  the associated record from the `idb.IDBObjectStore` (made available\n  objectStoreTitleRequest.result), updates one property of the\n  and then puts the updated record back into the object store.\n  included at the bottom is an onerror function that reports what\n  error was if the request fails. For a full working example, see\n  To-do Notifications app (view example live.)\n\n  `request.onerror = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/onerror`"}, source {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 148, :column 7, :end-line 148, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  An object representing the source of the request, such as an\n  `idb.IDBObjectStore` or `idb.IDBCursor`.\n\n  `var IDBIndex = request.source;\n  var IDBCursor = request.source;\n  var IDBObjectStore = request.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/source`"}, :name idb.IDBRequest/source, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An object representing the source of the request, such as an\n  `idb.IDBObjectStore` or `idb.IDBCursor`.\n\n  `var IDBIndex = request.source;\n  var IDBCursor = request.source;\n  var IDBObjectStore = request.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/source`"}, transaction {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 176, :column 7, :end-line 176, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  An `idb.IDBTransaction`.\n\n  `var myTransaction = request.transaction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/transaction`"}, :name idb.IDBRequest/transaction, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `idb.IDBTransaction`.\n\n  `var myTransaction = request.transaction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/transaction`"}, set-ready-state! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 114, :column 7, :end-line 114, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The `idb.IDBRequestReadyState` of the request, which takes one\n  the following two values:\n\n  `var currentReadyState = request.readyState;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/readyState`"}, :name idb.IDBRequest/set-ready-state!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `idb.IDBRequestReadyState` of the request, which takes one\n  the following two values:\n\n  `var currentReadyState = request.readyState;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/readyState`"}, set-result! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 137, :column 7, :end-line 137, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  any\n\n  `var myResult = request.result;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/result`"}, :name idb.IDBRequest/set-result!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  any\n\n  `var myResult = request.result;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/result`"}, set-error! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  A `dom.DOMError` containing the relevant error. In Chrome 48+/Firefox\n  this property returns a `dom.DOMException` because DOMError has\n  removed from the DOM standard. The following error codes are\n  under certain conditions:\n\n  `var myError = request.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error`"}, :name idb.IDBRequest/set-error!, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `dom.DOMError` containing the relevant error. In Chrome 48+/Firefox\n  this property returns a `dom.DOMException` because DOMError has\n  removed from the DOM standard. The following error codes are\n  under certain conditions:\n\n  `var myError = request.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error`"}, result {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 126, :column 7, :end-line 126, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  any\n\n  `var myResult = request.result;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/result`"}, :name idb.IDBRequest/result, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  any\n\n  `var myResult = request.result;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/result`"}, error {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBRequest.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  A `dom.DOMError` containing the relevant error. In Chrome 48+/Firefox\n  this property returns a `dom.DOMException` because DOMError has\n  removed from the DOM standard. The following error codes are\n  under certain conditions:\n\n  `var myError = request.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error`"}, :name idb.IDBRequest/error, :variadic false, :file "src/idb/IDBRequest.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `dom.DOMError` containing the relevant error. In Chrome 48+/Firefox\n  this property returns a `dom.DOMException` because DOMError has\n  removed from the DOM standard. The following error codes are\n  under certain conditions:\n\n  `var myError = request.error;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBRequest/error`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The request object does not initially contain any information\n  the result of the operation, but once information becomes available,\n  event is fired on the request, and the information becomes available\n  the properties of the IDBRequest instance."}
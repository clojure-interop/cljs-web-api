{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name idb.IDBKeyRange, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-lower-open! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 102, :column 7, :end-line 102, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var lowerOpen = myKeyRange.lowerOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lowerOpen`"}, :name idb.IDBKeyRange/set-lower-open!, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var lowerOpen = myKeyRange.lowerOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lowerOpen`"}, upper {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 113, :column 7, :end-line 113, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The upper bound of the key range (can be any type.)\n\n  `var upper = myKeyRange.upper`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upper`"}, :name idb.IDBKeyRange/upper, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The upper bound of the key range (can be any type.)\n\n  `var upper = myKeyRange.upper`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upper`"}, set-upper! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 124, :column 7, :end-line 124, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The upper bound of the key range (can be any type.)\n\n  `var upper = myKeyRange.upper`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upper`"}, :name idb.IDBKeyRange/set-upper!, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The upper bound of the key range (can be any type.)\n\n  `var upper = myKeyRange.upper`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upper`"}, only {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 47, :column 7, :end-line 47, :end-column 11, :arglists (quote ([this value])), :doc "Method.\n\n  value is the value for the new key range.\n\n  `var myIDBKeyRange = IDBKeyRange.only(value);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/only`"}, :name idb.IDBKeyRange/only, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 11, :method-params ([this value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this value])), :doc "Method.\n\n  value is the value for the new key range.\n\n  `var myIDBKeyRange = IDBKeyRange.only(value);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/only`"}, lower-open {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 91, :column 7, :end-line 91, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var lowerOpen = myKeyRange.lowerOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lowerOpen`"}, :name idb.IDBKeyRange/lower-open, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var lowerOpen = myKeyRange.lowerOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lowerOpen`"}, lower-bound {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 35, :column 7, :end-line 35, :end-column 18, :arglists (quote ([this & args])), :doc "Method.\n\n  `idb.IDBKeyRange`: The newly created key range.\n\n  `var myIDBKeyRange = IDBKeyRange.lowerBound(lower);\n  var myIDBKeyRange = IDBKeyRange.lowerBound(lower, open);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lowerBound`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name idb.IDBKeyRange/lower-bound, :variadic true, :file "src/idb/IDBKeyRange.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  `idb.IDBKeyRange`: The newly created key range.\n\n  `var myIDBKeyRange = IDBKeyRange.lowerBound(lower);\n  var myIDBKeyRange = IDBKeyRange.lowerBound(lower, open);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lowerBound`"}, includes {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 23, :column 7, :end-line 23, :end-column 15, :arglists (quote ([this key])), :doc "Method.\n\n  key The key you want to check for in your key range. This can\n  any type.\n\n  `var isIncluded = myKeyRange.includes(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/includes`"}, :name idb.IDBKeyRange/includes, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 15, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc "Method.\n\n  key The key you want to check for in your key range. This can\n  any type.\n\n  `var isIncluded = myKeyRange.includes(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/includes`"}, upper-bound {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 58, :column 7, :end-line 58, :end-column 18, :arglists (quote ([this & args])), :doc "Method.\n\n  `idb.IDBKeyRange`: The newly created key range.\n\n  `var myIDBKeyRange = IDBKeyRange.upperBound(upper[, open=false])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upperBound`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name idb.IDBKeyRange/upper-bound, :variadic true, :file "src/idb/IDBKeyRange.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  `idb.IDBKeyRange`: The newly created key range.\n\n  `var myIDBKeyRange = IDBKeyRange.upperBound(upper[, open=false])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upperBound`"}, set-upper-open! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 146, :column 7, :end-line 146, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var upperOpen = myKeyRange.upperOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upperOpen`"}, :name idb.IDBKeyRange/set-upper-open!, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var upperOpen = myKeyRange.upperOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upperOpen`"}, upper-open {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 135, :column 7, :end-line 135, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var upperOpen = myKeyRange.upperOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upperOpen`"}, :name idb.IDBKeyRange/upper-open, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.boolean`:\n\n  `var upperOpen = myKeyRange.upperOpen`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/upperOpen`"}, bound {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([this & args])), :doc "Method.\n\n  `idb.IDBKeyRange`: The newly created key range.\n\n  `var myIDBKeyRange = IDBKeyRange.bound(lower, upper);\n  var myIDBKeyRange = IDBKeyRange.bound(lower, upper, lowerOpen);\n  var myIDBKeyRange = IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/bound`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name idb.IDBKeyRange/bound, :variadic true, :file "src/idb/IDBKeyRange.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  `idb.IDBKeyRange`: The newly created key range.\n\n  `var myIDBKeyRange = IDBKeyRange.bound(lower, upper);\n  var myIDBKeyRange = IDBKeyRange.bound(lower, upper, lowerOpen);\n  var myIDBKeyRange = IDBKeyRange.bound(lower, upper, lowerOpen, upperOpen);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/bound`"}, lower {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 69, :column 7, :end-line 69, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The lower bound of the key range (can be any type.)\n\n  `var lower = myKeyRange.lower`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lower`"}, :name idb.IDBKeyRange/lower, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The lower bound of the key range (can be any type.)\n\n  `var lower = myKeyRange.lower`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lower`"}, set-lower! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBKeyRange.cljs", :line 80, :column 7, :end-line 80, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The lower bound of the key range (can be any type.)\n\n  `var lower = myKeyRange.lower`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lower`"}, :name idb.IDBKeyRange/set-lower!, :variadic false, :file "src/idb/IDBKeyRange.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The lower bound of the key range (can be any type.)\n\n  `var lower = myKeyRange.lower`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBKeyRange/lower`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "A key range can be a single value or a range with upper and lower\n  or endpoints. If the key range has both upper and lower bounds,\n  it is bounded; if it has no bounds, it is unbounded. A bounded\n  range can either be open (the endpoints are excluded) or closed\n  endpoints are included). To retrieve all keys within a certain\n  you can use the following code constructs:"}
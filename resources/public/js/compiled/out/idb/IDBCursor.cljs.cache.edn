{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{key update}, :name idb.IDBCursor, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {primary-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 122, :column 7, :end-line 122, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  A value of any data type.\n\n  `var value = cursor.primaryKey;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/primaryKey`"}, :name idb.IDBCursor/primary-key, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A value of any data type.\n\n  `var value = cursor.primaryKey;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/primaryKey`"}, direction {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 74, :column 7, :end-line 74, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  A string (defined by the IDBCursorDirection enum) indicating\n  direction in which the cursor is traversing the data. Possible\n  are:\n\n  `var direction = cursor.direction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/direction`"}, :name idb.IDBCursor/direction, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A string (defined by the IDBCursorDirection enum) indicating\n  direction in which the cursor is traversing the data. Possible\n  are:\n\n  `var direction = cursor.direction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/direction`"}, advance {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this count])), :doc "Method.\n\n  The advance() method of the `idb.IDBCursor` interface sets the\n  of times a cursor should move its position forward.\n\n  `cursor.advance(count);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/advance`"}, :name idb.IDBCursor/advance, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 14, :method-params ([this count]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this count])), :doc "Method.\n\n  The advance() method of the `idb.IDBCursor` interface sets the\n  of times a cursor should move its position forward.\n\n  `cursor.advance(count);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/advance`"}, request {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 144, :column 7, :end-line 144, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The request read-only property of the `idb.IDBCursor` interface\n  the request if the cursor.\n\n  `var request = cursor.request;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/request`"}, :name idb.IDBCursor/request, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The request read-only property of the `idb.IDBCursor` interface\n  the request if the cursor.\n\n  `var request = cursor.request;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/request`"}, set-request! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 156, :column 7, :end-line 156, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The request read-only property of the `idb.IDBCursor` interface\n  the request if the cursor.\n\n  `var request = cursor.request;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/request`"}, :name idb.IDBCursor/set-request!, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The request read-only property of the `idb.IDBCursor` interface\n  the request if the cursor.\n\n  `var request = cursor.request;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/request`"}, set-source! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 180, :column 7, :end-line 180, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The `idb.IDBObjectStore` or `idb.IDBIndex` that the cursor is\n  over.\n\n  `var source = cursor.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/source`"}, :name idb.IDBCursor/set-source!, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `idb.IDBObjectStore` or `idb.IDBIndex` that the cursor is\n  over.\n\n  `var source = cursor.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/source`"}, key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 100, :column 7, :end-line 100, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  A value of any type.\n\n  `var key = cursor.key;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/key`"}, :name idb.IDBCursor/key, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A value of any type.\n\n  `var key = cursor.key;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/key`"}, continue {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 18, :column 7, :end-line 18, :end-column 15, :arglists (quote ([this key])), :doc "Method.\n\n  The continue() method of the `idb.IDBCursor` interface advances\n  cursor to the next position along its direction, to the item\n  key matches the optional key parameter. If no key is specified,\n  cursor advances to the immediate next position, based on its\n\n  `cursor.continue(key);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continue`"}, :name idb.IDBCursor/continue, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 15, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc "Method.\n\n  The continue() method of the `idb.IDBCursor` interface advances\n  cursor to the next position along its direction, to the item\n  key matches the optional key parameter. If no key is specified,\n  cursor advances to the immediate next position, based on its\n\n  `cursor.continue(key);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continue`"}, set-primary-key! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 133, :column 7, :end-line 133, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  A value of any data type.\n\n  `var value = cursor.primaryKey;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/primaryKey`"}, :name idb.IDBCursor/set-primary-key!, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 133, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A value of any data type.\n\n  `var value = cursor.primaryKey;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/primaryKey`"}, continue-primary-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 32, :column 7, :end-line 32, :end-column 27, :arglists (quote ([this key primary-key])), :doc "Method.\n\n  The continuePrimaryKey() method of the `idb.IDBCursor` interface\n  the cursor to the to the item whose key matches the key parameter\n  well as whose primary key matches the primary key parameter.\n\n  `cursor.continuePrimaryKey(key, primaryKey);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continuePrimaryKey`"}, :name idb.IDBCursor/continue-primary-key, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 27, :method-params ([this key primary-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this key primary-key])), :doc "Method.\n\n  The continuePrimaryKey() method of the `idb.IDBCursor` interface\n  the cursor to the to the item whose key matches the key parameter\n  well as whose primary key matches the primary key parameter.\n\n  `cursor.continuePrimaryKey(key, primaryKey);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continuePrimaryKey`"}, update {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 59, :column 7, :end-line 59, :end-column 13, :arglists (quote ([this value])), :doc "Method.\n\n  The update() method of the `idb.IDBCursor` interface returns\n  `idb.IDBRequest` object, and, in a separate thread, updates the\n  at the current position of the cursor in the object store. If\n  cursor points to a record that has just been deleted, a new record\n  created.\n\n  `var anIDBRequest = myIDBCursor.update(value);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/update`"}, :name idb.IDBCursor/update, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 13, :method-params ([this value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this value])), :doc "Method.\n\n  The update() method of the `idb.IDBCursor` interface returns\n  `idb.IDBRequest` object, and, in a separate thread, updates the\n  at the current position of the cursor in the object store. If\n  cursor points to a record that has just been deleted, a new record\n  created.\n\n  `var anIDBRequest = myIDBCursor.update(value);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/update`"}, delete {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 45, :column 7, :end-line 45, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The delete() method of the `idb.IDBCursor` interface returns\n  `idb.IDBRequest` object, and, in a separate thread, deletes the\n  at the cursor's position, without changing the cursor's position.\n  the record is deleted, the cursor's value is set to null.\n\n  `myIDBCursor.delete();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete`"}, :name idb.IDBCursor/delete, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The delete() method of the `idb.IDBCursor` interface returns\n  `idb.IDBRequest` object, and, in a separate thread, deletes the\n  at the cursor's position, without changing the cursor's position.\n  the record is deleted, the cursor's value is set to null.\n\n  `myIDBCursor.delete();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/delete`"}, source {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 168, :column 7, :end-line 168, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The `idb.IDBObjectStore` or `idb.IDBIndex` that the cursor is\n  over.\n\n  `var source = cursor.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/source`"}, :name idb.IDBCursor/source, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `idb.IDBObjectStore` or `idb.IDBIndex` that the cursor is\n  over.\n\n  `var source = cursor.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/source`"}, set-direction! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 87, :column 7, :end-line 87, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  A string (defined by the IDBCursorDirection enum) indicating\n  direction in which the cursor is traversing the data. Possible\n  are:\n\n  `var direction = cursor.direction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/direction`"}, :name idb.IDBCursor/set-direction!, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A string (defined by the IDBCursorDirection enum) indicating\n  direction in which the cursor is traversing the data. Possible\n  are:\n\n  `var direction = cursor.direction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/direction`"}, set-key! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/idb/IDBCursor.cljs", :line 111, :column 7, :end-line 111, :end-column 15, :arglists (quote ([this val])), :doc "Property.\n\n  A value of any type.\n\n  `var key = cursor.key;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/key`"}, :name idb.IDBCursor/set-key!, :variadic false, :file "src/idb/IDBCursor.cljs", :end-column 15, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A value of any type.\n\n  `var key = cursor.key;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/key`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The IDBCursor interface of the IndexedDB API represents a cursor\n  traversing or iterating over multiple records in a database."}
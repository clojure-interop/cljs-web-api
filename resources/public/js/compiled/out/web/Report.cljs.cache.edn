{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{type}, :name web.Report, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {body {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Report.cljs", :line 5, :column 7, :end-line 5, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The body read-only property of the `web.Report` interface returns\n  body of the report, which is a ReportBody object containing the\n  report information.\n\n  `let reportBody = reportInstance.body`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/body`"}, :name web.Report/body, :variadic false, :file "src/web/Report.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The body read-only property of the `web.Report` interface returns\n  body of the report, which is a ReportBody object containing the\n  report information.\n\n  `let reportBody = reportInstance.body`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/body`"}, set-body! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Report.cljs", :line 18, :column 7, :end-line 18, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The body read-only property of the `web.Report` interface returns\n  body of the report, which is a ReportBody object containing the\n  report information.\n\n  `let reportBody = reportInstance.body`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/body`"}, :name web.Report/set-body!, :variadic false, :file "src/web/Report.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The body read-only property of the `web.Report` interface returns\n  body of the report, which is a ReportBody object containing the\n  report information.\n\n  `let reportBody = reportInstance.body`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/body`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Report.cljs", :line 31, :column 7, :end-line 31, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The type read-only property of the `web.Report` interface returns\n  type of report generated, e.g. deprecation or intervention.\n\n  `let reportType = reportInstance.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/type`"}, :name web.Report/type, :variadic false, :file "src/web/Report.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The type read-only property of the `web.Report` interface returns\n  type of report generated, e.g. deprecation or intervention.\n\n  `let reportType = reportInstance.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/type`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Report.cljs", :line 43, :column 7, :end-line 43, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The type read-only property of the `web.Report` interface returns\n  type of report generated, e.g. deprecation or intervention.\n\n  `let reportType = reportInstance.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/type`"}, :name web.Report/set-type!, :variadic false, :file "src/web/Report.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The type read-only property of the `web.Report` interface returns\n  type of report generated, e.g. deprecation or intervention.\n\n  `let reportType = reportInstance.type`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/type`"}, url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Report.cljs", :line 55, :column 7, :end-line 55, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The url read-only property of the `web.Report` interface returns\n  URL of the document that generated the report.\n\n  `let reportURL = reportInstance.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/url`"}, :name web.Report/url, :variadic false, :file "src/web/Report.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The url read-only property of the `web.Report` interface returns\n  URL of the document that generated the report.\n\n  `let reportURL = reportInstance.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/url`"}, set-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Report.cljs", :line 67, :column 7, :end-line 67, :end-column 15, :arglists (quote ([this val])), :doc "Property.\n\n  The url read-only property of the `web.Report` interface returns\n  URL of the document that generated the report.\n\n  `let reportURL = reportInstance.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/url`"}, :name web.Report/set-url!, :variadic false, :file "src/web/Report.cljs", :end-column 15, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The url read-only property of the `web.Report` interface returns\n  URL of the document that generated the report.\n\n  `let reportURL = reportInstance.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Report/url`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Report interface of the Reporting API represents a single"}
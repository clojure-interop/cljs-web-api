{:rename-macros {}, :renames {}, :externs {GainNode {}}, :use-macros {}, :excludes #{}, :name web.GainNode, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.GainNode/constructor, :file "src/web/GainNode.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GainNode.cljs", :line 9, :column 6, :end-line 9, :end-column 17}, :doc "Constructor.\n\n  The GainNode() constructor of the Web Audio API creates a new `web.GainNode` object which an `audio.AudioNode` that represents a change in volume.\n\n  Inherits parameters from the `audio.AudioNodeOptions` dictionary.\n\n\n  \\tcontext\n  \\tA reference to an `audio.AudioContext`.\n  \\toptions Optional\n  \\tOptions are as follows:\n\n  \\t\\tgain: The amount of gain to apply. This parameter is a-rate and it's nominal range is (-∞,+∞). The default is 1.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GainNode/GainNode`", :tag js}, gain {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GainNode.cljs", :line 27, :column 7, :end-line 27, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var gainNode = audioCtx.createGain();\n  gainNode.gain.value = 0.5;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GainNode/gain`"}, :name web.GainNode/gain, :variadic false, :file "src/web/GainNode.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var gainNode = audioCtx.createGain();\n  gainNode.gain.value = 0.5;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GainNode/gain`"}, set-gain! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GainNode.cljs", :line 40, :column 7, :end-line 40, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var gainNode = audioCtx.createGain();\n  gainNode.gain.value = 0.5;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GainNode/gain`"}, :name web.GainNode/set-gain!, :variadic false, :file "src/web/GainNode.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var gainNode = audioCtx.createGain();\n  gainNode.gain.value = 0.5;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GainNode/gain`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The GainNode interface represents a change in volume. It is an\n  audio-processing module that causes a given gain to be applied\n  the input data before its propagation to the output. A GainNode\n  has exactly one input and one output, both with the same number\n  channels."}
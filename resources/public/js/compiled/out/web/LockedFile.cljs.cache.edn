{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{flush}, :name web.LockedFile, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {oncomplete {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 232, :column 7, :end-line 232, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive complete events. These\n  occur each time a read or write operation is successful.\n\n  `instanceOfLockedFile.oncomplete = funcRef;\n\n  Where funcRef is a function to be called when the complete event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/oncomplete`"}, :name web.LockedFile/oncomplete, :variadic false, :file "src/web/LockedFile.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive complete events. These\n  occur each time a read or write operation is successful.\n\n  `instanceOfLockedFile.oncomplete = funcRef;\n\n  Where funcRef is a function to be called when the complete event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/oncomplete`"}, read-as-array-buffer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 54, :column 7, :end-line 54, :end-column 27, :arglists (quote ([this size])), :doc "Method.\n\n  The readAsArrayBuffer method is used to read the content of the\n  object and provide the result of that reading as an `web.ArrayBuffer`.\n  many ways, it performs like the `file.FileReader.readAsArrayBuffer()`\n\n  `var request = instanceOfLockedFile.readAsArrayBuffer(size);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/readAsArrayBuffer`"}, :name web.LockedFile/read-as-array-buffer, :variadic false, :file "src/web/LockedFile.cljs", :end-column 27, :method-params ([this size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this size])), :doc "Method.\n\n  The readAsArrayBuffer method is used to read the content of the\n  object and provide the result of that reading as an `web.ArrayBuffer`.\n  many ways, it performs like the `file.FileReader.readAsArrayBuffer()`\n\n  `var request = instanceOfLockedFile.readAsArrayBuffer(size);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/readAsArrayBuffer`"}, location {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 156, :column 7, :end-line 156, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The location property is a zero-based index representing the\n  of the read/write pointer within the file. Its value indicates\n  which bytes within the file any write or read operation will\n\n  `var location = instanceOfLockedFile.location`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/location`"}, :name web.LockedFile/location, :variadic false, :file "src/web/LockedFile.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The location property is a zero-based index representing the\n  of the read/write pointer within the file. Its value indicates\n  which bytes within the file any write or read operation will\n\n  `var location = instanceOfLockedFile.location`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/location`"}, read-as-text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 67, :column 7, :end-line 67, :end-column 19, :arglists (quote ([this & args])), :doc "Method.\n\n  The readAsText method is used to read the content of the `web.LockedFile`\n  and provide the result of that reading as a string. In many ways,\n  performs like the `file.FileReader.readAsText()` method.\n\n  `var request = instanceOfLockedFile.readAsText(size[, encoding]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/readAsText`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.LockedFile/read-as-text, :variadic true, :file "src/web/LockedFile.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The readAsText method is used to read the content of the `web.LockedFile`\n  and provide the result of that reading as a string. In many ways,\n  performs like the `file.FileReader.readAsText()` method.\n\n  `var request = instanceOfLockedFile.readAsText(size[, encoding]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/readAsText`"}, set-oncomplete! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 246, :column 7, :end-line 246, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive complete events. These\n  occur each time a read or write operation is successful.\n\n  `instanceOfLockedFile.oncomplete = funcRef;\n\n  Where funcRef is a function to be called when the complete event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/oncomplete`"}, :name web.LockedFile/set-oncomplete!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive complete events. These\n  occur each time a read or write operation is successful.\n\n  `instanceOfLockedFile.oncomplete = funcRef;\n\n  Where funcRef is a function to be called when the complete event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/oncomplete`"}, get-metadata {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([this param])), :doc "Method.\n\n  The getMetadata method allows to retrieve some metadata about\n  locked file.\n\n  `var request = instanceOfLockedFile.getMetadata(param);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/getMetaData`"}, :name web.LockedFile/get-metadata, :variadic false, :file "src/web/LockedFile.cljs", :end-column 19, :method-params ([this param]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this param])), :doc "Method.\n\n  The getMetadata method allows to retrieve some metadata about\n  locked file.\n\n  `var request = instanceOfLockedFile.getMetadata(param);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/getMetaData`"}, flush {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 30, :column 7, :end-line 30, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The flush method is used to ensure any change made to a file\n  properly written on disk.\n\n  `var request = instanceOfLockedFile.flush();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/flush`"}, :name web.LockedFile/flush, :variadic false, :file "src/web/LockedFile.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The flush method is used to ensure any change made to a file\n  properly written on disk.\n\n  `var request = instanceOfLockedFile.flush();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/flush`"}, file-handle {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 132, :column 7, :end-line 132, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The fileHandle property gives access to the `file.FileHandle`\n  that produced the `web.LockedFile` object.\n\n  `var handler = instanceOfLockedFile.fileHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/fileHandle`"}, :name web.LockedFile/file-handle, :variadic false, :file "src/web/LockedFile.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The fileHandle property gives access to the `file.FileHandle`\n  that produced the `web.LockedFile` object.\n\n  `var handler = instanceOfLockedFile.fileHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/fileHandle`"}, set-onabort! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 218, :column 7, :end-line 218, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfLockedFile.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onabort`"}, :name web.LockedFile/set-onabort!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfLockedFile.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onabort`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 274, :column 7, :end-line 274, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfLockedFile.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onerror`"}, :name web.LockedFile/set-onerror!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 274, :end-line 274, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfLockedFile.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onerror`"}, truncate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 80, :column 7, :end-line 80, :end-column 15, :arglists (quote ([this start])), :doc "Method.\n\n  The truncate method is used to remove some data within the file.\n\n  `var request = instanceOfLockedFile.truncate(start);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/truncate`"}, :name web.LockedFile/truncate, :variadic false, :file "src/web/LockedFile.cljs", :end-column 15, :method-params ([this start]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this start])), :doc "Method.\n\n  The truncate method is used to remove some data within the file.\n\n  `var request = instanceOfLockedFile.truncate(start);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/truncate`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 260, :column 7, :end-line 260, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfLockedFile.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onerror`"}, :name web.LockedFile/onerror, :variadic false, :file "src/web/LockedFile.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive error events. These events\n  when something goes wrong.\n\n  `instanceOfLockedFile.onerror = funcRef;\n\n  Where funcRef is a function to be called when the error event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onerror`"}, append {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([this data])), :doc "Method.\n\n  The append method is used to write some data at the end of the\n\n  `var request = instanceOfLockedFile.append(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/append`"}, :name web.LockedFile/append, :variadic false, :file "src/web/LockedFile.cljs", :end-column 13, :method-params ([this data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this data])), :doc "Method.\n\n  The append method is used to write some data at the end of the\n\n  `var request = instanceOfLockedFile.append(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/append`"}, mode {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 182, :column 7, :end-line 182, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The mode property provides the read/write status of the `web.LockedFile`\n\n  `var mode = instanceOfLockedFile.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/mode`"}, :name web.LockedFile/mode, :variadic false, :file "src/web/LockedFile.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The mode property provides the read/write status of the `web.LockedFile`\n\n  `var mode = instanceOfLockedFile.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/mode`"}, abort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The abort method is used to release the lock on the `web.LockedFile`\n  making it inactive: its `web.active` property is set to false\n  all ongoing operations are canceled.\n\n  `var request = instanceOfLockedFile.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/abort`"}, :name web.LockedFile/abort, :variadic false, :file "src/web/LockedFile.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The abort method is used to release the lock on the `web.LockedFile`\n  making it inactive: its `web.active` property is set to false\n  all ongoing operations are canceled.\n\n  `var request = instanceOfLockedFile.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/abort`"}, set-active! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 117, :column 7, :end-line 117, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The active property allows to know if the `web.LockedFile` object\n  still usable (true) or not (false). If the object is inactive\n  it is impossible to perform any read or write operation with\n  Typically, a `web.LockedFile` object becomes inactive when the\n  method is called or if an error occurs.\n\n  `var state = instanceOfLockedFile.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/active`"}, :name web.LockedFile/set-active!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The active property allows to know if the `web.LockedFile` object\n  still usable (true) or not (false). If the object is inactive\n  it is impossible to perform any read or write operation with\n  Typically, a `web.LockedFile` object becomes inactive when the\n  method is called or if an error occurs.\n\n  `var state = instanceOfLockedFile.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/active`"}, write {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 91, :column 7, :end-line 91, :end-column 12, :arglists (quote ([this data])), :doc "Method.\n\n  The write method is used to write some data within the file.\n\n  `var request = instanceOfLockedFile.write(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/write`"}, :name web.LockedFile/write, :variadic false, :file "src/web/LockedFile.cljs", :end-column 12, :method-params ([this data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this data])), :doc "Method.\n\n  The write method is used to write some data within the file.\n\n  `var request = instanceOfLockedFile.write(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/write`"}, set-mode! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 193, :column 7, :end-line 193, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The mode property provides the read/write status of the `web.LockedFile`\n\n  `var mode = instanceOfLockedFile.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/mode`"}, :name web.LockedFile/set-mode!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The mode property provides the read/write status of the `web.LockedFile`\n\n  `var mode = instanceOfLockedFile.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/mode`"}, set-location! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 169, :column 7, :end-line 169, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The location property is a zero-based index representing the\n  of the read/write pointer within the file. Its value indicates\n  which bytes within the file any write or read operation will\n\n  `var location = instanceOfLockedFile.location`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/location`"}, :name web.LockedFile/set-location!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The location property is a zero-based index representing the\n  of the read/write pointer within the file. Its value indicates\n  which bytes within the file any write or read operation will\n\n  `var location = instanceOfLockedFile.location`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/location`"}, active {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 102, :column 7, :end-line 102, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The active property allows to know if the `web.LockedFile` object\n  still usable (true) or not (false). If the object is inactive\n  it is impossible to perform any read or write operation with\n  Typically, a `web.LockedFile` object becomes inactive when the\n  method is called or if an error occurs.\n\n  `var state = instanceOfLockedFile.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/active`"}, :name web.LockedFile/active, :variadic false, :file "src/web/LockedFile.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The active property allows to know if the `web.LockedFile` object\n  still usable (true) or not (false). If the object is inactive\n  it is impossible to perform any read or write operation with\n  Typically, a `web.LockedFile` object becomes inactive when the\n  method is called or if an error occurs.\n\n  `var state = instanceOfLockedFile.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/active`"}, onabort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 204, :column 7, :end-line 204, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfLockedFile.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onabort`"}, :name web.LockedFile/onabort, :variadic false, :file "src/web/LockedFile.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 204, :end-line 204, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Specifies an event listener to receive abort events. These events\n  when the locked file has been aborted with the `web.LockedFile.abort()`\n\n  `instanceOfLockedFile.onabort = funcRef;\n\n  Where funcRef is a function to be called when the abort event occurs.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/onabort`"}, set-file-handle! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockedFile.cljs", :line 144, :column 7, :end-line 144, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The fileHandle property gives access to the `file.FileHandle`\n  that produced the `web.LockedFile` object.\n\n  `var handler = instanceOfLockedFile.fileHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/fileHandle`"}, :name web.LockedFile/set-file-handle!, :variadic false, :file "src/web/LockedFile.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The fileHandle property gives access to the `file.FileHandle`\n  that produced the `web.LockedFile` object.\n\n  `var handler = instanceOfLockedFile.fileHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockedFile/fileHandle`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The LockedFile interface provides tools to deal with a given\n  with all the necessary locks."}
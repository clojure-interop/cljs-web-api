{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.USBDevice, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {select-alternate-interface {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 137, :column 7, :end-line 137, :end-column 33, :arglists (quote ([this inerface-number alternate-setting])), :doc "Method.\n\n  The selectAlternateInterface() method of the `web.USBDevice`\n  returns a `web.promise` that resolves when the specified alternative\n  is selected.\n\n  `var promise = USBDevice.selectAlternateInterface(inerfaceNumber, alternateSetting)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/selectAlternateInterface`"}, :name web.USBDevice/select-alternate-interface, :variadic false, :file "src/web/USBDevice.cljs", :end-column 33, :method-params ([this inerface-number alternate-setting]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this inerface-number alternate-setting])), :doc "Method.\n\n  The selectAlternateInterface() method of the `web.USBDevice`\n  returns a `web.promise` that resolves when the specified alternative\n  is selected.\n\n  `var promise = USBDevice.selectAlternateInterface(inerfaceNumber, alternateSetting)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/selectAlternateInterface`"}, device-protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 269, :column 7, :end-line 269, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The deviceProtocol read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceSubclass.\n\n  `var number = USBDevice.deviceProtocol`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceProtocol`"}, :name web.USBDevice/device-protocol, :variadic false, :file "src/web/USBDevice.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 269, :end-line 269, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deviceProtocol read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceSubclass.\n\n  `var number = USBDevice.deviceProtocol`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceProtocol`"}, set-device-version-major! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 337, :column 7, :end-line 337, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceVersionMajor read only property of the `web.USBDevice`\n  he major version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMajor`"}, :name web.USBDevice/set-device-version-major!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 337, :end-line 337, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceVersionMajor read only property of the `web.USBDevice`\n  he major version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMajor`"}, set-product-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 483, :column 7, :end-line 483, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The productName read only property of the `web.USBDevice` interface\n  manufacturer-defined name that identifies a USB device.\n\n  `var serialNumber = USBDevice.productName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productName`"}, :name web.USBDevice/set-product-name!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 483, :end-line 483, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The productName read only property of the `web.USBDevice` interface\n  manufacturer-defined name that identifies a USB device.\n\n  `var serialNumber = USBDevice.productName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productName`"}, control-transfer-out {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 60, :column 7, :end-line 60, :end-column 27, :arglists (quote ([this setup data])), :doc "Method.\n\n  The controlTransferOut() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBOutTransferResult`\n  a command or status operation has been transmitted from the USB\n\n  `var promise = USBDevice.controlTransferOut(setup, data)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/controlTransferOut`"}, :name web.USBDevice/control-transfer-out, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this setup data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this setup data])), :doc "Method.\n\n  The controlTransferOut() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBOutTransferResult`\n  a command or status operation has been transmitted from the USB\n\n  `var promise = USBDevice.controlTransferOut(setup, data)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/controlTransferOut`"}, set-device-subclass! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 311, :column 7, :end-line 311, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceSubclass read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceProtocol.\n\n  `var serialNumber = USBDevice.deviceSubclass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceSubclass`"}, :name web.USBDevice/set-device-subclass!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceSubclass read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceProtocol.\n\n  `var serialNumber = USBDevice.deviceSubclass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceSubclass`"}, product-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 447, :column 7, :end-line 447, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The productID read only property of the `web.USBDevice` interface\n  manufacturer-defined code that identifies a USB device.\n\n  `var serialNumber = USBDevice.productID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productID`"}, :name web.USBDevice/product-id, :variadic false, :file "src/web/USBDevice.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 447, :end-line 447, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The productID read only property of the `web.USBDevice` interface\n  manufacturer-defined code that identifies a USB device.\n\n  `var serialNumber = USBDevice.productID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productID`"}, set-product-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 459, :column 7, :end-line 459, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The productID read only property of the `web.USBDevice` interface\n  manufacturer-defined code that identifies a USB device.\n\n  `var serialNumber = USBDevice.productID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productID`"}, :name web.USBDevice/set-product-id!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 459, :end-line 459, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The productID read only property of the `web.USBDevice` interface\n  manufacturer-defined code that identifies a USB device.\n\n  `var serialNumber = USBDevice.productID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productID`"}, device-version-subminor {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 373, :column 7, :end-line 373, :end-column 30, :arglists (quote ([this])), :doc "Property.\n\n  The deviceVersionSubminor read only property of the `web.USBDevice`\n  the patch version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionSubminor`"}, :name web.USBDevice/device-version-subminor, :variadic false, :file "src/web/USBDevice.cljs", :end-column 30, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 373, :end-line 373, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deviceVersionSubminor read only property of the `web.USBDevice`\n  the patch version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionSubminor`"}, set-usb-version-subminor! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 589, :column 7, :end-line 589, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The usbVersionSubminor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionMinor.\n\n  `var serialNumber = USBDevice.usbVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionSubminor`"}, :name web.USBDevice/set-usb-version-subminor!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 589, :end-line 589, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The usbVersionSubminor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionMinor.\n\n  `var serialNumber = USBDevice.usbVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionSubminor`"}, vendor-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 603, :column 7, :end-line 603, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The vendorID read only property of the `web.USBDevice` interface\n  the official usg.org-assigned vendor ID.\n\n  `var serialNumber = USBDevice.vendorID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/vendorID`"}, :name web.USBDevice/vendor-id, :variadic false, :file "src/web/USBDevice.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 603, :end-line 603, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The vendorID read only property of the `web.USBDevice` interface\n  the official usg.org-assigned vendor ID.\n\n  `var serialNumber = USBDevice.vendorID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/vendorID`"}, set-device-class! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 255, :column 7, :end-line 255, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceClass read only property of the `web.USBDevice` interface\n  of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceSubclass and USBDevice.deviceprotocol.\n\n  `var number = USBDevice.deviceClass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/USBDevice.deviceClass`"}, :name web.USBDevice/set-device-class!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceClass read only property of the `web.USBDevice` interface\n  of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceSubclass and USBDevice.deviceprotocol.\n\n  `var number = USBDevice.deviceClass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/USBDevice.deviceClass`"}, open {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 99, :column 7, :end-line 99, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The open() method of the `web.USBDevice` interface returns a\n  that resolves when a device session has started.\n\n  `var promise = USBDevice.open()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/open`"}, :name web.USBDevice/open, :variadic false, :file "src/web/USBDevice.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The open() method of the `web.USBDevice` interface returns a\n  that resolves when a device session has started.\n\n  `var promise = USBDevice.open()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/open`"}, set-usb-version-minor! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 561, :column 7, :end-line 561, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The usbVersionMinor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMinor`"}, :name web.USBDevice/set-usb-version-minor!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 561, :end-line 561, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The usbVersionMinor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMinor`"}, serial-number {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 495, :column 7, :end-line 495, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The serialNumber read only property of the `web.USBDevice` interface\n  the manufacturer-defined serial number for the specific USB device.\n\n  `var serialNumber = USBDevice.serialNumber`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/serialNumber`"}, :name web.USBDevice/serial-number, :variadic false, :file "src/web/USBDevice.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 495, :end-line 495, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The serialNumber read only property of the `web.USBDevice` interface\n  the manufacturer-defined serial number for the specific USB device.\n\n  `var serialNumber = USBDevice.serialNumber`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/serialNumber`"}, claim-interface {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 6, :column 7, :end-line 6, :end-column 22, :arglists (quote ([this interface-number])), :doc "Method.\n\n  The claimInterface() method of the `web.USBDevice` interface\n  a `web.promise` that resolves when the requested interface is\n  for exclusive access.\n\n  `var promise = USBDevice.claimInterface(interfaceNumber)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/claimInterface`"}, :name web.USBDevice/claim-interface, :variadic false, :file "src/web/USBDevice.cljs", :end-column 22, :method-params ([this interface-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this interface-number])), :doc "Method.\n\n  The claimInterface() method of the `web.USBDevice` interface\n  a `web.promise` that resolves when the requested interface is\n  for exclusive access.\n\n  `var promise = USBDevice.claimInterface(interfaceNumber)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/claimInterface`"}, transfer-in {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 163, :column 7, :end-line 163, :end-column 18, :arglists (quote ([this endpoint-number length])), :doc "Method.\n\n  The transferIn() method of the `web.USBDevice` interface returns\n  `web.promise` that resolves with a `web.USBTransferInResult`\n  bulk or interrupt data is transmitted to the USB device.\n\n  `var promise = USBDevice.transferIn(endpointNumber, length)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/transferIn`"}, :name web.USBDevice/transfer-in, :variadic false, :file "src/web/USBDevice.cljs", :end-column 18, :method-params ([this endpoint-number length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this endpoint-number length])), :doc "Method.\n\n  The transferIn() method of the `web.USBDevice` interface returns\n  `web.promise` that resolves with a `web.USBTransferInResult`\n  bulk or interrupt data is transmitted to the USB device.\n\n  `var promise = USBDevice.transferIn(endpointNumber, length)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/transferIn`"}, reset {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 124, :column 7, :end-line 124, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The reset() method of the `web.USBDevice` interface eturns a\n  that resolves when the device is reset and all app operations\n  and their promises rejected.\n\n  `var promise = USBDevice.reset()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/reset`"}, :name web.USBDevice/reset, :variadic false, :file "src/web/USBDevice.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The reset() method of the `web.USBDevice` interface eturns a\n  that resolves when the device is reset and all app operations\n  and their promises rejected.\n\n  `var promise = USBDevice.reset()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/reset`"}, release-interface {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 111, :column 7, :end-line 111, :end-column 24, :arglists (quote ([this interface-number])), :doc "Method.\n\n  The releaseInterface() method of the `web.USBDevice` interface\n  a `web.promise` that resolves when a cliamed interface is released\n  exclusive access.\n\n  `var promise = USBDevice.releaseInterface(interfaceNumber)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/releaseInterface`"}, :name web.USBDevice/release-interface, :variadic false, :file "src/web/USBDevice.cljs", :end-column 24, :method-params ([this interface-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this interface-number])), :doc "Method.\n\n  The releaseInterface() method of the `web.USBDevice` interface\n  a `web.promise` that resolves when a cliamed interface is released\n  exclusive access.\n\n  `var promise = USBDevice.releaseInterface(interfaceNumber)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/releaseInterface`"}, clear-halt {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 19, :column 7, :end-line 19, :end-column 17, :arglists (quote ([this direction endpoint-number])), :doc "Method.\n\n  The clearHalt() method of the `web.USBDevice` interface returns\n  `web.promise` that resolves when a halt condition is cleared.\n  halt condition is when a data tranfer to or from the device has\n  status of 'stall', which requires the web page (the host system,\n  USB terminology) to clear that condition. See the for details.\n\n  `var promise = USBDevice.clearHalt(direction, endpointNumber)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/clearHalt`"}, :name web.USBDevice/clear-halt, :variadic false, :file "src/web/USBDevice.cljs", :end-column 17, :method-params ([this direction endpoint-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this direction endpoint-number])), :doc "Method.\n\n  The clearHalt() method of the `web.USBDevice` interface returns\n  `web.promise` that resolves when a halt condition is cleared.\n  halt condition is when a data tranfer to or from the device has\n  status of 'stall', which requires the web page (the host system,\n  USB terminology) to clear that condition. See the for details.\n\n  `var promise = USBDevice.clearHalt(direction, endpointNumber)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/clearHalt`"}, configurations {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 215, :column 7, :end-line 215, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The configurations read only property of the `web.USBDevice`\n  an `web.array` of device-specific interfaces for controlling\n  paired USB device.\n\n  `var USBConfiguration[] = USBDevice.configurations`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configurations`"}, :name web.USBDevice/configurations, :variadic false, :file "src/web/USBDevice.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The configurations read only property of the `web.USBDevice`\n  an `web.array` of device-specific interfaces for controlling\n  paired USB device.\n\n  `var USBConfiguration[] = USBDevice.configurations`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configurations`"}, transfer-out {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 176, :column 7, :end-line 176, :end-column 19, :arglists (quote ([this endpoint-number data])), :doc "Method.\n\n  The transferOut() method of the `web.USBDevice` interface returns\n  `web.promise` that resolves with a `web.USBTransferOutResult`\n  bulk or interrupt data is transmitted from the USB device.\n\n  `var promise = USBDevice.transferOut(endpointNumber, data)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/transferOut`"}, :name web.USBDevice/transfer-out, :variadic false, :file "src/web/USBDevice.cljs", :end-column 19, :method-params ([this endpoint-number data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this endpoint-number data])), :doc "Method.\n\n  The transferOut() method of the `web.USBDevice` interface returns\n  `web.promise` that resolves with a `web.USBTransferOutResult`\n  bulk or interrupt data is transmitted from the USB device.\n\n  `var promise = USBDevice.transferOut(endpointNumber, data)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/transferOut`"}, set-configuration! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 202, :column 7, :end-line 202, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The configuration read only property of the `web.USBDevice` interface\n  a `web.USBConfiguration` object for the currently selected interface\n  a paired USB device.\n\n  `var USBConfiguration = USBDevice.configuration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configuration`"}, :name web.USBDevice/set-configuration!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 202, :end-line 202, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The configuration read only property of the `web.USBDevice` interface\n  a `web.USBConfiguration` object for the currently selected interface\n  a paired USB device.\n\n  `var USBConfiguration = USBDevice.configuration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configuration`"}, select-configuration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 150, :column 7, :end-line 150, :end-column 27, :arglists (quote ([this configuration-value])), :doc "Method.\n\n  The selectConfiguration() method of the `web.USBDevice` interface\n  a `web.promise` that resolves when the specified configuration\n  selected.\n\n  `var promise = USBDevice.selectConfiguration(configurationValue)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/selectConfiguration`"}, :name web.USBDevice/select-configuration, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this configuration-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this configuration-value])), :doc "Method.\n\n  The selectConfiguration() method of the `web.USBDevice` interface\n  a `web.promise` that resolves when the specified configuration\n  selected.\n\n  `var promise = USBDevice.selectConfiguration(configurationValue)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/selectConfiguration`"}, opened {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 421, :column 7, :end-line 421, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The opened read only property of the `web.USBDevice` interface\n  whether a session has been started with a paired USB device.\n  device must be opened before it can conrolled by a web page.\n\n  `var serialNumber = USBDevice.opened`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/opened`"}, :name web.USBDevice/opened, :variadic false, :file "src/web/USBDevice.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 421, :end-line 421, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The opened read only property of the `web.USBDevice` interface\n  whether a session has been started with a paired USB device.\n  device must be opened before it can conrolled by a web page.\n\n  `var serialNumber = USBDevice.opened`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/opened`"}, usb-version-minor {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 547, :column 7, :end-line 547, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The usbVersionMinor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMinor`"}, :name web.USBDevice/usb-version-minor, :variadic false, :file "src/web/USBDevice.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 547, :end-line 547, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The usbVersionMinor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMinor`"}, set-device-protocol! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 283, :column 7, :end-line 283, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceProtocol read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceSubclass.\n\n  `var number = USBDevice.deviceProtocol`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceProtocol`"}, :name web.USBDevice/set-device-protocol!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceProtocol read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceSubclass.\n\n  `var number = USBDevice.deviceProtocol`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceProtocol`"}, set-vendor-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 615, :column 7, :end-line 615, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The vendorID read only property of the `web.USBDevice` interface\n  the official usg.org-assigned vendor ID.\n\n  `var serialNumber = USBDevice.vendorID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/vendorID`"}, :name web.USBDevice/set-vendor-id!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 615, :end-line 615, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The vendorID read only property of the `web.USBDevice` interface\n  the official usg.org-assigned vendor ID.\n\n  `var serialNumber = USBDevice.vendorID`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/vendorID`"}, product-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 471, :column 7, :end-line 471, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The productName read only property of the `web.USBDevice` interface\n  manufacturer-defined name that identifies a USB device.\n\n  `var serialNumber = USBDevice.productName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productName`"}, :name web.USBDevice/product-name, :variadic false, :file "src/web/USBDevice.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 471, :end-line 471, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The productName read only property of the `web.USBDevice` interface\n  manufacturer-defined name that identifies a USB device.\n\n  `var serialNumber = USBDevice.productName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productName`"}, close {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 34, :column 7, :end-line 34, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The close() method of the `web.USBDevice` interface returns a\n  that resolves when all open interfaces are released and the device\n  has ended.\n\n  `var promise = USBDevice.close()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/close`"}, :name web.USBDevice/close, :variadic false, :file "src/web/USBDevice.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The close() method of the `web.USBDevice` interface returns a\n  that resolves when all open interfaces are released and the device\n  has ended.\n\n  `var promise = USBDevice.close()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/close`"}, isochronous-transfer-out {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 86, :column 7, :end-line 86, :end-column 31, :arglists (quote ([this endpoint-number data packet-lengths])), :doc "Method.\n\n  The isochronousTransferOut() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBIsochronousOutTransferResult`\n  time sensitive information has been transmitted from the USB\n\n  `var promise = USBDevice.isochronousTransferOut(endpointNumber, data, packetLengths)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/isochronousTransferOut`"}, :name web.USBDevice/isochronous-transfer-out, :variadic false, :file "src/web/USBDevice.cljs", :end-column 31, :method-params ([this endpoint-number data packet-lengths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 4, :fn-var true, :arglists (quote ([this endpoint-number data packet-lengths])), :doc "Method.\n\n  The isochronousTransferOut() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBIsochronousOutTransferResult`\n  time sensitive information has been transmitted from the USB\n\n  `var promise = USBDevice.isochronousTransferOut(endpointNumber, data, packetLengths)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/isochronousTransferOut`"}, device-version-minor {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 349, :column 7, :end-line 349, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The deviceVersionMinor read only property of the `web.USBDevice`\n  the minor version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMinor`"}, :name web.USBDevice/device-version-minor, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 349, :end-line 349, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deviceVersionMinor read only property of the `web.USBDevice`\n  the minor version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMinor`"}, set-manufacturer-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 409, :column 7, :end-line 409, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The manufacturerName read only property of the `web.USBDevice`\n  the of the organization that manufactured the USB device.\n\n  `var serialNumber = USBDevice.manufacturerName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/manufacturerName`"}, :name web.USBDevice/set-manufacturer-name!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The manufacturerName read only property of the `web.USBDevice`\n  the of the organization that manufactured the USB device.\n\n  `var serialNumber = USBDevice.manufacturerName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/manufacturerName`"}, usb-version-subminor {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 575, :column 7, :end-line 575, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The usbVersionSubminor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionMinor.\n\n  `var serialNumber = USBDevice.usbVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionSubminor`"}, :name web.USBDevice/usb-version-subminor, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 575, :end-line 575, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The usbVersionSubminor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMajor\n  USBDevice.usbVersionMinor.\n\n  `var serialNumber = USBDevice.usbVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionSubminor`"}, set-configurations! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 228, :column 7, :end-line 228, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The configurations read only property of the `web.USBDevice`\n  an `web.array` of device-specific interfaces for controlling\n  paired USB device.\n\n  `var USBConfiguration[] = USBDevice.configurations`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configurations`"}, :name web.USBDevice/set-configurations!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The configurations read only property of the `web.USBDevice`\n  an `web.array` of device-specific interfaces for controlling\n  paired USB device.\n\n  `var USBConfiguration[] = USBDevice.configurations`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configurations`"}, set-device-version-minor! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 361, :column 7, :end-line 361, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceVersionMinor read only property of the `web.USBDevice`\n  the minor version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMinor`"}, :name web.USBDevice/set-device-version-minor!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceVersionMinor read only property of the `web.USBDevice`\n  the minor version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMinor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMinor`"}, isochronous-transfer-in {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 73, :column 7, :end-line 73, :end-column 30, :arglists (quote ([this endpoint-number packet-lengths])), :doc "Method.\n\n  The isochronousTransferIn() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBIsochronousInTransferResult`\n  time sensitive information has been transmitted to the USB device.\n\n  `var promise = USBDevice.isochronousTransferIn(endpointNumber, packetLengths)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/isochronousTransferIn`"}, :name web.USBDevice/isochronous-transfer-in, :variadic false, :file "src/web/USBDevice.cljs", :end-column 30, :method-params ([this endpoint-number packet-lengths]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this endpoint-number packet-lengths])), :doc "Method.\n\n  The isochronousTransferIn() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBIsochronousInTransferResult`\n  time sensitive information has been transmitted to the USB device.\n\n  `var promise = USBDevice.isochronousTransferIn(endpointNumber, packetLengths)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/isochronousTransferIn`"}, device-class {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 241, :column 7, :end-line 241, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The deviceClass read only property of the `web.USBDevice` interface\n  of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceSubclass and USBDevice.deviceprotocol.\n\n  `var number = USBDevice.deviceClass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/USBDevice.deviceClass`"}, :name web.USBDevice/device-class, :variadic false, :file "src/web/USBDevice.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 241, :end-line 241, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deviceClass read only property of the `web.USBDevice` interface\n  of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceSubclass and USBDevice.deviceprotocol.\n\n  `var number = USBDevice.deviceClass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/USBDevice.deviceClass`"}, device-subclass {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 297, :column 7, :end-line 297, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The deviceSubclass read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceProtocol.\n\n  `var serialNumber = USBDevice.deviceSubclass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceSubclass`"}, :name web.USBDevice/device-subclass, :variadic false, :file "src/web/USBDevice.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deviceSubclass read only property of the `web.USBDevice`\n  one of three properties that identify USB devices for the purpose\n  loading a USB driver that will work with that device. The other\n  properties are USBDevice.deviceClass and USBDevice.deviceProtocol.\n\n  `var serialNumber = USBDevice.deviceSubclass`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceSubclass`"}, control-transfer-in {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 47, :column 7, :end-line 47, :end-column 26, :arglists (quote ([this setup length])), :doc "Method.\n\n  The controlTransferIn() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBInTransferResult`\n  a command or status operation has been transmitted to the USB\n\n  `var promise = USBDevice.controlTransferIn(setup, length)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/controlTransferIn`"}, :name web.USBDevice/control-transfer-in, :variadic false, :file "src/web/USBDevice.cljs", :end-column 26, :method-params ([this setup length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this setup length])), :doc "Method.\n\n  The controlTransferIn() method of the `web.USBDevice` interface\n  a `web.promise` that resolves with a `web.USBInTransferResult`\n  a command or status operation has been transmitted to the USB\n\n  `var promise = USBDevice.controlTransferIn(setup, length)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/controlTransferIn`"}, set-opened! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 434, :column 7, :end-line 434, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The opened read only property of the `web.USBDevice` interface\n  whether a session has been started with a paired USB device.\n  device must be opened before it can conrolled by a web page.\n\n  `var serialNumber = USBDevice.opened`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/opened`"}, :name web.USBDevice/set-opened!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 434, :end-line 434, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The opened read only property of the `web.USBDevice` interface\n  whether a session has been started with a paired USB device.\n  device must be opened before it can conrolled by a web page.\n\n  `var serialNumber = USBDevice.opened`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/opened`"}, device-version-major {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 325, :column 7, :end-line 325, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The deviceVersionMajor read only property of the `web.USBDevice`\n  he major version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMajor`"}, :name web.USBDevice/device-version-major, :variadic false, :file "src/web/USBDevice.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 325, :end-line 325, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deviceVersionMajor read only property of the `web.USBDevice`\n  he major version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMajor`"}, set-device-version-subminor! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 385, :column 7, :end-line 385, :end-column 35, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceVersionSubminor read only property of the `web.USBDevice`\n  the patch version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionSubminor`"}, :name web.USBDevice/set-device-version-subminor!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 35, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deviceVersionSubminor read only property of the `web.USBDevice`\n  the patch version number of the device in a semantic versioning\n\n  `var serialNumber = USBDevice.deviceVersionSubminor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionSubminor`"}, set-usb-version-major! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 533, :column 7, :end-line 533, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The usbVersionMajor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMinor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMajor`"}, :name web.USBDevice/set-usb-version-major!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The usbVersionMajor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMinor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMajor`"}, manufacturer-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 397, :column 7, :end-line 397, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The manufacturerName read only property of the `web.USBDevice`\n  the of the organization that manufactured the USB device.\n\n  `var serialNumber = USBDevice.manufacturerName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/manufacturerName`"}, :name web.USBDevice/manufacturer-name, :variadic false, :file "src/web/USBDevice.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 397, :end-line 397, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The manufacturerName read only property of the `web.USBDevice`\n  the of the organization that manufactured the USB device.\n\n  `var serialNumber = USBDevice.manufacturerName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/manufacturerName`"}, usb-version-major {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 519, :column 7, :end-line 519, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The usbVersionMajor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMinor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMajor`"}, :name web.USBDevice/usb-version-major, :variadic false, :file "src/web/USBDevice.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 519, :end-line 519, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The usbVersionMajor read only property of the `web.USBDevice`\n  is one of three properties that declare the USB protocol version\n  by the device. The other two properties are USBDevice.usbVersionMinor\n  USBDevice.usbVersionSubminor.\n\n  `var serialNumber = USBDevice.usbVersionMajor`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMajor`"}, configuration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 189, :column 7, :end-line 189, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The configuration read only property of the `web.USBDevice` interface\n  a `web.USBConfiguration` object for the currently selected interface\n  a paired USB device.\n\n  `var USBConfiguration = USBDevice.configuration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configuration`"}, :name web.USBDevice/configuration, :variadic false, :file "src/web/USBDevice.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The configuration read only property of the `web.USBDevice` interface\n  a `web.USBConfiguration` object for the currently selected interface\n  a paired USB device.\n\n  `var USBConfiguration = USBDevice.configuration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configuration`"}, set-serial-number! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USBDevice.cljs", :line 507, :column 7, :end-line 507, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The serialNumber read only property of the `web.USBDevice` interface\n  the manufacturer-defined serial number for the specific USB device.\n\n  `var serialNumber = USBDevice.serialNumber`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/serialNumber`"}, :name web.USBDevice/set-serial-number!, :variadic false, :file "src/web/USBDevice.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 507, :end-line 507, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The serialNumber read only property of the `web.USBDevice` interface\n  the manufacturer-defined serial number for the specific USB device.\n\n  `var serialNumber = USBDevice.serialNumber`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/serialNumber`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The USBDevice interface of the the WebUSB API provides access\n  metadata about a paired USB device and methods for controlling"}
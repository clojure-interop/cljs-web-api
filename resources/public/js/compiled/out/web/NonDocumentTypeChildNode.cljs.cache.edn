{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.NonDocumentTypeChildNode, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {next-element-sibling {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NonDocumentTypeChildNode.cljs", :line 7, :column 7, :end-line 7, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The NonDocumentTypeChildNode.nextElementSibling read-only property\n  the element immediately following the specified one in its parent's\n  list, or null if the specified element is the last one in the\n\n  `var nextNode = elementNodeReference.nextElementSibling;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling`"}, :name web.NonDocumentTypeChildNode/next-element-sibling, :variadic false, :file "src/web/NonDocumentTypeChildNode.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The NonDocumentTypeChildNode.nextElementSibling read-only property\n  the element immediately following the specified one in its parent's\n  list, or null if the specified element is the last one in the\n\n  `var nextNode = elementNodeReference.nextElementSibling;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling`"}, set-next-element-sibling! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NonDocumentTypeChildNode.cljs", :line 20, :column 7, :end-line 20, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The NonDocumentTypeChildNode.nextElementSibling read-only property\n  the element immediately following the specified one in its parent's\n  list, or null if the specified element is the last one in the\n\n  `var nextNode = elementNodeReference.nextElementSibling;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling`"}, :name web.NonDocumentTypeChildNode/set-next-element-sibling!, :variadic false, :file "src/web/NonDocumentTypeChildNode.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The NonDocumentTypeChildNode.nextElementSibling read-only property\n  the element immediately following the specified one in its parent's\n  list, or null if the specified element is the last one in the\n\n  `var nextNode = elementNodeReference.nextElementSibling;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling`"}, previous-element-sibling {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NonDocumentTypeChildNode.cljs", :line 33, :column 7, :end-line 33, :end-column 31, :arglists (quote ([this])), :doc "Property.\n\n  The NonDocumentTypeChildNode.previousElementSibling read-only\n  returns the `web.Element` immediately prior to the specified\n  in its parent's children list, or null if the specified element\n  the first one in the list.\n\n  `prevNode = elementNodeReference.previousElementSibling;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling`"}, :name web.NonDocumentTypeChildNode/previous-element-sibling, :variadic false, :file "src/web/NonDocumentTypeChildNode.cljs", :end-column 31, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The NonDocumentTypeChildNode.previousElementSibling read-only\n  returns the `web.Element` immediately prior to the specified\n  in its parent's children list, or null if the specified element\n  the first one in the list.\n\n  `prevNode = elementNodeReference.previousElementSibling;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The NonDocumentTypeChildNode interface contains methods that\n  particular to `web.Node` objects that can have a parent, but\n  suitable for `web.DocumentType`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.CanvasCaptureMediaStreamTrack, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {request-frame {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/CanvasCaptureMediaStreamTrack.cljs", :line 7, :column 7, :end-line 7, :end-column 20, :arglists (quote ([this])), :doc "Method.\n\n  The `web.CanvasCaptureMediaStreamTrack` method requestFrame()\n  that a frame be captured from the canvas and sent to the stream.\n\n  `stream.requestFrame();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack/requestFrame`"}, :name web.CanvasCaptureMediaStreamTrack/request-frame, :variadic false, :file "src/web/CanvasCaptureMediaStreamTrack.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The `web.CanvasCaptureMediaStreamTrack` method requestFrame()\n  that a frame be captured from the canvas and sent to the stream.\n\n  `stream.requestFrame();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack/requestFrame`"}, canvas {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/CanvasCaptureMediaStreamTrack.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The `web.CanvasCaptureMediaStreamTrack` canvas read-only property\n  the `html.HTMLCanvasElement` from which frames are being captured.\n\n  `var elt = stream.canvas;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack/canvas`"}, :name web.CanvasCaptureMediaStreamTrack/canvas, :variadic false, :file "src/web/CanvasCaptureMediaStreamTrack.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.CanvasCaptureMediaStreamTrack` canvas read-only property\n  the `html.HTMLCanvasElement` from which frames are being captured.\n\n  `var elt = stream.canvas;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CanvasCaptureMediaStreamTrack/canvas`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The CanvasCaptureMediaStreamTrack interface represents the video\n  contained in a `media.MediaStream` being generated from a `web.<canvas>`\n  a call to `html.HTMLCanvasElement.captureStream()`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Permissions, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {query {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Permissions.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([this permission-descriptor])), :doc "Method.\n\n  The Permissions.query() method of the `web.Permissions` interface\n  the state of a user permission on the global scope.\n\n  `navigator.permissions.query(PermissionDescriptor).then(function(permissionStatus) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query`"}, :name web.Permissions/query, :variadic false, :file "src/web/Permissions.cljs", :end-column 12, :method-params ([this permission-descriptor]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this permission-descriptor])), :doc "Method.\n\n  The Permissions.query() method of the `web.Permissions` interface\n  the state of a user permission on the global scope.\n\n  `navigator.permissions.query(PermissionDescriptor).then(function(permissionStatus) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query`"}, revoke {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Permissions.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([this & args])), :doc "Method.\n\n  The Permissions.revoke() method of the `web.Permissions` interface\n  a currently set permission back to its default state, which is\n  prompt.\n\n  `This method is called on the global `web.Permissions` object `web.navigator.permissions`.\n\n\n\n  var revokePromise = navigator.permissions.revoke(descriptor);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Permissions/revoke`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.Permissions/revoke, :variadic true, :file "src/web/Permissions.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The Permissions.revoke() method of the `web.Permissions` interface\n  a currently set permission back to its default state, which is\n  prompt.\n\n  `This method is called on the global `web.Permissions` object `web.navigator.permissions`.\n\n\n\n  var revokePromise = navigator.permissions.revoke(descriptor);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Permissions/revoke`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Permissions interface of the Permissions API provides the\n  Permission API functionality, such as methods for querying and\n  permissions"}
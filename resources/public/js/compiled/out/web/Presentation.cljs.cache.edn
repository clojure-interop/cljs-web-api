{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Presentation, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {default-request {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Presentation.cljs", :line 6, :column 7, :end-line 6, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  In a controlling user agent, the defaultRequest attribute MUST\n  the default presentation request if any, otherwise null. In a\n  browsing context, it MUST return null.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Presentation/defaultRequest`"}, :name web.Presentation/default-request, :variadic false, :file "src/web/Presentation.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  In a controlling user agent, the defaultRequest attribute MUST\n  the default presentation request if any, otherwise null. In a\n  browsing context, it MUST return null.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Presentation/defaultRequest`"}, set-default-request! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Presentation.cljs", :line 17, :column 7, :end-line 17, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  In a controlling user agent, the defaultRequest attribute MUST\n  the default presentation request if any, otherwise null. In a\n  browsing context, it MUST return null.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Presentation/defaultRequest`"}, :name web.Presentation/set-default-request!, :variadic false, :file "src/web/Presentation.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  In a controlling user agent, the defaultRequest attribute MUST\n  the default presentation request if any, otherwise null. In a\n  browsing context, it MUST return null.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Presentation/defaultRequest`"}, receiver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Presentation.cljs", :line 28, :column 7, :end-line 28, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `web.Presentation` attribute receiver, which is\n  available in browser contexts which are receiving a presentation,\n  the `web.PresentationReceiver` object which can be used to access\n  communicate with the browser context which controls the presentation.\n  property is always null when accessed from outside a browser\n  which is receiving a presentation.\n\n  `receiver = Presentation.receiver;\n\n  receiver = navigator.presentation.receiver;\n\n  Since the `web.Presentation` interface is typically accessed through `web.navigation.presentation`, the second form of the syntax shown above is the more commonly used.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Presentation/receiver`"}, :name web.Presentation/receiver, :variadic false, :file "src/web/Presentation.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `web.Presentation` attribute receiver, which is\n  available in browser contexts which are receiving a presentation,\n  the `web.PresentationReceiver` object which can be used to access\n  communicate with the browser context which controls the presentation.\n  property is always null when accessed from outside a browser\n  which is receiving a presentation.\n\n  `receiver = Presentation.receiver;\n\n  receiver = navigator.presentation.receiver;\n\n  Since the `web.Presentation` interface is typically accessed through `web.navigation.presentation`, the second form of the syntax shown above is the more commonly used.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Presentation/receiver`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Presentation can be defined as two possible user agents in\n  context: Controlling user agent and Receiving user agent."}
{:rename-macros {}, :renames {}, :externs {PresentationConnectionAvailableEvent {}}, :use-macros {}, :excludes #{}, :name web.PresentationConnectionAvailableEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.PresentationConnectionAvailableEvent/constructor, :file "src/web/PresentationConnectionAvailableEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnectionAvailableEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The PresentationConnectionAvailableInit() constructor creates a new `web.PresentationConnectionAvailableEvent`.\n\n  typeArg\n  \\tA `dom.DOMSTring` giving the name of the event. For this event it should be connectionavailable.\n  \\teventInit\n  \\tA PresentationConnectionAvailableInit dictionary, which only contains a reference to a PresentationConnection object.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnectionAvailableEvent/PresentationConnectionAvailableEvent`", :tag js}, connection {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnectionAvailableEvent.cljs", :line 20, :column 7, :end-line 20, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  When an incoming connection is created, a receiving user agent\n  a trusted event, named connectionavailable, on a PresentationReceiver.\n  trusted event is fired at the presentation controller's monitor,\n  the PresentationConnectionAvailableEvent interface, with the\n  attribute set to the PresentationConnection object that was created.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnectionAvailableEvent/connection`"}, :name web.PresentationConnectionAvailableEvent/connection, :variadic false, :file "src/web/PresentationConnectionAvailableEvent.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  When an incoming connection is created, a receiving user agent\n  a trusted event, named connectionavailable, on a PresentationReceiver.\n  trusted event is fired at the presentation controller's monitor,\n  the PresentationConnectionAvailableEvent interface, with the\n  attribute set to the PresentationConnection object that was created.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnectionAvailableEvent/connection`"}, set-connection! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnectionAvailableEvent.cljs", :line 33, :column 7, :end-line 33, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  When an incoming connection is created, a receiving user agent\n  a trusted event, named connectionavailable, on a PresentationReceiver.\n  trusted event is fired at the presentation controller's monitor,\n  the PresentationConnectionAvailableEvent interface, with the\n  attribute set to the PresentationConnection object that was created.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnectionAvailableEvent/connection`"}, :name web.PresentationConnectionAvailableEvent/set-connection!, :variadic false, :file "src/web/PresentationConnectionAvailableEvent.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  When an incoming connection is created, a receiving user agent\n  a trusted event, named connectionavailable, on a PresentationReceiver.\n  trusted event is fired at the presentation controller's monitor,\n  the PresentationConnectionAvailableEvent interface, with the\n  attribute set to the PresentationConnection object that was created.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnectionAvailableEvent/connection`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PresentationConnectionAvailableEvent interface of the Presentation\n  is fired on a `web.PresentationRequest` when a connection associated\n  the object is created."}
{:rename-macros {}, :renames {}, :externs {ConstantSourceNode {}}, :use-macros {}, :excludes #{}, :name web.ConstantSourceNode, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.ConstantSourceNode/constructor, :file "src/web/ConstantSourceNode.cljs", :line 11, :column 1, :end-line 11, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ConstantSourceNode.cljs", :line 11, :column 6, :end-line 11, :end-column 17}, :doc "Constructor.\n\n  The ConstantSourceNode() constructor creates a new `web.ConstantSourceNode` object instance, representing an audio source which constantly outputs samples whose values are always the same.\n\n  context\n  An `audio.AudioContext` representing the audio context you want the node to be associated with.\n  options\n  A ConstantSourceOptions dictionary object defining the properties you want the ConstantSourceNode to have:\n\n  offset: A read-only `audio.AudioParam` specifying the constant value generated by the source. The default is 1.0. The normal range is -1.0 to 1.0, but the value can be anywhere in the range from -Infinity to +Infinity.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ConstantSourceNode/ConstantSourceNode`", :tag js}, start {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ConstantSourceNode.cljs", :line 26, :column 7, :end-line 26, :end-column 12, :arglists (quote ([this & args])), :doc "Method.\n\n  `web.undefined`\n\n  `AudioScheduledSourceNode.start([when [, offset [, duration]]]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/start`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ConstantSourceNode/start, :variadic true, :file "src/web/ConstantSourceNode.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  `web.undefined`\n\n  `AudioScheduledSourceNode.start([when [, offset [, duration]]]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/start`"}, stop {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ConstantSourceNode.cljs", :line 37, :column 7, :end-line 37, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  The stop() method on `audio.AudioScheduledSourceNode` schedules\n  sound to cease playback at the specified time. If no time is\n  then the sound stops playing immediately.\n\n  `AudioScheduledSourceNode.stop([when]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/stop`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ConstantSourceNode/stop, :variadic true, :file "src/web/ConstantSourceNode.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The stop() method on `audio.AudioScheduledSourceNode` schedules\n  sound to cease playback at the specified time. If no time is\n  then the sound stops playing immediately.\n\n  `AudioScheduledSourceNode.stop([when]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/stop`"}, offset {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ConstantSourceNode.cljs", :line 50, :column 7, :end-line 50, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only offset property of the `web.ConstantSourceNode`\n  returns a `audio.AudioParam` object indicating the numeric a-rate\n  which is always returned by the source when asked for the next\n\n  `let offsetParameter = ConstantAudioNode.offset;\n\n  let offset = ConstantSourceNode.offset.value;\n  ConstantSourceNode.offset.value = newValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ConstantSourceNode/offset`"}, :name web.ConstantSourceNode/offset, :variadic false, :file "src/web/ConstantSourceNode.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only offset property of the `web.ConstantSourceNode`\n  returns a `audio.AudioParam` object indicating the numeric a-rate\n  which is always returned by the source when asked for the next\n\n  `let offsetParameter = ConstantAudioNode.offset;\n\n  let offset = ConstantSourceNode.offset.value;\n  ConstantSourceNode.offset.value = newValue;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ConstantSourceNode/offset`"}, onended {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ConstantSourceNode.cljs", :line 66, :column 7, :end-line 66, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onended event handler for the AudioScheduledSourceNode interface\n  an `web.EventHandler` to be executed when the ended event occurs\n  the node. This event is sent to the node when the concrete interface\n  as `audio.AudioBufferSourceNode`, `web.OscillatorNode`, or `web.ConstantSourceNode`)\n  that it has stopped playing.\n\n  `AudioScheduledSourceNode.onended = EventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/onended`"}, :name web.ConstantSourceNode/onended, :variadic false, :file "src/web/ConstantSourceNode.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onended event handler for the AudioScheduledSourceNode interface\n  an `web.EventHandler` to be executed when the ended event occurs\n  the node. This event is sent to the node when the concrete interface\n  as `audio.AudioBufferSourceNode`, `web.OscillatorNode`, or `web.ConstantSourceNode`)\n  that it has stopped playing.\n\n  `AudioScheduledSourceNode.onended = EventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/onended`"}, set-onended! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ConstantSourceNode.cljs", :line 81, :column 7, :end-line 81, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onended event handler for the AudioScheduledSourceNode interface\n  an `web.EventHandler` to be executed when the ended event occurs\n  the node. This event is sent to the node when the concrete interface\n  as `audio.AudioBufferSourceNode`, `web.OscillatorNode`, or `web.ConstantSourceNode`)\n  that it has stopped playing.\n\n  `AudioScheduledSourceNode.onended = EventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/onended`"}, :name web.ConstantSourceNode/set-onended!, :variadic false, :file "src/web/ConstantSourceNode.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onended event handler for the AudioScheduledSourceNode interface\n  an `web.EventHandler` to be executed when the ended event occurs\n  the node. This event is sent to the node when the concrete interface\n  as `audio.AudioBufferSourceNode`, `web.OscillatorNode`, or `web.ConstantSourceNode`)\n  that it has stopped playing.\n\n  `AudioScheduledSourceNode.onended = EventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AudioScheduledSourceNode/onended`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ConstantSourceNode interface—part of the Web Audio API—represents\n  audio source (based upon `audio.AudioScheduledSourceNode`) whose\n  is single unchanging value. This makes it useful for cases in\n  you need a constant value coming in from an audio source. In\n  it can be used like a constructible `audio.AudioParam` by automating\n  value of its `web.offset` or by connecting another node to it;\n  Controlling multiple parameters with ConstantSourceNode."}
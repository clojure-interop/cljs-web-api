{:rename-macros {}, :renames {}, :externs {URLSearchParams {}}, :use-macros {}, :excludes #{set sort get keys}, :name web.URLSearchParams, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 117, :column 7, :end-line 117, :end-column 10, :arglists (quote ([this name value])), :doc "Method.\n\n  The set() method of the `web.URLSearchParams` interface sets\n  value associated with a given search parameter to the given value.\n  there were several matching values, this method deletes the others.\n  the search parameter doesn't exist, this method creates it.\n\n  `URLSearchParams.set(name, value)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/set`"}, :name web.URLSearchParams/set, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 10, :method-params ([this name value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this name value])), :doc "Method.\n\n  The set() method of the `web.URLSearchParams` interface sets\n  value associated with a given search parameter to the given value.\n  there were several matching values, this method deletes the others.\n  the search parameter doesn't exist, this method creates it.\n\n  `URLSearchParams.set(name, value)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/set`"}, sort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 131, :column 7, :end-line 131, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The URLSearchParams.sort() method sorts all key/value pairs contained\n  this object in place and returns undefined. The sort order is\n  to unicode code points of the keys. This method uses a stable\n  algorithm (i.e. the relative order between key/value pairs with\n  keys will be preserved).\n\n  `searchParams.sort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/sort`"}, :name web.URLSearchParams/sort, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The URLSearchParams.sort() method sorts all key/value pairs contained\n  this object in place and returns undefined. The sort order is\n  to unicode code points of the keys. This method uses a stable\n  algorithm (i.e. the relative order between key/value pairs with\n  keys will be preserved).\n\n  `searchParams.sort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/sort`"}, for-each {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 55, :column 7, :end-line 55, :end-column 15, :arglists (quote ([this callback])), :doc "Method.\n\n  The forEach() method of the `web.URLSearchParams` interface allows\n  through all values contained in this object via a callback function.\n\n  `searchParams.forEach(callback);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/forEach`"}, :name web.URLSearchParams/for-each, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 15, :method-params ([this callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this callback])), :doc "Method.\n\n  The forEach() method of the `web.URLSearchParams` interface allows\n  through all values contained in this object via a callback function.\n\n  `searchParams.forEach(callback);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/forEach`"}, get {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 67, :column 7, :end-line 67, :end-column 10, :arglists (quote ([this name])), :doc "Method.\n\n  The get() method of the `web.URLSearchParams` interface returns\n  first value associated to the given search parameter.\n\n  `URLSearchParams.get(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/get`"}, :name web.URLSearchParams/get, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 10, :method-params ([this name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this name])), :doc "Method.\n\n  The get() method of the `web.URLSearchParams` interface returns\n  first value associated to the given search parameter.\n\n  `URLSearchParams.get(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/get`"}, entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 42, :column 7, :end-line 42, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The entries() method of the `web.URLSearchParams` interface returns\n  `web.iterator` allowing iteration through all key/value pairs\n  in this object. The key and value of each pair are `web.USVString`\n\n  `searchParams.entries();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/entries`"}, :name web.URLSearchParams/entries, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The entries() method of the `web.URLSearchParams` interface returns\n  `web.iterator` allowing iteration through all key/value pairs\n  in this object. The key and value of each pair are `web.USVString`\n\n  `searchParams.entries();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/entries`"}, to-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 146, :column 7, :end-line 146, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The toString() method of the `web.URLSearchParams` interface\n  a query string suitable for use in a URL.\n\n  `URLSearchParams.toString()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/toString`"}, :name web.URLSearchParams/to-string, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 146, :end-line 146, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The toString() method of the `web.URLSearchParams` interface\n  a query string suitable for use in a URL.\n\n  `URLSearchParams.toString()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/toString`"}, append {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 17, :column 7, :end-line 17, :end-column 13, :arglists (quote ([this name value])), :doc "Method.\n\n  The append() method of the `web.URLSearchParams` interface appends\n  specified key/value pair as a new search parameter.\n\n  `URLSearchParams.append(name, value)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/append`"}, :name web.URLSearchParams/append, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 13, :method-params ([this name value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this name value])), :doc "Method.\n\n  The append() method of the `web.URLSearchParams` interface appends\n  specified key/value pair as a new search parameter.\n\n  `URLSearchParams.append(name, value)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/append`"}, delete {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 29, :column 7, :end-line 29, :end-column 13, :arglists (quote ([this name])), :doc "Method.\n\n  The delete() method of the `web.URLSearchParams` interface deletes\n  given search parameter and all its associated values, from the\n  of all search parameters.\n\n  `URLSearchParams.delete(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/delete`"}, :name web.URLSearchParams/delete, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 13, :method-params ([this name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this name])), :doc "Method.\n\n  The delete() method of the `web.URLSearchParams` interface deletes\n  given search parameter and all its associated values, from the\n  of all search parameters.\n\n  `URLSearchParams.delete(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/delete`"}, keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 104, :column 7, :end-line 104, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The keys() method of the `web.URLSearchParams` interface returns\n  `web.iterator` allowing iteration through all keys contained\n  this object. The keys are `web.USVString` objects.\n\n  `searchParams.keys();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/keys`"}, :name web.URLSearchParams/keys, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The keys() method of the `web.URLSearchParams` interface returns\n  `web.iterator` allowing iteration through all keys contained\n  this object. The keys are `web.USVString` objects.\n\n  `searchParams.keys();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/keys`"}, values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 158, :column 7, :end-line 158, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The values() method of the `web.URLsearchParams` interface returns\n  `web.iterator` allowing iteration through all values contained\n  this object. The values are `web.USVString` objects.\n\n  `searchParams.values();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/values`"}, :name web.URLSearchParams/values, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The values() method of the `web.URLsearchParams` interface returns\n  `web.iterator` allowing iteration through all values contained\n  this object. The values are `web.USVString` objects.\n\n  `searchParams.values();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/values`"}, get-all {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 79, :column 7, :end-line 79, :end-column 14, :arglists (quote ([this name])), :doc "Method.\n\n  The getAll() method of the `web.URLSearchParams` interface returns\n  the values associated with a given search parameter as an array.\n\n  `URLSearchParams.getAll(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/getAll`"}, :name web.URLSearchParams/get-all, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 14, :method-params ([this name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this name])), :doc "Method.\n\n  The getAll() method of the `web.URLSearchParams` interface returns\n  the values associated with a given search parameter as an array.\n\n  `URLSearchParams.getAll(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/getAll`"}, constructor {:name web.URLSearchParams/constructor, :file "src/web/URLSearchParams.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The URLSearchParams() constructor creates and returns a new `web.URLSearchParams` object. Leading '?' characters are ignored.\n\n  init Optional\n  A `web.USVString` instance, a `web.URLSearchParams` instance, a sequence of `web.USVString`s, or a record containing `web.USVString`s. Note that using a URLSearchParams instance is deprecated; soon browsers will just use a USVString for the init.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams`", :tag js}, has {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URLSearchParams.cljs", :line 91, :column 7, :end-line 91, :end-column 10, :arglists (quote ([this name])), :doc "Method.\n\n  The has() method of the `web.URLSearchParams` interface returns\n  `web.Boolean` that indicates whether a parameter with the specified\n  exists.\n\n  `var hasName = URLSearchParams.has(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/has`"}, :name web.URLSearchParams/has, :variadic false, :file "src/web/URLSearchParams.cljs", :end-column 10, :method-params ([this name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this name])), :doc "Method.\n\n  The has() method of the `web.URLSearchParams` interface returns\n  `web.Boolean` that indicates whether a parameter with the specified\n  exists.\n\n  `var hasName = URLSearchParams.has(name)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/has`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The URLSearchParams interface defines utility methods to work\n  the query string of a URL."}
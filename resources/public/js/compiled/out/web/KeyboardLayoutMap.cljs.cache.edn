{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{get keys}, :name web.KeyboardLayoutMap, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {for-each {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The forEach() method of the `web.KeyboardLayoutMap` interface\n  a provided function once for each element of the map.\n\n  `KeyboardLayoutMap.forEach(function callback(currentValue[, index[, array]]) {\n  //your iterator\n  }[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/forEach`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.KeyboardLayoutMap/for-each, :variadic true, :file "src/web/KeyboardLayoutMap.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The forEach() method of the `web.KeyboardLayoutMap` interface\n  a provided function once for each element of the map.\n\n  `KeyboardLayoutMap.forEach(function callback(currentValue[, index[, array]]) {\n  //your iterator\n  }[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/forEach`"}, get {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 21, :column 7, :end-line 21, :end-column 10, :arglists (quote ([this key])), :doc "Method.\n\n  The get() method of the `web.KeyboardLayoutMap` interface returns\n  element with the given key.\n\n  `var value = KeyboardLayoutMap.get(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/get`"}, :name web.KeyboardLayoutMap/get, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 10, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc "Method.\n\n  The get() method of the `web.KeyboardLayoutMap` interface returns\n  element with the given key.\n\n  `var value = KeyboardLayoutMap.get(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/get`"}, set-size! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 112, :column 7, :end-line 112, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The size read-only property of the `web.KeyboardLayoutMap` interface\n  the number of elements in the map.\n\n  `var size = KeyboardLayoutMap.size()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/size`"}, :name web.KeyboardLayoutMap/set-size!, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The size read-only property of the `web.KeyboardLayoutMap` interface\n  the number of elements in the map.\n\n  `var size = KeyboardLayoutMap.size()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/size`"}, entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 46, :column 7, :end-line 46, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The entries read-only property of the `web.KeyboardLayoutMap`\n  returns an array of a given object's own enumerable property\n  value] pairs, in the same order as that provided by a `web.for...in`\n  (the difference being that a for-in loop enumerates properties\n  the prototype chain as well).\n\n  `KeyboardLayoutMap.entries()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/entries`"}, :name web.KeyboardLayoutMap/entries, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The entries read-only property of the `web.KeyboardLayoutMap`\n  returns an array of a given object's own enumerable property\n  value] pairs, in the same order as that provided by a `web.for...in`\n  (the difference being that a for-in loop enumerates properties\n  the prototype chain as well).\n\n  `KeyboardLayoutMap.entries()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/entries`"}, size {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 100, :column 7, :end-line 100, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The size read-only property of the `web.KeyboardLayoutMap` interface\n  the number of elements in the map.\n\n  `var size = KeyboardLayoutMap.size()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/size`"}, :name web.KeyboardLayoutMap/size, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The size read-only property of the `web.KeyboardLayoutMap` interface\n  the number of elements in the map.\n\n  `var size = KeyboardLayoutMap.size()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/size`"}, keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 76, :column 7, :end-line 76, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The keys read-only property of the `web.KeyboardLayoutMap` interface\n  a new object that contains the keys for each index in the array.\n\n  `iterator = KeyboardLayoutMap.keys`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/keys`"}, :name web.KeyboardLayoutMap/keys, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The keys read-only property of the `web.KeyboardLayoutMap` interface\n  a new object that contains the keys for each index in the array.\n\n  `iterator = KeyboardLayoutMap.keys`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/keys`"}, set-entries! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 61, :column 7, :end-line 61, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The entries read-only property of the `web.KeyboardLayoutMap`\n  returns an array of a given object's own enumerable property\n  value] pairs, in the same order as that provided by a `web.for...in`\n  (the difference being that a for-in loop enumerates properties\n  the prototype chain as well).\n\n  `KeyboardLayoutMap.entries()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/entries`"}, :name web.KeyboardLayoutMap/set-entries!, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The entries read-only property of the `web.KeyboardLayoutMap`\n  returns an array of a given object's own enumerable property\n  value] pairs, in the same order as that provided by a `web.for...in`\n  (the difference being that a for-in loop enumerates properties\n  the prototype chain as well).\n\n  `KeyboardLayoutMap.entries()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/entries`"}, values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 124, :column 7, :end-line 124, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The values read-only property of the `web.KeyboardLayoutMap`\n  returns a new object that contains the values for each index\n  the .\n\n  `var iterator = KeyboardLayoutMap.values`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/values`"}, :name web.KeyboardLayoutMap/values, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The values read-only property of the `web.KeyboardLayoutMap`\n  returns a new object that contains the values for each index\n  the .\n\n  `var iterator = KeyboardLayoutMap.values`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/values`"}, set-keys! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 88, :column 7, :end-line 88, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The keys read-only property of the `web.KeyboardLayoutMap` interface\n  a new object that contains the keys for each index in the array.\n\n  `iterator = KeyboardLayoutMap.keys`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/keys`"}, :name web.KeyboardLayoutMap/set-keys!, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The keys read-only property of the `web.KeyboardLayoutMap` interface\n  a new object that contains the keys for each index in the array.\n\n  `iterator = KeyboardLayoutMap.keys`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/keys`"}, set-values! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 137, :column 7, :end-line 137, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The values read-only property of the `web.KeyboardLayoutMap`\n  returns a new object that contains the values for each index\n  the .\n\n  `var iterator = KeyboardLayoutMap.values`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/values`"}, :name web.KeyboardLayoutMap/set-values!, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The values read-only property of the `web.KeyboardLayoutMap`\n  returns a new object that contains the values for each index\n  the .\n\n  `var iterator = KeyboardLayoutMap.values`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/values`"}, has {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardLayoutMap.cljs", :line 33, :column 7, :end-line 33, :end-column 10, :arglists (quote ([this key])), :doc "Method.\n\n  The has() method of the `web.KeyboardLayoutMap` interface returns\n  boolean indicating whether the object has an element with the\n  key.\n\n  `var aBoolean = KeyboardLayoutMap.has(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/has`"}, :name web.KeyboardLayoutMap/has, :variadic false, :file "src/web/KeyboardLayoutMap.cljs", :end-column 10, :method-params ([this key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key])), :doc "Method.\n\n  The has() method of the `web.KeyboardLayoutMap` interface returns\n  boolean indicating whether the object has an element with the\n  key.\n\n  `var aBoolean = KeyboardLayoutMap.has(key)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardLayoutMap/has`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The KeyboardLayoutMap interface of the the Keyboard API is a\n  object with functions for retrieving the string associated with\n  physical keys."}
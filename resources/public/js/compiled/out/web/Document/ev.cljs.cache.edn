{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{drop}, :name web.Document.ev, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {drag {:name web.Document.ev/drag, :file "src/web/Document/ev.cljs", :line 87, :column 1, :end-line 87, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 87, :column 6, :end-line 87, :end-column 10}, :doc "Event.\n\n  The drag event is fired every few hundred milliseconds as an\n  or text selection is being dragged by the user.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/drag_event`", :tag string}, transitionstart {:name web.Document.ev/transitionstart, :file "src/web/Document/ev.cljs", :line 428, :column 1, :end-line 428, :end-column 21, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 428, :column 6, :end-line 428, :end-column 21}, :doc "Event.\n\n  The transitionstart event is fired when a CSS transition has\n  started, i.e., after any `web.transition-delay` has ended.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/transitionstart_event`", :tag string}, dragstart {:name web.Document.ev/dragstart, :file "src/web/Document/ev.cljs", :line 147, :column 1, :end-line 147, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 147, :column 6, :end-line 147, :end-column 15}, :doc "Event.\n\n  The dragstart event is fired when the user starts dragging an\n  or text selection.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/dragstart_event`", :tag string}, pointerdown {:name web.Document.ev/pointerdown, :file "src/web/Document/ev.cljs", :line 237, :column 1, :end-line 237, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 237, :column 6, :end-line 237, :end-column 17}, :doc "Event.\n\n  The pointerdown event is fired when a pointer becomes active.\n  mouse, it is fired when the device transitions from no buttons\n  to at least one button depressed. For touch, it is fired when\n  contact is made with the digitizer. For pen, it is fired when\n  stylus makes physical contact with the digitizer.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerdown_event`", :tag string}, wheel {:name web.Document.ev/wheel, :file "src/web/Document/ev.cljs", :line 438, :column 1, :end-line 438, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 438, :column 6, :end-line 438, :end-column 11}, :doc "Event.\n\n  The wheel event fires when the user rotates a wheel button on\n  pointing device (typically a mouse).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/wheel_event`", :tag string}, animationcancel {:name web.Document.ev/animationcancel, :file "src/web/Document/ev.cljs", :line 5, :column 1, :end-line 5, :end-column 21, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 5, :column 6, :end-line 5, :end-column 21}, :doc "Event.\n\n  The animationcancel event is fired when a CSS Animation unexpectedly\n  In other words, any time it stops running without sending an\n  event. This might happen when the `web.animation-name` is changed\n  that the animation is removed, or when the animating node is\n  using CSS. Therefore, either directly or because any of its containing\n  are hidden.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/animationcancel_event`", :tag string}, dragleave {:name web.Document.ev/dragleave, :file "src/web/Document/ev.cljs", :line 127, :column 1, :end-line 127, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 127, :column 6, :end-line 127, :end-column 15}, :doc "Event.\n\n  The dragleave event is fired when a dragged element or text selection\n  a valid drop target.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/dragleave_event`", :tag string}, animationstart {:name web.Document.ev/animationstart, :file "src/web/Document/ev.cljs", :line 42, :column 1, :end-line 42, :end-column 20, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 42, :column 6, :end-line 42, :end-column 20}, :doc "Event.\n\n  The animationstart event is fired when a CSS Animation has started.\n  there is an `web.animation-delay`, this event will fire once\n  delay period has expired. A negative delay will cause the event\n  fire with an elapsedTime equal to the absolute value of the delay\n  correspondingly, the animation will begin playing at that time\n  into the sequence).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/animationstart_event`", :tag string}, pointerleave {:name web.Document.ev/pointerleave, :file "src/web/Document/ev.cljs", :line 262, :column 1, :end-line 262, :end-column 18, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 262, :column 6, :end-line 262, :end-column 18}, :doc "Event.\n\n  The pointerleave event is fired when a pointing device is moved\n  of the hit test boundaries of an element. For pen devices, this\n  is fired when the stylus leaves the hover range detectable by\n  digitizer.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerleave_event`", :tag string}, pointerout {:name web.Document.ev/pointerout, :file "src/web/Document/ev.cljs", :line 303, :column 1, :end-line 303, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 303, :column 6, :end-line 303, :end-column 16}, :doc "Event.\n\n  The pointerout event is fired for several reasons including:\n  device is moved out of the hit test boundaries of an element;\n  the `web.pointerup` event for a device that does not support\n  (see `web.pointerup`); after firing the `web.pointercancel` event\n  `web.pointercancel`); when a pen stylus leaves the hover range\n  by the digitizer.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerout_event`", :tag string}, cut {:name web.Document.ev/cut, :file "src/web/Document/ev.cljs", :line 66, :column 1, :end-line 66, :end-column 9, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 66, :column 6, :end-line 66, :end-column 9}, :doc "Event.\n\n  The cut event is fired when the user has initiated a \\\"cut\\\"\n  through the browser's user interface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/cut_event`", :tag string}, pointerlockerror {:name web.Document.ev/pointerlockerror, :file "src/web/Document/ev.cljs", :line 283, :column 1, :end-line 283, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 283, :column 6, :end-line 283, :end-column 22}, :doc "Event.\n\n  The pointerlockerror event is fired when locking the pointer\n  (for technical reasons or because the permission was denied).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerlockerror_event`", :tag string}, dragexit {:name web.Document.ev/dragexit, :file "src/web/Document/ev.cljs", :line 117, :column 1, :end-line 117, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 117, :column 6, :end-line 117, :end-column 14}, :doc "Event.\n\n  The dragexit event is fired when an element is no longer the\n  operation's immediate selection target.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/dragexit_event`", :tag string}, dragover {:name web.Document.ev/dragover, :file "src/web/Document/ev.cljs", :line 137, :column 1, :end-line 137, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 137, :column 6, :end-line 137, :end-column 14}, :doc "Event.\n\n  The dragover event is fired when an element or text selection\n  being dragged over a valid drop target (every few hundred milliseconds).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/dragover_event`", :tag string}, copy {:name web.Document.ev/copy, :file "src/web/Document/ev.cljs", :line 56, :column 1, :end-line 56, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 56, :column 6, :end-line 56, :end-column 10}, :doc "Event.\n\n  The copy event fires when the user initiates a copy action through\n  browser's user interface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/copy_event`", :tag string}, touchmove {:name web.Document.ev/touchmove, :file "src/web/Document/ev.cljs", :line 377, :column 1, :end-line 377, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 377, :column 6, :end-line 377, :end-column 15}, :doc "Event.\n\n  The touchmove event is fired when one or more touch points are\n  along the touch surface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/touchmove_event`", :tag string}, fullscreenchange {:name web.Document.ev/fullscreenchange, :file "src/web/Document/ev.cljs", :line 448, :column 1, :end-line 448, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 448, :column 6, :end-line 448, :end-column 22}, :doc "Event.\n\n  The fullscreenchange event is fired immediately after the browser\n  into or out of full-screen mode.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/fullscreenchange_event`", :tag string}, pointerenter {:name web.Document.ev/pointerenter, :file "src/web/Document/ev.cljs", :line 250, :column 1, :end-line 250, :end-column 18, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 250, :column 6, :end-line 250, :end-column 18}, :doc "Event.\n\n  The pointerenter event fires when a pointing device is moved\n  the hit test boundaries of an element or one of its descendants,\n  as a result of a `web.pointerdown` event from a device that does\n  support hover (see `web.pointerdown`).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerenter_event`", :tag string}, keydown {:name web.Document.ev/keydown, :file "src/web/Document/ev.cljs", :line 177, :column 1, :end-line 177, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 177, :column 6, :end-line 177, :end-column 13}, :doc "Event.\n\n  The keydown event is fired when a key is pressed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event`", :tag string}, transitionrun {:name web.Document.ev/transitionrun, :file "src/web/Document/ev.cljs", :line 418, :column 1, :end-line 418, :end-column 19, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 418, :column 6, :end-line 418, :end-column 19}, :doc "Event.\n\n  The transitionrun event is fired when a CSS transition is first\n  i.e. before any `web.transition-delay` has begun.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/transitionrun_event`", :tag string}, keypress {:name web.Document.ev/keypress, :file "src/web/Document/ev.cljs", :line 186, :column 1, :end-line 186, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 186, :column 6, :end-line 186, :end-column 14}, :doc "Event.\n\n  The keypress event is fired when a key that produces a character\n  is pressed down.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/keypress_event`", :tag string}, dom-content-loaded {:name web.Document.ev/dom-content-loaded, :file "src/web/Document/ev.cljs", :line 76, :column 1, :end-line 76, :end-column 24, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 76, :column 6, :end-line 76, :end-column 24}, :doc "Event.\n\n  The DOMContentLoaded event fires when the initial HTML document\n  been completely loaded and parsed, without waiting for stylesheets,\n  and subframes to finish loading.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/DOMContentLoaded_event`", :tag string}, touchcancel {:name web.Document.ev/touchcancel, :file "src/web/Document/ev.cljs", :line 356, :column 1, :end-line 356, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 356, :column 6, :end-line 356, :end-column 17}, :doc "Event.\n\n  The touchcancel event is fired when one or more touch points\n  been disrupted in an implementation-specific manner (for example,\n  many touch points are created).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/touchcancel_event`", :tag string}, selectionchange {:name web.Document.ev/selectionchange, :file "src/web/Document/ev.cljs", :line 458, :column 1, :end-line 458, :end-column 21, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 458, :column 6, :end-line 458, :end-column 21}, :doc "Event.\n\n\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/selectionchange_event`", :tag string}, drop {:name web.Document.ev/drop, :file "src/web/Document/ev.cljs", :line 157, :column 1, :end-line 157, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 157, :column 6, :end-line 157, :end-column 10}, :doc "Event.\n\n  The drop event is fired when an element or text selection is\n  on a valid drop target.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/drop_event`", :tag string}, pointerlockchange {:name web.Document.ev/pointerlockchange, :file "src/web/Document/ev.cljs", :line 274, :column 1, :end-line 274, :end-column 23, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 274, :column 6, :end-line 274, :end-column 23}, :doc "Event.\n\n  The pointerlockchange event is fired when the pointer is locked/unlocked.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerlockchange_event`", :tag string}, dragenter {:name web.Document.ev/dragenter, :file "src/web/Document/ev.cljs", :line 107, :column 1, :end-line 107, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 107, :column 6, :end-line 107, :end-column 15}, :doc "Event.\n\n  The dragenter event is fired when a dragged element or text selection\n  a valid drop target.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/dragenter_event`", :tag string}, paste {:name web.Document.ev/paste, :file "src/web/Document/ev.cljs", :line 215, :column 1, :end-line 215, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 215, :column 6, :end-line 215, :end-column 11}, :doc "Event.\n\n  The paste event is fired when the user has initiated a \\\"paste\\\"\n  through the browser's user interface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/paste_event`", :tag string}, animationiteration {:name web.Document.ev/animationiteration, :file "src/web/Document/ev.cljs", :line 30, :column 1, :end-line 30, :end-column 24, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 30, :column 6, :end-line 30, :end-column 24}, :doc "Event.\n\n  The animationiteration event is fired when an iteration of a\n  Animation ends, and another one begins. This event does not occur\n  the same time as the animationend event, and therefore does not\n  for animations with an animation-iteration-count of one.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/animationiteration_event`", :tag string}, pointerup {:name web.Document.ev/pointerup, :file "src/web/Document/ev.cljs", :line 327, :column 1, :end-line 327, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 327, :column 6, :end-line 327, :end-column 15}, :doc "Event.\n\n  The pointerup event is fired when a pointer is no longer active.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerup_event`", :tag string}, animationend {:name web.Document.ev/animationend, :file "src/web/Document/ev.cljs", :line 19, :column 1, :end-line 19, :end-column 18, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 19, :column 6, :end-line 19, :end-column 18}, :doc "Event.\n\n  The animationend event is fired when a CSS Animation has completed\n  not if it aborts before reaching completion, such as if the element\n  invisible or the animation is removed from the element).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/animationend_event`", :tag string}, pointermove {:name web.Document.ev/pointermove, :file "src/web/Document/ev.cljs", :line 293, :column 1, :end-line 293, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 293, :column 6, :end-line 293, :end-column 17}, :doc "Event.\n\n  The pointermove event is fired when a pointer changes coordinates,\n  the pointer has not been canceled by a browser touch-action.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointermove_event`", :tag string}, lostpointercapture {:name web.Document.ev/lostpointercapture, :file "src/web/Document/ev.cljs", :line 205, :column 1, :end-line 205, :end-column 24, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 205, :column 6, :end-line 205, :end-column 24}, :doc "Event.\n\n  The lostpointercapture event is fired when a captured pointer\n  released.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/lostpointercapture_event`", :tag string}, readystatechange {:name web.Document.ev/readystatechange, :file "src/web/Document/ev.cljs", :line 336, :column 1, :end-line 336, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 336, :column 6, :end-line 336, :end-column 22}, :doc "Event.\n\n  The readystatechange event is fired when the `web.readyState`\n  of a document has changed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/readystatechange_event`", :tag string}, keyup {:name web.Document.ev/keyup, :file "src/web/Document/ev.cljs", :line 196, :column 1, :end-line 196, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 196, :column 6, :end-line 196, :end-column 11}, :doc "Event.\n\n  The keyup event is fired when a key is released.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/keyup_event`", :tag string}, pointerover {:name web.Document.ev/pointerover, :file "src/web/Document/ev.cljs", :line 317, :column 1, :end-line 317, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 317, :column 6, :end-line 317, :end-column 17}, :doc "Event.\n\n  The pointerover event is fired when a pointing device is moved\n  an element's hit test boundaries.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointerover_event`", :tag string}, scroll {:name web.Document.ev/scroll, :file "src/web/Document/ev.cljs", :line 346, :column 1, :end-line 346, :end-column 12, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 346, :column 6, :end-line 346, :end-column 12}, :doc "Event.\n\n  The scroll event fires when the document view or an element has\n  scrolled.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event`", :tag string}, pointercancel {:name web.Document.ev/pointercancel, :file "src/web/Document/ev.cljs", :line 225, :column 1, :end-line 225, :end-column 19, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 225, :column 6, :end-line 225, :end-column 19}, :doc "Event.\n\n  The pointercancel event is fired when the browser determines\n  there are unlikely to be any more pointer events, or if after\n  pointerdown event is fired, the pointer is then used to manipulate\n  viewport by panning, zooming, or scrolling.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/pointercancel_event`", :tag string}, touchstart {:name web.Document.ev/touchstart, :file "src/web/Document/ev.cljs", :line 387, :column 1, :end-line 387, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 387, :column 6, :end-line 387, :end-column 16}, :doc "Event.\n\n  The touchstart event is fired when one or more touch points are\n  on the touch surface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/touchstart_event`", :tag string}, gotpointercapture {:name web.Document.ev/gotpointercapture, :file "src/web/Document/ev.cljs", :line 167, :column 1, :end-line 167, :end-column 23, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 167, :column 6, :end-line 167, :end-column 23}, :doc "Event.\n\n  The gotpointercapture event is fired when an element captures\n  pointer using `web.setPointerCapture()`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/gotpointercapture_event`", :tag string}, touchend {:name web.Document.ev/touchend, :file "src/web/Document/ev.cljs", :line 367, :column 1, :end-line 367, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 367, :column 6, :end-line 367, :end-column 14}, :doc "Event.\n\n  The touchend event fires when one or more touch points are removed\n  the touch surface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/touchend_event`", :tag string}, selectstart {:name web.Document.ev/selectstart, :file "src/web/Document/ev.cljs", :line 467, :column 1, :end-line 467, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 467, :column 6, :end-line 467, :end-column 17}, :doc "Event.\n\n\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/selectstart_event`", :tag string}, transitionend {:name web.Document.ev/transitionend, :file "src/web/Document/ev.cljs", :line 406, :column 1, :end-line 406, :end-column 19, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 406, :column 6, :end-line 406, :end-column 19}, :doc "Event.\n\n  The transitionend event is fired when a CSS transition has completed.\n  the case where a transition is removed before completion, such\n  if the `web.transition-property` is removed or `web.display`\n  set to none, then the event will not be generated.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/transitionend_event`", :tag string}, dragend {:name web.Document.ev/dragend, :file "src/web/Document/ev.cljs", :line 97, :column 1, :end-line 97, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 97, :column 6, :end-line 97, :end-column 13}, :doc "Event.\n\n  The dragend event is fired when a drag operation is being ended\n  releasing a mouse button or hitting the escape key).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/dragend_event`", :tag string}, transitioncancel {:name web.Document.ev/transitioncancel, :file "src/web/Document/ev.cljs", :line 397, :column 1, :end-line 397, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Document/ev.cljs", :line 397, :column 6, :end-line 397, :end-column 22}, :doc "Event.\n\n  The transitioncancel event is fired when a CSS transition is\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document/transitioncancel_event`", :tag string}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "Document Events."}
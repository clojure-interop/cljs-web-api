{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Geolocation, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {clear-watch {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Geolocation.cljs", :line 8, :column 7, :end-line 8, :end-column 18, :arglists (quote ([this id])), :doc "Method.\n\n  The Geolocation.clearWatch() method is used to unregister location/error\n  handlers previously installed using `web.Geolocation.watchPosition()`.\n\n  `navigator.geolocation.clearWatch(id);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/clearWatch`"}, :name web.Geolocation/clear-watch, :variadic false, :file "src/web/Geolocation.cljs", :end-column 18, :method-params ([this id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this id])), :doc "Method.\n\n  The Geolocation.clearWatch() method is used to unregister location/error\n  handlers previously installed using `web.Geolocation.watchPosition()`.\n\n  `navigator.geolocation.clearWatch(id);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/clearWatch`"}, get-current-position {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Geolocation.cljs", :line 20, :column 7, :end-line 20, :end-column 27, :arglists (quote ([this & args])), :doc "Method.\n\n  The Geolocation.getCurrentPosition() method is used to get the\n  position of the device.\n\n  `navigator.geolocation.getCurrentPosition(success[, error[, [options]])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.Geolocation/get-current-position, :variadic true, :file "src/web/Geolocation.cljs", :end-column 27, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The Geolocation.getCurrentPosition() method is used to get the\n  position of the device.\n\n  `navigator.geolocation.getCurrentPosition(success[, error[, [options]])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/getCurrentPosition`"}, watch-position {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Geolocation.cljs", :line 32, :column 7, :end-line 32, :end-column 21, :arglists (quote ([this & args])), :doc "Method.\n\n  The `web.Geolocation` method watchPosition() method is used to\n  a handler function that will be called automatically each time\n  position of the device changes.\n\n  `navigator.geolocation.watchPosition(success[, error[, options]])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/watchPosition`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.Geolocation/watch-position, :variadic true, :file "src/web/Geolocation.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The `web.Geolocation` method watchPosition() method is used to\n  a handler function that will be called automatically each time\n  position of the device changes.\n\n  `navigator.geolocation.watchPosition(success[, error[, options]])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Geolocation/watchPosition`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Geolocation interface represents an object able to programmatically\n  the position of the device. It gives Web content access to the\n  of the device. This allows a Web site or app to offer customized\n  based on the user's location."}
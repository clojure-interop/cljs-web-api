{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{type}, :name web.DataTransferItem, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-as-file {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 8, :column 7, :end-line 8, :end-column 18, :arglists (quote ([this])), :doc "Method.\n\n  If the item is a file, the DataTransferItem.getAsFile() method\n  the drag data item's `file.File` object. If the item is not a\n  this method returns null.\n\n  `File = DataTransferItem.getAsFile();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/getAsFile`"}, :name web.DataTransferItem/get-as-file, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  If the item is a file, the DataTransferItem.getAsFile() method\n  the drag data item's `file.File` object. If the item is not a\n  this method returns null.\n\n  `File = DataTransferItem.getAsFile();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/getAsFile`"}, get-as-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 21, :column 7, :end-line 21, :end-column 20, :arglists (quote ([this callback])), :doc "Method.\n\n  The DataTransferItem.getAsString() method invokes the given callback\n  the drag data item's string data as the argument if the item's\n  is a Plain unicode string (i.e. kind is string).\n\n  `dataTransferItem.getAsString(callback);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/getAsString`"}, :name web.DataTransferItem/get-as-string, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 20, :method-params ([this callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this callback])), :doc "Method.\n\n  The DataTransferItem.getAsString() method invokes the given callback\n  the drag data item's string data as the argument if the item's\n  is a Plain unicode string (i.e. kind is string).\n\n  `dataTransferItem.getAsString(callback);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/getAsString`"}, webkit-get-as-entry {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 34, :column 7, :end-line 34, :end-column 26, :arglists (quote ([this])), :doc "Method.\n\n  If the item described by the `web.DataTransferItem` is a file,\n  returns a `file.FileSystemFileEntry` or `file.FileSystemDirectoryEntry`\n  it. If the item isn't a file, null is returned.\n\n  `DataTransferItem.webkitGetAsEntry();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry`"}, :name web.DataTransferItem/webkit-get-as-entry, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  If the item described by the `web.DataTransferItem` is a file,\n  returns a `file.FileSystemFileEntry` or `file.FileSystemDirectoryEntry`\n  it. If the item isn't a file, null is returned.\n\n  `DataTransferItem.webkitGetAsEntry();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry`"}, kind {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 47, :column 7, :end-line 47, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only DataTransferItem.kind property returns a `web.DataTransferItem`\n  the drag data item kind: some text or some file.\n\n  `var itemKind = DataTransferItem.kind;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/kind`"}, :name web.DataTransferItem/kind, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only DataTransferItem.kind property returns a `web.DataTransferItem`\n  the drag data item kind: some text or some file.\n\n  `var itemKind = DataTransferItem.kind;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/kind`"}, set-kind! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only DataTransferItem.kind property returns a `web.DataTransferItem`\n  the drag data item kind: some text or some file.\n\n  `var itemKind = DataTransferItem.kind;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/kind`"}, :name web.DataTransferItem/set-kind!, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only DataTransferItem.kind property returns a `web.DataTransferItem`\n  the drag data item kind: some text or some file.\n\n  `var itemKind = DataTransferItem.kind;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/kind`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 71, :column 7, :end-line 71, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The read-only DataTransferItem.type property returns the type\n  of the `web.DataTransferItem` object representing the drag data\n  The type is a Unicode string generally given by a MIME type,\n  a MIME type is not required.\n\n  `dataItem.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/type`"}, :name web.DataTransferItem/type, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only DataTransferItem.type property returns the type\n  of the `web.DataTransferItem` object representing the drag data\n  The type is a Unicode string generally given by a MIME type,\n  a MIME type is not required.\n\n  `dataItem.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/type`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DataTransferItem.cljs", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only DataTransferItem.type property returns the type\n  of the `web.DataTransferItem` object representing the drag data\n  The type is a Unicode string generally given by a MIME type,\n  a MIME type is not required.\n\n  `dataItem.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/type`"}, :name web.DataTransferItem/set-type!, :variadic false, :file "src/web/DataTransferItem.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only DataTransferItem.type property returns the type\n  of the `web.DataTransferItem` object representing the drag data\n  The type is a Unicode string generally given by a MIME type,\n  a MIME type is not required.\n\n  `dataItem.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/type`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The DataTransferItem object represents one drag data item. During\n  drag operation, each `web.drag event` has a `web.dataTransfer`\n  which contains a `web.list` of drag data items. Each item in\n  list is a DataTransferItem object."}
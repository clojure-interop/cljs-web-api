{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.VisualViewport, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-width! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 173, :column 7, :end-line 173, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The width read-only property of the `web.VisualViewport` interface\n  the width of the visual viewport, in CSS pixels.\n\n  `var width = VisualViewport.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/width`"}, :name web.VisualViewport/set-width!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The width read-only property of the `web.VisualViewport` interface\n  the width of the visual viewport, in CSS pixels.\n\n  `var width = VisualViewport.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/width`"}, height {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The height read-only property of the `web.VisualViewport` interface\n  the height of the visual viewport, in CSS pixels.\n\n  `var height = VisualViewport.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/height`"}, :name web.VisualViewport/height, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The height read-only property of the `web.VisualViewport` interface\n  the height of the visual viewport, in CSS pixels.\n\n  `var height = VisualViewport.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/height`"}, set-height! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The height read-only property of the `web.VisualViewport` interface\n  the height of the visual viewport, in CSS pixels.\n\n  `var height = VisualViewport.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/height`"}, :name web.VisualViewport/set-height!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The height read-only property of the `web.VisualViewport` interface\n  the height of the visual viewport, in CSS pixels.\n\n  `var height = VisualViewport.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/height`"}, page-left {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 85, :column 7, :end-line 85, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The pageLeft read-only property of the `web.VisualViewport` interface\n  the x coordinate relative to the initial containing block origin\n  the left edge of the visual viewport, in CSS pixels.\n\n  `var pageLeft = VisualViewport.pageLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageLeft`"}, :name web.VisualViewport/page-left, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pageLeft read-only property of the `web.VisualViewport` interface\n  the x coordinate relative to the initial containing block origin\n  the left edge of the visual viewport, in CSS pixels.\n\n  `var pageLeft = VisualViewport.pageLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageLeft`"}, set-page-left! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 98, :column 7, :end-line 98, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The pageLeft read-only property of the `web.VisualViewport` interface\n  the x coordinate relative to the initial containing block origin\n  the left edge of the visual viewport, in CSS pixels.\n\n  `var pageLeft = VisualViewport.pageLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageLeft`"}, :name web.VisualViewport/set-page-left!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pageLeft read-only property of the `web.VisualViewport` interface\n  the x coordinate relative to the initial containing block origin\n  the left edge of the visual viewport, in CSS pixels.\n\n  `var pageLeft = VisualViewport.pageLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageLeft`"}, scale {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 137, :column 7, :end-line 137, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The scale read-only property of the `web.VisualViewport` interface\n  the pinch-zoom scaling factor applied to the visual viewport.\n\n  `var scale = VisualViewport.scale`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scale`"}, :name web.VisualViewport/scale, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The scale read-only property of the `web.VisualViewport` interface\n  the pinch-zoom scaling factor applied to the visual viewport.\n\n  `var scale = VisualViewport.scale`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scale`"}, set-offsetleft! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 46, :column 7, :end-line 46, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The offsetLeft read-only property of the `web.VisualViewport`\n  returns the offset of the left edge of the visual viewport from\n  left edge of the layout viewport in CSS pixels.\n\n  `var offsetLeft = VisualViewport.offsetLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetleft`"}, :name web.VisualViewport/set-offsetleft!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The offsetLeft read-only property of the `web.VisualViewport`\n  returns the offset of the left edge of the visual viewport from\n  left edge of the layout viewport in CSS pixels.\n\n  `var offsetLeft = VisualViewport.offsetLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetleft`"}, set-page-top! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 124, :column 7, :end-line 124, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The pageTop read-only property of the `web.VisualViewport` interface\n  the y coordinate relative to the initial containing block origin\n  the top edge of the visual viewport, in CSS pixels.\n\n  `var pageTop = VisualViewport.pageTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageTop`"}, :name web.VisualViewport/set-page-top!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pageTop read-only property of the `web.VisualViewport` interface\n  the y coordinate relative to the initial containing block origin\n  the top edge of the visual viewport, in CSS pixels.\n\n  `var pageTop = VisualViewport.pageTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageTop`"}, width {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 161, :column 7, :end-line 161, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The width read-only property of the `web.VisualViewport` interface\n  the width of the visual viewport, in CSS pixels.\n\n  `var width = VisualViewport.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/width`"}, :name web.VisualViewport/width, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The width read-only property of the `web.VisualViewport` interface\n  the width of the visual viewport, in CSS pixels.\n\n  `var width = VisualViewport.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/width`"}, offset-top {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 59, :column 7, :end-line 59, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The offsetTop read-only property of the `web.VisualViewport`\n  returns the offset of the top edge of the visual viewport from\n  top edge of the layout viewport in CSS pixels.\n\n  `var offsetTop = VisualViewport.offsetTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetTop`"}, :name web.VisualViewport/offset-top, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The offsetTop read-only property of the `web.VisualViewport`\n  returns the offset of the top edge of the visual viewport from\n  top edge of the layout viewport in CSS pixels.\n\n  `var offsetTop = VisualViewport.offsetTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetTop`"}, set-scale! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 149, :column 7, :end-line 149, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The scale read-only property of the `web.VisualViewport` interface\n  the pinch-zoom scaling factor applied to the visual viewport.\n\n  `var scale = VisualViewport.scale`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scale`"}, :name web.VisualViewport/set-scale!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The scale read-only property of the `web.VisualViewport` interface\n  the pinch-zoom scaling factor applied to the visual viewport.\n\n  `var scale = VisualViewport.scale`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scale`"}, offsetleft {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 33, :column 7, :end-line 33, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The offsetLeft read-only property of the `web.VisualViewport`\n  returns the offset of the left edge of the visual viewport from\n  left edge of the layout viewport in CSS pixels.\n\n  `var offsetLeft = VisualViewport.offsetLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetleft`"}, :name web.VisualViewport/offsetleft, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The offsetLeft read-only property of the `web.VisualViewport`\n  returns the offset of the left edge of the visual viewport from\n  left edge of the layout viewport in CSS pixels.\n\n  `var offsetLeft = VisualViewport.offsetLeft`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetleft`"}, set-offset-top! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 72, :column 7, :end-line 72, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The offsetTop read-only property of the `web.VisualViewport`\n  returns the offset of the top edge of the visual viewport from\n  top edge of the layout viewport in CSS pixels.\n\n  `var offsetTop = VisualViewport.offsetTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetTop`"}, :name web.VisualViewport/set-offset-top!, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The offsetTop read-only property of the `web.VisualViewport`\n  returns the offset of the top edge of the visual viewport from\n  top edge of the layout viewport in CSS pixels.\n\n  `var offsetTop = VisualViewport.offsetTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetTop`"}, page-top {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/VisualViewport.cljs", :line 111, :column 7, :end-line 111, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The pageTop read-only property of the `web.VisualViewport` interface\n  the y coordinate relative to the initial containing block origin\n  the top edge of the visual viewport, in CSS pixels.\n\n  `var pageTop = VisualViewport.pageTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageTop`"}, :name web.VisualViewport/page-top, :variadic false, :file "src/web/VisualViewport.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pageTop read-only property of the `web.VisualViewport` interface\n  the y coordinate relative to the initial containing block origin\n  the top edge of the visual viewport, in CSS pixels.\n\n  `var pageTop = VisualViewport.pageTop`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageTop`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The VisualViewport interface of the the Visual Viewport API represents\n  visual viewport for a given window. For a page containing iframes,\n  iframe, as well as the containing page, will have a unique window\n  Each window on a page will have a unique VisualViewport representing\n  properties associated with that window."}
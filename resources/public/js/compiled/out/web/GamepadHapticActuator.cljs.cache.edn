{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{type}, :name web.GamepadHapticActuator, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {pulse {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GamepadHapticActuator.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([this value duration])), :doc "Method.\n\n  The pulse() method of the `web.GamepadHapticActuator` interface\n  the hardware pulse at a certain intensity for a specified duration.\n\n  `gamepadHapticActuatorInstance.pulse(value, duration).then(function(result) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator/pulse`"}, :name web.GamepadHapticActuator/pulse, :variadic false, :file "src/web/GamepadHapticActuator.cljs", :end-column 12, :method-params ([this value duration]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this value duration])), :doc "Method.\n\n  The pulse() method of the `web.GamepadHapticActuator` interface\n  the hardware pulse at a certain intensity for a specified duration.\n\n  `gamepadHapticActuatorInstance.pulse(value, duration).then(function(result) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator/pulse`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GamepadHapticActuator.cljs", :line 19, :column 7, :end-line 19, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The type read-only property of the `web.GamepadHapticActuator`\n  returns an enum representing the type of the haptic hardware.\n\n  `var myActuatorType = gamepadHapticActuatorInstance.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator/type`"}, :name web.GamepadHapticActuator/type, :variadic false, :file "src/web/GamepadHapticActuator.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The type read-only property of the `web.GamepadHapticActuator`\n  returns an enum representing the type of the haptic hardware.\n\n  `var myActuatorType = gamepadHapticActuatorInstance.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator/type`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GamepadHapticActuator.cljs", :line 31, :column 7, :end-line 31, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The type read-only property of the `web.GamepadHapticActuator`\n  returns an enum representing the type of the haptic hardware.\n\n  `var myActuatorType = gamepadHapticActuatorInstance.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator/type`"}, :name web.GamepadHapticActuator/set-type!, :variadic false, :file "src/web/GamepadHapticActuator.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The type read-only property of the `web.GamepadHapticActuator`\n  returns an enum representing the type of the haptic hardware.\n\n  `var myActuatorType = gamepadHapticActuatorInstance.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GamepadHapticActuator/type`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The GamepadHapticActuator interface of the Gamepad API represents\n  in the controller designed to provide haptic feedback to the\n  (if available), most commonly vibration hardware."}
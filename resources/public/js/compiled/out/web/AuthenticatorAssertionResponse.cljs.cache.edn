{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.AuthenticatorAssertionResponse, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {authenticator-data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/AuthenticatorAssertionResponse.cljs", :line 8, :column 7, :end-line 8, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The authenticatorData property of the `web.AuthenticatorAssertionResponse`\n  returns an `web.ArrayBuffer` containing information from the\n  such as the Relying Party ID Hash (rpIdHash), a signature counter,\n  of user presence, user verification flags, and any extensions\n  by the authenticator.\n\n  `var authnrData = authenticatorAssertionResponse.authenticatorData;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData`"}, :name web.AuthenticatorAssertionResponse/authenticator-data, :variadic false, :file "src/web/AuthenticatorAssertionResponse.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The authenticatorData property of the `web.AuthenticatorAssertionResponse`\n  returns an `web.ArrayBuffer` containing information from the\n  such as the Relying Party ID Hash (rpIdHash), a signature counter,\n  of user presence, user verification flags, and any extensions\n  by the authenticator.\n\n  `var authnrData = authenticatorAssertionResponse.authenticatorData;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData`"}, set-authenticator-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/AuthenticatorAssertionResponse.cljs", :line 23, :column 7, :end-line 23, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The authenticatorData property of the `web.AuthenticatorAssertionResponse`\n  returns an `web.ArrayBuffer` containing information from the\n  such as the Relying Party ID Hash (rpIdHash), a signature counter,\n  of user presence, user verification flags, and any extensions\n  by the authenticator.\n\n  `var authnrData = authenticatorAssertionResponse.authenticatorData;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData`"}, :name web.AuthenticatorAssertionResponse/set-authenticator-data!, :variadic false, :file "src/web/AuthenticatorAssertionResponse.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The authenticatorData property of the `web.AuthenticatorAssertionResponse`\n  returns an `web.ArrayBuffer` containing information from the\n  such as the Relying Party ID Hash (rpIdHash), a signature counter,\n  of user presence, user verification flags, and any extensions\n  by the authenticator.\n\n  `var authnrData = authenticatorAssertionResponse.authenticatorData;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/authenticatorData`"}, signature {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/AuthenticatorAssertionResponse.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The signature read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is the signature of the\n  for both `web.AuthenticatorAssertionResponse.authenticatorData`\n  a SHA-256 hash of the client data (`web.AuthenticatorAssertionResponse.clientDataJSON`).\n\n  `signature = authenticatorAssertionResponse.signature`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/signature`"}, :name web.AuthenticatorAssertionResponse/signature, :variadic false, :file "src/web/AuthenticatorAssertionResponse.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The signature read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is the signature of the\n  for both `web.AuthenticatorAssertionResponse.authenticatorData`\n  a SHA-256 hash of the client data (`web.AuthenticatorAssertionResponse.clientDataJSON`).\n\n  `signature = authenticatorAssertionResponse.signature`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/signature`"}, set-signature! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/AuthenticatorAssertionResponse.cljs", :line 52, :column 7, :end-line 52, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The signature read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is the signature of the\n  for both `web.AuthenticatorAssertionResponse.authenticatorData`\n  a SHA-256 hash of the client data (`web.AuthenticatorAssertionResponse.clientDataJSON`).\n\n  `signature = authenticatorAssertionResponse.signature`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/signature`"}, :name web.AuthenticatorAssertionResponse/set-signature!, :variadic false, :file "src/web/AuthenticatorAssertionResponse.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The signature read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is the signature of the\n  for both `web.AuthenticatorAssertionResponse.authenticatorData`\n  a SHA-256 hash of the client data (`web.AuthenticatorAssertionResponse.clientDataJSON`).\n\n  `signature = authenticatorAssertionResponse.signature`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/signature`"}, user-handle {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/AuthenticatorAssertionResponse.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The userHandle read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is an opaque identifier\n  the given user. Such an identifier can be used by the relying\n  server to link the user account with its corresponding credentials\n  other data.\n\n  `userHandle = authenticatorAssertionResponse.userHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/userHandle`"}, :name web.AuthenticatorAssertionResponse/user-handle, :variadic false, :file "src/web/AuthenticatorAssertionResponse.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The userHandle read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is an opaque identifier\n  the given user. Such an identifier can be used by the relying\n  server to link the user account with its corresponding credentials\n  other data.\n\n  `userHandle = authenticatorAssertionResponse.userHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/userHandle`"}, set-user-handle! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/AuthenticatorAssertionResponse.cljs", :line 81, :column 7, :end-line 81, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The userHandle read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is an opaque identifier\n  the given user. Such an identifier can be used by the relying\n  server to link the user account with its corresponding credentials\n  other data.\n\n  `userHandle = authenticatorAssertionResponse.userHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/userHandle`"}, :name web.AuthenticatorAssertionResponse/set-user-handle!, :variadic false, :file "src/web/AuthenticatorAssertionResponse.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The userHandle read-only property of the `web.AuthenticatorAssertionResponse`\n  is an `web.ArrayBuffer` object which is an opaque identifier\n  the given user. Such an identifier can be used by the relying\n  server to link the user account with its corresponding credentials\n  other data.\n\n  `userHandle = authenticatorAssertionResponse.userHandle`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse/userHandle`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The AuthenticatorAssertionResponse interface of the Web Authentication\n  is returned by `web.CredentialsContainer.get()` when a `web.PublicKeyCredential`\n  passed, and provides proof to a service that it has a key pair\n  that the authentication request is valid and approved."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.XPathEvaluator, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {create-expression {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XPathEvaluator.cljs", :line 5, :column 7, :end-line 5, :end-column 24, :arglists (quote ([this expression resolver])), :doc "Method.\n\n  This method compiles an `web.XPathExpression` which can then\n  used for (repeated) evaluations of the XPath expression.\n\n  `XPathExpression XPathEvaluator.createExpression(expression, resolver);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator/createExpression`"}, :name web.XPathEvaluator/create-expression, :variadic false, :file "src/web/XPathEvaluator.cljs", :end-column 24, :method-params ([this expression resolver]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this expression resolver])), :doc "Method.\n\n  This method compiles an `web.XPathExpression` which can then\n  used for (repeated) evaluations of the XPath expression.\n\n  `XPathExpression XPathEvaluator.createExpression(expression, resolver);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator/createExpression`"}, create-ns-resolver {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XPathEvaluator.cljs", :line 17, :column 7, :end-line 17, :end-column 25, :arglists (quote ([this node-resolver])), :doc "Method.\n\n  This method adapts any DOM node to resolve namespaces so that\n  XPath expression can be easily evaluated relative to the context\n  the node where it appeared within the document.\n\n  `XPathNSResolver XPathEvaluator.createNSResolver(nodeResolver);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator/createNSResolver`"}, :name web.XPathEvaluator/create-ns-resolver, :variadic false, :file "src/web/XPathEvaluator.cljs", :end-column 25, :method-params ([this node-resolver]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this node-resolver])), :doc "Method.\n\n  This method adapts any DOM node to resolve namespaces so that\n  XPath expression can be easily evaluated relative to the context\n  the node where it appeared within the document.\n\n  `XPathNSResolver XPathEvaluator.createNSResolver(nodeResolver);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator/createNSResolver`"}, evaluate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XPathEvaluator.cljs", :line 30, :column 7, :end-line 30, :end-column 15, :arglists (quote ([this expression context-node resolver type result])), :doc "Method.\n\n  The evaluate() method of the `web.XPathEvaluator` interface executes\n  XPath expression on the given node or document and returns an\n\n  `XPathResult XPathEvaluator.evaluate(expression, contextNode, resolver, type, result);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator/evaluate`"}, :name web.XPathEvaluator/evaluate, :variadic false, :file "src/web/XPathEvaluator.cljs", :end-column 15, :method-params ([this expression context-node resolver type result]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 6, :fn-var true, :arglists (quote ([this expression context-node resolver type result])), :doc "Method.\n\n  The evaluate() method of the `web.XPathEvaluator` interface executes\n  XPath expression on the given node or document and returns an\n\n  `XPathResult XPathEvaluator.evaluate(expression, contextNode, resolver, type, result);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XPathEvaluator/evaluate`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The XPathEvaluator interface allows to compile and evaluate XPath"}
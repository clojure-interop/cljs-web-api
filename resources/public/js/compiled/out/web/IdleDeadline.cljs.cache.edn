{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.IdleDeadline, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {time-remaining {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/IdleDeadline.cljs", :line 6, :column 7, :end-line 6, :end-column 21, :arglists (quote ([this])), :doc "Method.\n\n  The timeRemaining() method on the `web.IdleDeadline` interface\n  the estimated number of milliseconds remaining in the current\n  period. The callback can call this method at any time to determine\n  much time it can continue to work before it must return. For\n  if the callback finishes a task and has another one to begin,\n  can call timeRemaining() to see if there's enough time to complete\n  next task. If there isn't, the callback can just return immediately,\n  look for other work to do with the remaining time.\n\n  `timeRemaining = IdleDeadline.timeRemaining();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/timeRemaining`"}, :name web.IdleDeadline/time-remaining, :variadic false, :file "src/web/IdleDeadline.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The timeRemaining() method on the `web.IdleDeadline` interface\n  the estimated number of milliseconds remaining in the current\n  period. The callback can call this method at any time to determine\n  much time it can continue to work before it must return. For\n  if the callback finishes a task and has another one to begin,\n  can call timeRemaining() to see if there's enough time to complete\n  next task. If there isn't, the callback can just return immediately,\n  look for other work to do with the remaining time.\n\n  `timeRemaining = IdleDeadline.timeRemaining();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/timeRemaining`"}, did-timeout {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/IdleDeadline.cljs", :line 24, :column 7, :end-line 24, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The read-only didTimeout property on the `web.IdleDeadline` interface\n  a Boolean value which indicates whether or not the idle callback\n  being invoked because the timeout interval specified when `web.Window.requestIdleCallback()`\n  called has expired.\n\n  `var timedOut = IdleDeadline.didTimeout;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/didTimeout`"}, :name web.IdleDeadline/did-timeout, :variadic false, :file "src/web/IdleDeadline.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only didTimeout property on the `web.IdleDeadline` interface\n  a Boolean value which indicates whether or not the idle callback\n  being invoked because the timeout interval specified when `web.Window.requestIdleCallback()`\n  called has expired.\n\n  `var timedOut = IdleDeadline.didTimeout;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/didTimeout`"}, set-did-timeout! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/IdleDeadline.cljs", :line 38, :column 7, :end-line 38, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only didTimeout property on the `web.IdleDeadline` interface\n  a Boolean value which indicates whether or not the idle callback\n  being invoked because the timeout interval specified when `web.Window.requestIdleCallback()`\n  called has expired.\n\n  `var timedOut = IdleDeadline.didTimeout;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/didTimeout`"}, :name web.IdleDeadline/set-did-timeout!, :variadic false, :file "src/web/IdleDeadline.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only didTimeout property on the `web.IdleDeadline` interface\n  a Boolean value which indicates whether or not the idle callback\n  being invoked because the timeout interval specified when `web.Window.requestIdleCallback()`\n  called has expired.\n\n  `var timedOut = IdleDeadline.didTimeout;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/IdleDeadline/didTimeout`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "See our complete example in the article Cooperative Scheduling\n  Background Tasks API."}
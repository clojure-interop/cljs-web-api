{:rename-macros {}, :renames {}, :externs {ExtendableEvent {}}, :use-macros {}, :excludes #{}, :name web.ExtendableEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.ExtendableEvent/constructor, :file "src/web/ExtendableEvent.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ExtendableEvent.cljs", :line 9, :column 6, :end-line 9, :end-column 17}, :doc "Constructor.\n\n  The ExtendableEvent() constructor creates a new `web.ExtendableEvent` object.\n\n  type\n  The type of the ExtendableEvent, for example install, activate.\n  init Optional\n  An options object containing any custom settings that you want to apply to the event object. Currently no possible options exist inside the spec, but this has been defined for forward compatibility across the different derived events.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/ExtendableEvent`", :tag js}, wait-until {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ExtendableEvent.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([this promise])), :doc "Method.\n\n  The extendableEvent.waitUntil() method tells the event dispatcher\n  work is ongoing. It can also be used to detect whether that work\n  successful. In service workers, waitUntil() tells the browser\n  work is ongoing until the promise settles, and it shouldn't terminate\n  service worker if it wants that work to complete.\n\n  `event.waitUntil(promise)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil`"}, :name web.ExtendableEvent/wait-until, :variadic false, :file "src/web/ExtendableEvent.cljs", :end-column 17, :method-params ([this promise]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this promise])), :doc "Method.\n\n  The extendableEvent.waitUntil() method tells the event dispatcher\n  work is ongoing. It can also be used to detect whether that work\n  successful. In service workers, waitUntil() tells the browser\n  work is ongoing until the promise settles, and it shouldn't terminate\n  service worker if it wants that work to complete.\n\n  `event.waitUntil(promise)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ExtendableEvent/waitUntil`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ExtendableEvent interface extends the lifetime of the install\n  activate events dispatched on the global scope as part of the\n  worker lifecycle. This ensures that any functional events (like\n  are not dispatched until it upgrades database schemas and deletes\n  outdated cache entries."}
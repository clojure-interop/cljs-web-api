{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name}, :name web.Lock, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {mode {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Lock.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The mode read-only property of the `web.Lock` interface returns\n  access mode passed to `web.LockManager.request()` when the lock\n  requested. The mode is either \\\"exclusive\\\" (the default) or\n\n  `var mode = Lock.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/mode`"}, :name web.Lock/mode, :variadic false, :file "src/web/Lock.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The mode read-only property of the `web.Lock` interface returns\n  access mode passed to `web.LockManager.request()` when the lock\n  requested. The mode is either \\\"exclusive\\\" (the default) or\n\n  `var mode = Lock.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/mode`"}, set-mode! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Lock.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The mode read-only property of the `web.Lock` interface returns\n  access mode passed to `web.LockManager.request()` when the lock\n  requested. The mode is either \\\"exclusive\\\" (the default) or\n\n  `var mode = Lock.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/mode`"}, :name web.Lock/set-mode!, :variadic false, :file "src/web/Lock.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The mode read-only property of the `web.Lock` interface returns\n  access mode passed to `web.LockManager.request()` when the lock\n  requested. The mode is either \\\"exclusive\\\" (the default) or\n\n  `var mode = Lock.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/mode`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Lock.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.Lock` interface returns\n  name passed to `web.LockManager.request` selected when the lock\n  requested.\n\n  `var name = Lock.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/name`"}, :name web.Lock/name, :variadic false, :file "src/web/Lock.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.Lock` interface returns\n  name passed to `web.LockManager.request` selected when the lock\n  requested.\n\n  `var name = Lock.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/name`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Lock.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.Lock` interface returns\n  name passed to `web.LockManager.request` selected when the lock\n  requested.\n\n  `var name = Lock.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/name`"}, :name web.Lock/set-name!, :variadic false, :file "src/web/Lock.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.Lock` interface returns\n  name passed to `web.LockManager.request` selected when the lock\n  requested.\n\n  `var name = Lock.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Lock/name`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Lock interface of the the Web Locks API provides the name\n  mode of a previously requested lock, which is received in the\n  to `web.LockManager.request()`."}
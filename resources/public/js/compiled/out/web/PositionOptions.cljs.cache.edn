{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.PositionOptions, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {enable-high-accuracy {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PositionOptions.cljs", :line 7, :column 7, :end-line 7, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The PositionOptions.enableHighAccuracy property is a `web.Boolean`\n  indicates the application would like to receive the best possible\n  If true and if the device is able to provide a more accurate\n  it will do so. Note that this can result in slower response times\n  increased power consumption (with a GPS chip on a mobile device\n  example). On the other hand, if false (the default value), the\n  can take the liberty to save resources by responding more quickly\n  using less power.\n\n  `positionOptions.enableHighAccuracy = booleanValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/enableHighAccuracy`"}, :name web.PositionOptions/enable-high-accuracy, :variadic false, :file "src/web/PositionOptions.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The PositionOptions.enableHighAccuracy property is a `web.Boolean`\n  indicates the application would like to receive the best possible\n  If true and if the device is able to provide a more accurate\n  it will do so. Note that this can result in slower response times\n  increased power consumption (with a GPS chip on a mobile device\n  example). On the other hand, if false (the default value), the\n  can take the liberty to save resources by responding more quickly\n  using less power.\n\n  `positionOptions.enableHighAccuracy = booleanValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/enableHighAccuracy`"}, set-enable-high-accuracy! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PositionOptions.cljs", :line 25, :column 7, :end-line 25, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The PositionOptions.enableHighAccuracy property is a `web.Boolean`\n  indicates the application would like to receive the best possible\n  If true and if the device is able to provide a more accurate\n  it will do so. Note that this can result in slower response times\n  increased power consumption (with a GPS chip on a mobile device\n  example). On the other hand, if false (the default value), the\n  can take the liberty to save resources by responding more quickly\n  using less power.\n\n  `positionOptions.enableHighAccuracy = booleanValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/enableHighAccuracy`"}, :name web.PositionOptions/set-enable-high-accuracy!, :variadic false, :file "src/web/PositionOptions.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The PositionOptions.enableHighAccuracy property is a `web.Boolean`\n  indicates the application would like to receive the best possible\n  If true and if the device is able to provide a more accurate\n  it will do so. Note that this can result in slower response times\n  increased power consumption (with a GPS chip on a mobile device\n  example). On the other hand, if false (the default value), the\n  can take the liberty to save resources by responding more quickly\n  using less power.\n\n  `positionOptions.enableHighAccuracy = booleanValue`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/enableHighAccuracy`"}, maximum-age {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PositionOptions.cljs", :line 43, :column 7, :end-line 43, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The PositionOptions.maximumAge property is a positive long value\n  the maximum age in milliseconds of a possible cached position\n  is acceptable to return. If set to 0, it means that the device\n  use a cached position and must attempt to retrieve the real current\n  If set to Infinity the device must return a cached position regardless\n  its age.\n\n  `positionOptions.maximumAge = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/maximumAge`"}, :name web.PositionOptions/maximum-age, :variadic false, :file "src/web/PositionOptions.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The PositionOptions.maximumAge property is a positive long value\n  the maximum age in milliseconds of a possible cached position\n  is acceptable to return. If set to 0, it means that the device\n  use a cached position and must attempt to retrieve the real current\n  If set to Infinity the device must return a cached position regardless\n  its age.\n\n  `positionOptions.maximumAge = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/maximumAge`"}, set-maximum-age! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PositionOptions.cljs", :line 59, :column 7, :end-line 59, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The PositionOptions.maximumAge property is a positive long value\n  the maximum age in milliseconds of a possible cached position\n  is acceptable to return. If set to 0, it means that the device\n  use a cached position and must attempt to retrieve the real current\n  If set to Infinity the device must return a cached position regardless\n  its age.\n\n  `positionOptions.maximumAge = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/maximumAge`"}, :name web.PositionOptions/set-maximum-age!, :variadic false, :file "src/web/PositionOptions.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The PositionOptions.maximumAge property is a positive long value\n  the maximum age in milliseconds of a possible cached position\n  is acceptable to return. If set to 0, it means that the device\n  use a cached position and must attempt to retrieve the real current\n  If set to Infinity the device must return a cached position regardless\n  its age.\n\n  `positionOptions.maximumAge = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/maximumAge`"}, timeout {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PositionOptions.cljs", :line 75, :column 7, :end-line 75, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The PositionOptions.timeout property is a positive long value\n  the maximum length of time (in milliseconds) the device is allowed\n  take in order to return a position. The default value is Infinity,\n  that getCurrentPosition() won't return until the position is\n\n  `positionOptions.timeout = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/timeout`"}, :name web.PositionOptions/timeout, :variadic false, :file "src/web/PositionOptions.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The PositionOptions.timeout property is a positive long value\n  the maximum length of time (in milliseconds) the device is allowed\n  take in order to return a position. The default value is Infinity,\n  that getCurrentPosition() won't return until the position is\n\n  `positionOptions.timeout = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/timeout`"}, set-timeout! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PositionOptions.cljs", :line 89, :column 7, :end-line 89, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The PositionOptions.timeout property is a positive long value\n  the maximum length of time (in milliseconds) the device is allowed\n  take in order to return a position. The default value is Infinity,\n  that getCurrentPosition() won't return until the position is\n\n  `positionOptions.timeout = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/timeout`"}, :name web.PositionOptions/set-timeout!, :variadic false, :file "src/web/PositionOptions.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The PositionOptions.timeout property is a positive long value\n  the maximum length of time (in milliseconds) the device is allowed\n  take in order to return a position. The default value is Infinity,\n  that getCurrentPosition() won't return until the position is\n\n  `positionOptions.timeout = timeLength`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PositionOptions/timeout`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PositionOptions interface describes an object containing\n  properties to pass as a parameter of `web.Geolocation.getCurrentPosition()`\n  `web.Geolocation.watchPosition()`."}
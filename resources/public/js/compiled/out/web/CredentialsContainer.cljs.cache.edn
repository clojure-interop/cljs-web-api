{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{get create}, :name web.CredentialsContainer, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {create {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/CredentialsContainer.cljs", :line 8, :column 7, :end-line 8, :end-column 13, :arglists (quote ([this & args])), :doc "Method.\n\n  The create() method of the `web.CredentialsContainer` interface\n  a `web.Promise` that resolves with a new `web.Credential` instance\n  on the provided options, or null if no Credential object can\n  created.\n\n  `var promise = CredentialsContainer.create([options])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.CredentialsContainer/create, :variadic true, :file "src/web/CredentialsContainer.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The create() method of the `web.CredentialsContainer` interface\n  a `web.Promise` that resolves with a new `web.Credential` instance\n  on the provided options, or null if no Credential object can\n  created.\n\n  `var promise = CredentialsContainer.create([options])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create`"}, get {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/CredentialsContainer.cljs", :line 22, :column 7, :end-line 22, :end-column 10, :arglists (quote ([this & args])), :doc "Method.\n\n  The get() method of the `web.CredentialsContainer` interface\n  a `web.Promise` to a single `web.Credential` instance that matches\n  provided parameters. If no match is found the Promise will resolve\n  null.\n\n  `var promise = CredentialsContainer.get([options])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.CredentialsContainer/get, :variadic true, :file "src/web/CredentialsContainer.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The get() method of the `web.CredentialsContainer` interface\n  a `web.Promise` to a single `web.Credential` instance that matches\n  provided parameters. If no match is found the Promise will resolve\n  null.\n\n  `var promise = CredentialsContainer.get([options])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get`"}, prevent-silent-access {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/CredentialsContainer.cljs", :line 36, :column 7, :end-line 36, :end-column 28, :arglists (quote ([this])), :doc "Method.\n\n  The preventSilentAccess() method of the `web.CredentialsContainer`\n  sets a flag that specifies whether automatic log in is allowed\n  future visits to the current origin, then returns an empty Promise.\n\n  `var Promise = CredentialsContainer.preventSilentAccess()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/preventSilentAccess`"}, :name web.CredentialsContainer/prevent-silent-access, :variadic false, :file "src/web/CredentialsContainer.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The preventSilentAccess() method of the `web.CredentialsContainer`\n  sets a flag that specifies whether automatic log in is allowed\n  future visits to the current origin, then returns an empty Promise.\n\n  `var Promise = CredentialsContainer.preventSilentAccess()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/preventSilentAccess`"}, store {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/CredentialsContainer.cljs", :line 49, :column 7, :end-line 49, :end-column 12, :arglists (quote ([this credential])), :doc "Method.\n\n  The store() method of the `web.CredentialsContainer` stores a\n  of credentials for the user inside a `web.Credential` instance,\n  this in a `web.Promise`.\n\n  `CredentialsContainer.store(Credential).then(function(Credential) { ... } )`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/store`"}, :name web.CredentialsContainer/store, :variadic false, :file "src/web/CredentialsContainer.cljs", :end-column 12, :method-params ([this credential]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this credential])), :doc "Method.\n\n  The store() method of the `web.CredentialsContainer` stores a\n  of credentials for the user inside a `web.Credential` instance,\n  this in a `web.Promise`.\n\n  `CredentialsContainer.store(Credential).then(function(Credential) { ... } )`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/store`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The CredentialsContainer interface of the the Credential Management\n  exposes methods to request credentials and notify the user agent\n  events such as successful sign in or sign out happen. This interface\n  accessible from `web.Navigator.credentials`."}
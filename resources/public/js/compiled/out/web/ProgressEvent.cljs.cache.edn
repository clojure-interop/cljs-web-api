{:rename-macros {}, :renames {}, :externs {ProgressEvent {}}, :use-macros {}, :excludes #{}, :name web.ProgressEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.ProgressEvent/constructor, :file "src/web/ProgressEvent.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :doc "Constructor.\n\n  The ProgressEvent() constructor returns a newly created `web.ProgressEvent`, representing the current completion of a long process.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/ProgressEvent`", :tag js}, init-progress-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 16, :column 7, :end-line 16, :end-column 26, :arglists (quote ([this type-arg can-bubble-arg cancelable-arg length-computable loaded total])), :doc "Method.\n\n  The ProgressEvent.initProgressEvent() method Initializes an animation\n  created using the deprecated `web.Document.createEvent(\\\"ProgressEvent\\\")`\n\n  `Progress.initProgressEvent(typeArg, canBubbleArg, cancelableArg, lengthComputable, loaded, total);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/initProgressEvent`"}, :name web.ProgressEvent/init-progress-event, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 26, :method-params ([this type-arg can-bubble-arg cancelable-arg length-computable loaded total]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 7, :fn-var true, :arglists (quote ([this type-arg can-bubble-arg cancelable-arg length-computable loaded total])), :doc "Method.\n\n  The ProgressEvent.initProgressEvent() method Initializes an animation\n  created using the deprecated `web.Document.createEvent(\\\"ProgressEvent\\\")`\n\n  `Progress.initProgressEvent(typeArg, canBubbleArg, cancelableArg, lengthComputable, loaded, total);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/initProgressEvent`"}, length-computable {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 28, :column 7, :end-line 28, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The ProgressEvent.lengthComputable read-only property is a `web.Boolean`\n  indicating if the resource concerned by the `web.ProgressEvent`\n  a length that can be calculated. If not, the `web.ProgressEvent.total`\n  has no significant value.\n\n  `flag = ProgressEvent.lengthComputable`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/lengthComputable`"}, :name web.ProgressEvent/length-computable, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ProgressEvent.lengthComputable read-only property is a `web.Boolean`\n  indicating if the resource concerned by the `web.ProgressEvent`\n  a length that can be calculated. If not, the `web.ProgressEvent.total`\n  has no significant value.\n\n  `flag = ProgressEvent.lengthComputable`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/lengthComputable`"}, set-length-computable! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 42, :column 7, :end-line 42, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The ProgressEvent.lengthComputable read-only property is a `web.Boolean`\n  indicating if the resource concerned by the `web.ProgressEvent`\n  a length that can be calculated. If not, the `web.ProgressEvent.total`\n  has no significant value.\n\n  `flag = ProgressEvent.lengthComputable`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/lengthComputable`"}, :name web.ProgressEvent/set-length-computable!, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ProgressEvent.lengthComputable read-only property is a `web.Boolean`\n  indicating if the resource concerned by the `web.ProgressEvent`\n  a length that can be calculated. If not, the `web.ProgressEvent.total`\n  has no significant value.\n\n  `flag = ProgressEvent.lengthComputable`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/lengthComputable`"}, loaded {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 56, :column 7, :end-line 56, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The ProgressEvent.loaded read-only property is an integer representing\n  amount of work already performed by the underlying process. The\n  of work done can be calculated with the property and ProgressEvent.total.\n  downloading a resource using HTTP, this only represent the part\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.loaded`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/loaded`"}, :name web.ProgressEvent/loaded, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ProgressEvent.loaded read-only property is an integer representing\n  amount of work already performed by the underlying process. The\n  of work done can be calculated with the property and ProgressEvent.total.\n  downloading a resource using HTTP, this only represent the part\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.loaded`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/loaded`"}, set-loaded! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 71, :column 7, :end-line 71, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The ProgressEvent.loaded read-only property is an integer representing\n  amount of work already performed by the underlying process. The\n  of work done can be calculated with the property and ProgressEvent.total.\n  downloading a resource using HTTP, this only represent the part\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.loaded`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/loaded`"}, :name web.ProgressEvent/set-loaded!, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ProgressEvent.loaded read-only property is an integer representing\n  amount of work already performed by the underlying process. The\n  of work done can be calculated with the property and ProgressEvent.total.\n  downloading a resource using HTTP, this only represent the part\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.loaded`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/loaded`"}, total {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 86, :column 7, :end-line 86, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The ProgressEvent.total read-only property is an integer representing\n  total amount of work that the underlying process is in the progress\n  performing. When downloading a resource using HTTP, this only\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.total`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/total`"}, :name web.ProgressEvent/total, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ProgressEvent.total read-only property is an integer representing\n  total amount of work that the underlying process is in the progress\n  performing. When downloading a resource using HTTP, this only\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.total`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/total`"}, set-total! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ProgressEvent.cljs", :line 100, :column 7, :end-line 100, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The ProgressEvent.total read-only property is an integer representing\n  total amount of work that the underlying process is in the progress\n  performing. When downloading a resource using HTTP, this only\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.total`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/total`"}, :name web.ProgressEvent/set-total!, :variadic false, :file "src/web/ProgressEvent.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ProgressEvent.total read-only property is an integer representing\n  total amount of work that the underlying process is in the progress\n  performing. When downloading a resource using HTTP, this only\n  the content itself, not headers and other overhead.\n\n  `value = ProgressEvent.total`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent/total`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ProgressEvent interface represents events measuring progress\n  an underlying process, like an HTTP request (for an XMLHttpRequest,\n  the loading of the underlying resource of an `web.<img>`, `web.<audio>`,\n  `web.<style>` or `web.<link>`)."}
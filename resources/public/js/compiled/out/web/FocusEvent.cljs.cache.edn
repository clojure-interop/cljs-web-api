{:rename-macros {}, :renames {}, :externs {FocusEvent {}}, :use-macros {}, :excludes #{}, :name web.FocusEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.FocusEvent/constructor, :file "src/web/FocusEvent.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FocusEvent.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The FocusEvent() constructor returns a newly created `web.FocusEvent` object with an optional `web.EventTarget`. When the event has both a source and a destination, the relatedTarget value must be set to the other target.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent`", :tag js}, related-target {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FocusEvent.cljs", :line 14, :column 7, :end-line 14, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The FocusEvent.relatedTarget read-only property represents a\n  target for this event, which will depend on the event itself.\n  some cases (like when tabbing in or out of a page), this property\n  be set to null for security reasons.\n\n  `secondTarget = focusEvent.relatedTarget`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/relatedTarget`"}, :name web.FocusEvent/related-target, :variadic false, :file "src/web/FocusEvent.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The FocusEvent.relatedTarget read-only property represents a\n  target for this event, which will depend on the event itself.\n  some cases (like when tabbing in or out of a page), this property\n  be set to null for security reasons.\n\n  `secondTarget = focusEvent.relatedTarget`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/relatedTarget`"}, set-related-target! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FocusEvent.cljs", :line 28, :column 7, :end-line 28, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The FocusEvent.relatedTarget read-only property represents a\n  target for this event, which will depend on the event itself.\n  some cases (like when tabbing in or out of a page), this property\n  be set to null for security reasons.\n\n  `secondTarget = focusEvent.relatedTarget`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/relatedTarget`"}, :name web.FocusEvent/set-related-target!, :variadic false, :file "src/web/FocusEvent.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The FocusEvent.relatedTarget read-only property represents a\n  target for this event, which will depend on the event itself.\n  some cases (like when tabbing in or out of a page), this property\n  be set to null for security reasons.\n\n  `secondTarget = focusEvent.relatedTarget`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/relatedTarget`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The FocusEvent interface represents focus-related events, including\n  blur, focusin, and focusout."}
{:rename-macros {}, :renames {}, :externs {MutationObserver {}}, :use-macros {}, :excludes #{}, :name web.MutationObserver, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.MutationObserver/constructor, :file "src/web/MutationObserver.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserver.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :doc "Constructor.\n\n  The DOM MutationObserver() constructor — part of the `web.MutationObserver` interface — creates and returns a new observer which invokes a specified callback when DOM events occur.\n\n  callback\n  A function which will be called on each DOM change that qualifies given the targeted node or subtree and options. The callback function takes as input two parameters: an array of `web.MutationRecord` objects describing each change that occurred and the MutationObserver which invoked the callback. See the example below for more details.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/MutationObserver`", :tag js}, observe {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserver.cljs", :line 19, :column 7, :end-line 19, :end-column 14, :arglists (quote ([this target options])), :doc "Method.\n\n  The `web.MutationObserver` method observe() configures the MutationObserver\n  to begin receiving notifications of changes to the DOM that match\n  given options.\n\n  `mutationObserver.observe(target, options)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe`"}, :name web.MutationObserver/observe, :variadic false, :file "src/web/MutationObserver.cljs", :end-column 14, :method-params ([this target options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this target options])), :doc "Method.\n\n  The `web.MutationObserver` method observe() configures the MutationObserver\n  to begin receiving notifications of changes to the DOM that match\n  given options.\n\n  `mutationObserver.observe(target, options)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe`"}, take-records {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserver.cljs", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([this])), :doc "Method.\n\n  The `web.MutationObserver` method takeRecords() returns a list\n  all matching DOM changes that have been detected but not yet\n  by the observer's callback function, leaving the mutation queue\n\n  `mutationRecords = mutationObserver.takeRecords()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/takeRecords`"}, :name web.MutationObserver/take-records, :variadic false, :file "src/web/MutationObserver.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The `web.MutationObserver` method takeRecords() returns a list\n  all matching DOM changes that have been detected but not yet\n  by the observer's callback function, leaving the mutation queue\n\n  `mutationRecords = mutationObserver.takeRecords()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/takeRecords`"}, disconnect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserver.cljs", :line 45, :column 7, :end-line 45, :end-column 17, :arglists (quote ([this])), :doc "Method.\n\n  The `web.MutationObserver` method disconnect() tells the observer\n  stop watching for mutations.\n\n  `mutationObserver.disconnect()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/disconnect`"}, :name web.MutationObserver/disconnect, :variadic false, :file "src/web/MutationObserver.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The `web.MutationObserver` method disconnect() tells the observer\n  stop watching for mutations.\n\n  `mutationObserver.disconnect()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/disconnect`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The `web.MutationObserver` interface provides the ability to\n  for changes being made to the DOM tree. It is designed as a replacement\n  the older Mutation Events feature which was part of the DOM3\n  specification."}
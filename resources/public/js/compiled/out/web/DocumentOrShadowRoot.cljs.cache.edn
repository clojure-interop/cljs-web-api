{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.DocumentOrShadowRoot, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {caret-position-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 7, :column 7, :end-line 7, :end-column 32, :arglists (quote ([this & args])), :doc "Method.\n\n  The caretPositionFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns a `web.CaretPosition` object, containing the DOM node,\n  with the caret and caret's character offset within that node.\n\n  `var caretPosition = document.caretPositionFromPoint(float x, float y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/caretPositionFromPoint`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.DocumentOrShadowRoot/caret-position-from-point, :variadic true, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 32, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The caretPositionFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns a `web.CaretPosition` object, containing the DOM node,\n  with the caret and caret's character offset within that node.\n\n  `var caretPosition = document.caretPositionFromPoint(float x, float y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/caretPositionFromPoint`"}, get-selection {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 46, :column 7, :end-line 46, :end-column 20, :arglists (quote ([this])), :doc "Method.\n\n  The getSelection() property of the `web.DocumentOrShadowRoot`\n  returns a `web.Selection` object representing the range of text\n  by the user, or the current position of the caret.\n\n  `var selection = documentOrShadowRootInstance.getSelection()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection`"}, :name web.DocumentOrShadowRoot/get-selection, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getSelection() property of the `web.DocumentOrShadowRoot`\n  returns a `web.Selection` object representing the range of text\n  by the user, or the current position of the caret.\n\n  `var selection = documentOrShadowRootInstance.getSelection()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection`"}, set-style-sheets! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 176, :column 7, :end-line 176, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, :name web.DocumentOrShadowRoot/set-style-sheets!, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, pointer-lock-element {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 137, :column 7, :end-line 137, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The pointerLockElement property of the `web.Document` and `web.ShadowRoot`\n  provides the element set as the target for mouse events while\n  pointer is locked. It is null if lock is pending, pointer is\n  or the target is in another document.\n\n  `var element = document.pointerLockElement;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/pointerLockElement`"}, :name web.DocumentOrShadowRoot/pointer-lock-element, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pointerLockElement property of the `web.Document` and `web.ShadowRoot`\n  provides the element set as the target for mouse events while\n  pointer is locked. It is null if lock is pending, pointer is\n  or the target is in another document.\n\n  `var element = document.pointerLockElement;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/pointerLockElement`"}, node-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 71, :column 7, :end-line 71, :end-column 22, :arglists (quote ([this x y])), :doc "Method.\n\n  The nodeFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns the topmost node at the specified coordinates (relative\n  the viewport).\n\n  `var node = document.nodeFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/nodeFromPoint`"}, :name web.DocumentOrShadowRoot/node-from-point, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 22, :method-params ([this x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this x y])), :doc "Method.\n\n  The nodeFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns the topmost node at the specified coordinates (relative\n  the viewport).\n\n  `var node = document.nodeFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/nodeFromPoint`"}, set-pointer-lock-element! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 151, :column 7, :end-line 151, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The pointerLockElement property of the `web.Document` and `web.ShadowRoot`\n  provides the element set as the target for mouse events while\n  pointer is locked. It is null if lock is pending, pointer is\n  or the target is in another document.\n\n  `var element = document.pointerLockElement;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/pointerLockElement`"}, :name web.DocumentOrShadowRoot/set-pointer-lock-element!, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 151, :end-line 151, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pointerLockElement property of the `web.Document` and `web.ShadowRoot`\n  provides the element set as the target for mouse events while\n  pointer is locked. It is null if lock is pending, pointer is\n  or the target is in another document.\n\n  `var element = document.pointerLockElement;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/pointerLockElement`"}, ms-elements-from-rect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 59, :column 7, :end-line 59, :end-column 28, :arglists (quote ([this left top width height ret-val])), :doc "Method.\n\n  The msElementsFromRect method returns the node list of elements\n  are under a rectangle defined by left, top, width, and height.\n\n  `object.msElementsFromRect(left, top, width, height, retVal)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/msElementsFromRect`"}, :name web.DocumentOrShadowRoot/ms-elements-from-rect, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 28, :method-params ([this left top width height ret-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 6, :fn-var true, :arglists (quote ([this left top width height ret-val])), :doc "Method.\n\n  The msElementsFromRect method returns the node list of elements\n  are under a rectangle defined by left, top, width, and height.\n\n  `object.msElementsFromRect(left, top, width, height, retVal)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/msElementsFromRect`"}, elements-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 33, :column 7, :end-line 33, :end-column 26, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementsFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns an array of all elements at the specified coordinates\n  to the viewport).\n\n  `var elements = document.elementsFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementsFromPoint`"}, :name web.DocumentOrShadowRoot/elements-from-point, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 26, :method-params ([this x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementsFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns an array of all elements at the specified coordinates\n  to the viewport).\n\n  `var elements = document.elementsFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementsFromPoint`"}, element-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 20, :column 7, :end-line 20, :end-column 25, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementFromPoint() method—available on both the `web.Document`\n  `web.ShadowRoot` objects—returns the topmost `web.Element` at\n  specified coordinates (relative to the viewport).\n\n  `var element = document.elementFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementFromPoint`"}, :name web.DocumentOrShadowRoot/element-from-point, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 25, :method-params ([this x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementFromPoint() method—available on both the `web.Document`\n  `web.ShadowRoot` objects—returns the topmost `web.Element` at\n  specified coordinates (relative to the viewport).\n\n  `var element = document.elementFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementFromPoint`"}, set-active-element! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 110, :column 7, :end-line 110, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}, :name web.DocumentOrShadowRoot/set-active-element!, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}, nodes-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 84, :column 7, :end-line 84, :end-column 23, :arglists (quote ([this x y])), :doc "Method.\n\n  The nodesFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns an array of all nodes at the specified coordinates (relative\n  the viewport).\n\n  `var nodes = document.nodesFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/nodesFromPoint`"}, :name web.DocumentOrShadowRoot/nodes-from-point, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 23, :method-params ([this x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this x y])), :doc "Method.\n\n  The nodesFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns an array of all nodes at the specified coordinates (relative\n  the viewport).\n\n  `var nodes = document.nodesFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/nodesFromPoint`"}, fullscreen-element {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 123, :column 7, :end-line 123, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The DocumentOrShadowRoot.fullscreenElement read-only property\n  the `web.Element` that is currently being presented in full-screen\n  in this document, or null if full-screen mode is not currently\n  use.\n\n  `var element = document.fullscreenElement;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement`"}, :name web.DocumentOrShadowRoot/fullscreen-element, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The DocumentOrShadowRoot.fullscreenElement read-only property\n  the `web.Element` that is currently being presented in full-screen\n  in this document, or null if full-screen mode is not currently\n  use.\n\n  `var element = document.fullscreenElement;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement`"}, style-sheets {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 165, :column 7, :end-line 165, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, :name web.DocumentOrShadowRoot/style-sheets, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, active-element {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DocumentOrShadowRoot.cljs", :line 97, :column 7, :end-line 97, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}, :name web.DocumentOrShadowRoot/active-element, :variadic false, :file "src/web/DocumentOrShadowRoot.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The DocumentOrShadowRoot mixin of the Shadow DOM API provides\n  that are shared between documents and shadow roots. The following\n  are included in both `web.Document` and `web.ShadowRoot`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.ServiceWorkerGlobalScope, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {onnotificationclose {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 200, :column 7, :end-line 200, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclose property is\n  event handler called whenever the notificationclose event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  closes a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclose = function(NotificationEvent) { ... };\n  ServiceWorkerGlobalScope.addEventListener('notificationclose', function(NotificationEvent) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclose`"}, :name web.ServiceWorkerGlobalScope/onnotificationclose, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclose property is\n  event handler called whenever the notificationclose event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  closes a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclose = function(NotificationEvent) { ... };\n  ServiceWorkerGlobalScope.addEventListener('notificationclose', function(NotificationEvent) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclose`"}, set-oninstall! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 135, :column 7, :end-line 135, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The oninstall property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an install event occurs (when\n  service worker installs). This happens before activation.\n\n  `ServiceWorkerGlobalScope.oninstall = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/oninstall`"}, :name web.ServiceWorkerGlobalScope/set-oninstall!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oninstall property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an install event occurs (when\n  service worker installs). This happens before activation.\n\n  `ServiceWorkerGlobalScope.oninstall = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/oninstall`"}, onnotificationclick {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 172, :column 7, :end-line 172, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclick property is\n  event handler called whenever the notificationclick event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  clicks on a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclick = function(NotificationEvent) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclick`"}, :name web.ServiceWorkerGlobalScope/onnotificationclick, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclick property is\n  event handler called whenever the notificationclick event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  clicks on a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclick = function(NotificationEvent) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclick`"}, registration {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 288, :column 7, :end-line 288, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The registration read-only property of the `web.ServiceWorkerGlobalScope`\n  returns a reference to the `web.ServiceWorkerRegistration` object,\n  represents the service worker's registration.\n\n  `serviceWorkerRegistration = self.registration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration`"}, :name web.ServiceWorkerGlobalScope/registration, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 288, :end-line 288, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The registration read-only property of the `web.ServiceWorkerGlobalScope`\n  returns a reference to the `web.ServiceWorkerRegistration` object,\n  represents the service worker's registration.\n\n  `serviceWorkerRegistration = self.registration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration`"}, set-clients! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 56, :column 7, :end-line 56, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The clients read-only property of the `web.ServiceWorkerGlobalScope`\n  returns the Clients object associated with the service worker.\n\n  `swClients = self.clients`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients`"}, :name web.ServiceWorkerGlobalScope/set-clients!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The clients read-only property of the `web.ServiceWorkerGlobalScope`\n  returns the Clients object associated with the service worker.\n\n  `swClients = self.clients`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients`"}, onpushsubscriptionchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 258, :column 7, :end-line 258, :end-column 31, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpushsubscriptionchange event of\n  `web.ServiceWorkerGlobalScope` interface is fired to indicate\n  change in push subscription that was triggered outside the application's\n  e.g. when browser refresh the push subscription.\n\n  `ServiceWorkerGlobalScope.onpushsubscriptionchange = function() { ... }\n  self.addEventListener('pushsubscriptionchange', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpushsubscriptionchange`"}, :name web.ServiceWorkerGlobalScope/onpushsubscriptionchange, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 31, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpushsubscriptionchange event of\n  `web.ServiceWorkerGlobalScope` interface is fired to indicate\n  change in push subscription that was triggered outside the application's\n  e.g. when browser refresh the push subscription.\n\n  `ServiceWorkerGlobalScope.onpushsubscriptionchange = function() { ... }\n  self.addEventListener('pushsubscriptionchange', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpushsubscriptionchange`"}, set-onfetch! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 109, :column 7, :end-line 109, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onfetch property of the `web.ServiceWorkerGlobalScope` interface\n  an event handler fired whenever a fetch event occurs (usually\n  the `web.ServiceWorkerGlobalScope.fetch` method is called.)\n\n  `ServiceWorkerGlobalScope.onfetch = function(FetchEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onfetch`"}, :name web.ServiceWorkerGlobalScope/set-onfetch!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onfetch property of the `web.ServiceWorkerGlobalScope` interface\n  an event handler fired whenever a fetch event occurs (usually\n  the `web.ServiceWorkerGlobalScope.fetch` method is called.)\n\n  `ServiceWorkerGlobalScope.onfetch = function(FetchEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onfetch`"}, set-onpushsubscriptionchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 273, :column 7, :end-line 273, :end-column 36, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpushsubscriptionchange event of\n  `web.ServiceWorkerGlobalScope` interface is fired to indicate\n  change in push subscription that was triggered outside the application's\n  e.g. when browser refresh the push subscription.\n\n  `ServiceWorkerGlobalScope.onpushsubscriptionchange = function() { ... }\n  self.addEventListener('pushsubscriptionchange', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpushsubscriptionchange`"}, :name web.ServiceWorkerGlobalScope/set-onpushsubscriptionchange!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 36, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpushsubscriptionchange event of\n  `web.ServiceWorkerGlobalScope` interface is fired to indicate\n  change in push subscription that was triggered outside the application's\n  e.g. when browser refresh the push subscription.\n\n  `ServiceWorkerGlobalScope.onpushsubscriptionchange = function() { ... }\n  self.addEventListener('pushsubscriptionchange', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpushsubscriptionchange`"}, caches {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The `web.ServiceWorkerGlobalScope.caches` read-only property\n  the `web.CacheStorage` object associated with the service worker.\n\n  `var myCacheStorage = self.caches;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/caches`"}, :name web.ServiceWorkerGlobalScope/caches, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.ServiceWorkerGlobalScope.caches` read-only property\n  the `web.CacheStorage` object associated with the service worker.\n\n  `var myCacheStorage = self.caches;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/caches`"}, onfetch {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 96, :column 7, :end-line 96, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onfetch property of the `web.ServiceWorkerGlobalScope` interface\n  an event handler fired whenever a fetch event occurs (usually\n  the `web.ServiceWorkerGlobalScope.fetch` method is called.)\n\n  `ServiceWorkerGlobalScope.onfetch = function(FetchEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onfetch`"}, :name web.ServiceWorkerGlobalScope/onfetch, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onfetch property of the `web.ServiceWorkerGlobalScope` interface\n  an event handler fired whenever a fetch event occurs (usually\n  the `web.ServiceWorkerGlobalScope.fetch` method is called.)\n\n  `ServiceWorkerGlobalScope.onfetch = function(FetchEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onfetch`"}, oninstall {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 122, :column 7, :end-line 122, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The oninstall property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an install event occurs (when\n  service worker installs). This happens before activation.\n\n  `ServiceWorkerGlobalScope.oninstall = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/oninstall`"}, :name web.ServiceWorkerGlobalScope/oninstall, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The oninstall property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an install event occurs (when\n  service worker installs). This happens before activation.\n\n  `ServiceWorkerGlobalScope.oninstall = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/oninstall`"}, onmessage {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 148, :column 7, :end-line 148, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onmessage event of the `web.ServiceWorkerGlobalScope`\n  is called whenever incoming messages are received.\n\n  `ServiceWorkerGlobalScope.onmessage = function(MessageEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onmessage`"}, :name web.ServiceWorkerGlobalScope/onmessage, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onmessage event of the `web.ServiceWorkerGlobalScope`\n  is called whenever incoming messages are received.\n\n  `ServiceWorkerGlobalScope.onmessage = function(MessageEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onmessage`"}, set-caches! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.ServiceWorkerGlobalScope.caches` read-only property\n  the `web.CacheStorage` object associated with the service worker.\n\n  `var myCacheStorage = self.caches;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/caches`"}, :name web.ServiceWorkerGlobalScope/set-caches!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.ServiceWorkerGlobalScope.caches` read-only property\n  the `web.CacheStorage` object associated with the service worker.\n\n  `var myCacheStorage = self.caches;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/caches`"}, set-onmessage! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 160, :column 7, :end-line 160, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onmessage event of the `web.ServiceWorkerGlobalScope`\n  is called whenever incoming messages are received.\n\n  `ServiceWorkerGlobalScope.onmessage = function(MessageEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onmessage`"}, :name web.ServiceWorkerGlobalScope/set-onmessage!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onmessage event of the `web.ServiceWorkerGlobalScope`\n  is called whenever incoming messages are received.\n\n  `ServiceWorkerGlobalScope.onmessage = function(MessageEvent) { ... }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onmessage`"}, clients {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 44, :column 7, :end-line 44, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The clients read-only property of the `web.ServiceWorkerGlobalScope`\n  returns the Clients object associated with the service worker.\n\n  `swClients = self.clients`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients`"}, :name web.ServiceWorkerGlobalScope/clients, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The clients read-only property of the `web.ServiceWorkerGlobalScope`\n  returns the Clients object associated with the service worker.\n\n  `swClients = self.clients`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/clients`"}, skip-waiting {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 6, :column 7, :end-line 6, :end-column 19, :arglists (quote ([this & args])), :doc "Method.\n\n  The ServiceWorkerGlobalScope.skipWaiting() method of the `web.ServiceWorkerGlobalScope`\n  the waiting service worker to become the active service worker.\n\n  `ServiceWorkerGlobalScope.skipWaiting().then(function() {\n  //Do something\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ServiceWorkerGlobalScope/skip-waiting, :variadic true, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The ServiceWorkerGlobalScope.skipWaiting() method of the `web.ServiceWorkerGlobalScope`\n  the waiting service worker to become the active service worker.\n\n  `ServiceWorkerGlobalScope.skipWaiting().then(function() {\n  //Do something\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/skipWaiting`"}, set-onnotificationclick! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 186, :column 7, :end-line 186, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclick property is\n  event handler called whenever the notificationclick event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  clicks on a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclick = function(NotificationEvent) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclick`"}, :name web.ServiceWorkerGlobalScope/set-onnotificationclick!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclick property is\n  event handler called whenever the notificationclick event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  clicks on a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclick = function(NotificationEvent) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclick`"}, set-onnotificationclose! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 215, :column 7, :end-line 215, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclose property is\n  event handler called whenever the notificationclose event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  closes a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclose = function(NotificationEvent) { ... };\n  ServiceWorkerGlobalScope.addEventListener('notificationclose', function(NotificationEvent) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclose`"}, :name web.ServiceWorkerGlobalScope/set-onnotificationclose!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onnotificationclose property is\n  event handler called whenever the notificationclose event is\n  on the `web.ServiceWorkerGlobalScope` object, that is when a\n  closes a displayed notification spawned by `web.ServiceWorkerRegistration.showNotification()`.\n\n  `ServiceWorkerGlobalScope.onnotificationclose = function(NotificationEvent) { ... };\n  ServiceWorkerGlobalScope.addEventListener('notificationclose', function(NotificationEvent) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onnotificationclose`"}, onactivate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 68, :column 7, :end-line 68, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The onactivate property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an activate event occurs (when\n  service worker activates). This happens after installation, when\n  page to be controlled by the service worker refreshes.\n\n  `ServiceWorkerGlobalScope.onactivate = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onactivate`"}, :name web.ServiceWorkerGlobalScope/onactivate, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onactivate property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an activate event occurs (when\n  service worker activates). This happens after installation, when\n  page to be controlled by the service worker refreshes.\n\n  `ServiceWorkerGlobalScope.onactivate = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onactivate`"}, set-onpush! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 244, :column 7, :end-line 244, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpush event of the `web.ServiceWorkerGlobalScope`\n  is fired whenever a push message is received by a service worker\n  a push server.\n\n  `ServiceWorkerGlobalScope.onpush = function(PushEvent) { ... }\n  self.addEventListener('push', function(PushEvent) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpush`"}, :name web.ServiceWorkerGlobalScope/set-onpush!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 244, :end-line 244, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpush event of the `web.ServiceWorkerGlobalScope`\n  is fired whenever a push message is received by a service worker\n  a push server.\n\n  `ServiceWorkerGlobalScope.onpush = function(PushEvent) { ... }\n  self.addEventListener('push', function(PushEvent) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpush`"}, set-registration! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 301, :column 7, :end-line 301, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The registration read-only property of the `web.ServiceWorkerGlobalScope`\n  returns a reference to the `web.ServiceWorkerRegistration` object,\n  represents the service worker's registration.\n\n  `serviceWorkerRegistration = self.registration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration`"}, :name web.ServiceWorkerGlobalScope/set-registration!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The registration read-only property of the `web.ServiceWorkerGlobalScope`\n  returns a reference to the `web.ServiceWorkerRegistration` object,\n  represents the service worker's registration.\n\n  `serviceWorkerRegistration = self.registration`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/registration`"}, set-onactivate! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 82, :column 7, :end-line 82, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The onactivate property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an activate event occurs (when\n  service worker activates). This happens after installation, when\n  page to be controlled by the service worker refreshes.\n\n  `ServiceWorkerGlobalScope.onactivate = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onactivate`"}, :name web.ServiceWorkerGlobalScope/set-onactivate!, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onactivate property of the `web.ServiceWorkerGlobalScope`\n  is an event handler fired whenever an activate event occurs (when\n  service worker activates). This happens after installation, when\n  page to be controlled by the service worker refreshes.\n\n  `ServiceWorkerGlobalScope.onactivate = function(event) { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onactivate`"}, onpush {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerGlobalScope.cljs", :line 230, :column 7, :end-line 230, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpush event of the `web.ServiceWorkerGlobalScope`\n  is fired whenever a push message is received by a service worker\n  a push server.\n\n  `ServiceWorkerGlobalScope.onpush = function(PushEvent) { ... }\n  self.addEventListener('push', function(PushEvent) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpush`"}, :name web.ServiceWorkerGlobalScope/onpush, :variadic false, :file "src/web/ServiceWorkerGlobalScope.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ServiceWorkerGlobalScope.onpush event of the `web.ServiceWorkerGlobalScope`\n  is fired whenever a push message is received by a service worker\n  a push server.\n\n  `ServiceWorkerGlobalScope.onpush = function(PushEvent) { ... }\n  self.addEventListener('push', function(PushEvent) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope/onpush`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ServiceWorkerGlobalScope interface of the ServiceWorker API\n  the global execution context of a service worker."}
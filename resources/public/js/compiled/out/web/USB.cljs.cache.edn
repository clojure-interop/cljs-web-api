{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.USB, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-devices {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USB.cljs", :line 6, :column 7, :end-line 6, :end-column 18, :arglists (quote ([this])), :doc "Method.\n\n  The getDevices method of the `web.USB` interface returns a `web.Promise`\n  resolves with an array of `web.USBDevice` objects for paired\n  devices. For information on pairing devices, see `web.USB.requestDevice()`.\n\n  `var promise[] = USB.getDevices();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/getDevices`"}, :name web.USB/get-devices, :variadic false, :file "src/web/USB.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getDevices method of the `web.USB` interface returns a `web.Promise`\n  resolves with an array of `web.USBDevice` objects for paired\n  devices. For information on pairing devices, see `web.USB.requestDevice()`.\n\n  `var promise[] = USB.getDevices();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/getDevices`"}, onconnect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USB.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The onconnect property of the `web.USB` interface is an event\n  called whenever a paired device is connected.\n\n  `USB.onconnect = connectFunction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/onconnect`"}, :name web.USB/onconnect, :variadic false, :file "src/web/USB.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The onconnect property of the `web.USB` interface is an event\n  called whenever a paired device is connected.\n\n  `USB.onconnect = connectFunction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/onconnect`"}, ondisconnect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USB.cljs", :line 31, :column 7, :end-line 31, :end-column 19, :arglists (quote ([this])), :doc "Method.\n\n  The ondisconnect property of the `web.USB` is an event handler\n  whenever a paired device is disconnected.\n\n  `USB.ondisconnect = disconnectFunction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/ondisconnect`"}, :name web.USB/ondisconnect, :variadic false, :file "src/web/USB.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The ondisconnect property of the `web.USB` is an event handler\n  whenever a paired device is disconnected.\n\n  `USB.ondisconnect = disconnectFunction`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/ondisconnect`"}, request-device {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/USB.cljs", :line 43, :column 7, :end-line 43, :end-column 21, :arglists (quote ([this & args])), :doc "Method.\n\n  The requestDevice() method of the `web.USB` interface returns\n  `web.Promise` that resolves with an instance of `web.USBDevice`\n  the specified device is found. Calling this function triggers\n  user agent's pairing flow.\n\n  `var promise = USB.requestDevice([filters])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/requestDevice`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.USB/request-device, :variadic true, :file "src/web/USB.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The requestDevice() method of the `web.USB` interface returns\n  `web.Promise` that resolves with an instance of `web.USBDevice`\n  the specified device is found. Calling this function triggers\n  user agent's pairing flow.\n\n  `var promise = USB.requestDevice([filters])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/USB/requestDevice`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The USB interface of the WebUSB API provides attributes and methods\n  finding and connecting USB devices from a web page."}
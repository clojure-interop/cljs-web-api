{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.GlobalEventHandlers, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {oncanplaythrough {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 220, :column 7, :end-line 220, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The oncanplaythrough property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing canplaythrough events.\n\n  `element.oncanplaythrough = handlerFunction;\n  var handlerFunction = element.oncanplaythrough;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplaythrough`"}, :name web.GlobalEventHandlers/oncanplaythrough, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The oncanplaythrough property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing canplaythrough events.\n\n  `element.oncanplaythrough = handlerFunction;\n  var handlerFunction = element.oncanplaythrough;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplaythrough`"}, onemptied {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1804, :column 7, :end-line 1804, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onemptied property sets and returns the event handler for\n  emptied event.\n\n  `element.onemptied = handlerFunction;\n  var handlerFunction = element.onemptied;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onemptied`"}, :name web.GlobalEventHandlers/onemptied, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1804, :end-line 1804, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onemptied property sets and returns the event handler for\n  emptied event.\n\n  `element.onemptied = handlerFunction;\n  var handlerFunction = element.onemptied;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onemptied`"}, set-onselectionchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1410, :column 7, :end-line 1410, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The onselectionchange property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes selectionchange events.\n\n  `object.onselectionchange = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectionchange`"}, :name web.GlobalEventHandlers/set-onselectionchange!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1410, :end-line 1410, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onselectionchange property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes selectionchange events.\n\n  `object.onselectionchange = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectionchange`"}, set-onmouseenter! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 867, :column 7, :end-line 867, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseenter property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing mouseenter events.\n\n  `element.onmouseenter = handlerFunction;\n  var handlerFunction = element.onmouseenter;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseenter`"}, :name web.GlobalEventHandlers/set-onmouseenter!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 867, :end-line 867, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseenter property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing mouseenter events.\n\n  `element.onmouseenter = handlerFunction;\n  var handlerFunction = element.onmouseenter;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseenter`"}, oncanplay {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 190, :column 7, :end-line 190, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The oncanplay property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing canplay events.\n\n  `element.oncanplay = handlerFunction;\n  var handlerFunction = element.oncanplay;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplay`"}, :name web.GlobalEventHandlers/oncanplay, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The oncanplay property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing canplay events.\n\n  `element.oncanplay = handlerFunction;\n  var handlerFunction = element.oncanplay;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplay`"}, onscroll {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1350, :column 7, :end-line 1350, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onscroll property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes scroll events.\n\n  `target.onscroll = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onscroll`"}, :name web.GlobalEventHandlers/onscroll, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1350, :end-line 1350, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onscroll property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes scroll events.\n\n  `target.onscroll = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onscroll`"}, set-ondrop! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1793, :column 7, :end-line 1793, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the drop event.\n\n  `var dropHandler = targetElement.ondrop;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop`"}, :name web.GlobalEventHandlers/set-ondrop!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1793, :end-line 1793, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the drop event.\n\n  `var dropHandler = targetElement.ondrop;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop`"}, set-onpointermove! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1204, :column 7, :end-line 1204, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointermove property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointermove events.\n\n  `targetElement.onpointermove = moveHandler;\n\n  var moveHandler = targetElement.onpointermove;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointermove`"}, :name web.GlobalEventHandlers/set-onpointermove!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1204, :end-line 1204, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointermove property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointermove events.\n\n  `targetElement.onpointermove = moveHandler;\n\n  var moveHandler = targetElement.onpointermove;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointermove`"}, onpause {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1008, :column 7, :end-line 1008, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onpause property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing pause events.\n\n  `element.onpause = handlerFunction;\n  var handlerFunction = element.onpause;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpause`"}, :name web.GlobalEventHandlers/onpause, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1008, :end-line 1008, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onpause property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing pause events.\n\n  `element.onpause = handlerFunction;\n  var handlerFunction = element.onpause;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpause`"}, onsubmit {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1446, :column 7, :end-line 1446, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onsubmit property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes submit events.\n\n  `target.onsubmit = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onsubmit`"}, :name web.GlobalEventHandlers/onsubmit, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1446, :end-line 1446, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onsubmit property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes submit events.\n\n  `target.onsubmit = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onsubmit`"}, onmousemove {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 912, :column 7, :end-line 912, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The onmousemove property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mousemove events.\n\n  `target.onmousemove = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousemove`"}, :name web.GlobalEventHandlers/onmousemove, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 912, :end-line 912, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onmousemove property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mousemove events.\n\n  `target.onmousemove = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousemove`"}, set-onpointerdown! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1112, :column 7, :end-line 1112, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.GlobalEventHandlers` event handler onpointerdown is\n  to specify the event handler for the pointerdown event, which\n  fired when the pointing device is initially pressed. This event\n  be sent to `web.Window`, `web.Document`, and `web.Element` objects.\n\n  `target.onpointerdown = downHandler;\n\n  var downHandler = target.onpointerdown;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerdown`"}, :name web.GlobalEventHandlers/set-onpointerdown!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1112, :end-line 1112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.GlobalEventHandlers` event handler onpointerdown is\n  to specify the event handler for the pointerdown event, which\n  fired when the pointing device is initially pressed. This event\n  be sent to `web.Window`, `web.Document`, and `web.Element` objects.\n\n  `target.onpointerdown = downHandler;\n\n  var downHandler = target.onpointerdown;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerdown`"}, set-onkeyup! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 650, :column 7, :end-line 650, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onkeyup property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes keyup events.\n\n  `target.onkeyup = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeyup`"}, :name web.GlobalEventHandlers/set-onkeyup!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 650, :end-line 650, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onkeyup property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes keyup events.\n\n  `target.onkeyup = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeyup`"}, ondragenter {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1670, :column 7, :end-line 1670, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the dragenter event.\n\n  `var dragenterHandler = targetElement.ondragenter;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragenter`"}, :name web.GlobalEventHandlers/ondragenter, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1670, :end-line 1670, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the dragenter event.\n\n  `var dragenterHandler = targetElement.ondragenter;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragenter`"}, set-onpointerout! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1232, :column 7, :end-line 1232, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointerout property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerout events.\n\n  `targetElement.onpointerout = outHandler;\n\n  var outHandler = targetElement.onpointerout;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerout`"}, :name web.GlobalEventHandlers/set-onpointerout!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1232, :end-line 1232, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointerout property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerout events.\n\n  `targetElement.onpointerout = outHandler;\n\n  var outHandler = targetElement.onpointerout;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerout`"}, onanimationend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 58, :column 7, :end-line 58, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The onanimationend property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationend events.\n\n  `var animEndHandler = target.onanimationend;\n\n  target.onanimationend = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationend`"}, :name web.GlobalEventHandlers/onanimationend, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onanimationend property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationend events.\n\n  `var animEndHandler = target.onanimationend;\n\n  target.onanimationend = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationend`"}, ondragstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1760, :column 7, :end-line 1760, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the dragstart event.\n\n  `var dragstartHandler = targetElement.ondragstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragstart`"}, :name web.GlobalEventHandlers/ondragstart, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1760, :end-line 1760, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the dragstart event.\n\n  `var dragstartHandler = targetElement.ondragstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragstart`"}, onselectstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1422, :column 7, :end-line 1422, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The onselectstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes selectstart events.\n\n  `object.onselectstart = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectstart`"}, :name web.GlobalEventHandlers/onselectstart, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1422, :end-line 1422, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onselectstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes selectstart events.\n\n  `object.onselectstart = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectstart`"}, set-onselect! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1386, :column 7, :end-line 1386, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onselect property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes `web.select`.\n\n  `target.onselect = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselect`"}, :name web.GlobalEventHandlers/set-onselect!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1386, :end-line 1386, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onselect property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes `web.select`.\n\n  `target.onselect = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselect`"}, set-onselectstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1434, :column 7, :end-line 1434, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The onselectstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes selectstart events.\n\n  `object.onselectstart = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectstart`"}, :name web.GlobalEventHandlers/set-onselectstart!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1434, :end-line 1434, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onselectstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes selectstart events.\n\n  `object.onselectstart = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectstart`"}, onplay {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1038, :column 7, :end-line 1038, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The onplay property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing play events.\n\n  `element.onplay = handlerFunction;\n  var handlerFunction = element.onplay;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplay`"}, :name web.GlobalEventHandlers/onplay, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1038, :end-line 1038, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onplay property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing play events.\n\n  `element.onplay = handlerFunction;\n  var handlerFunction = element.onplay;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplay`"}, onloadstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 776, :column 7, :end-line 776, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The onloadstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` representing the code to be called when\n  loadstart event is raised (when progress has begun on the loading\n  a resource.)\n\n  `img.onloadstart = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadstart`"}, :name web.GlobalEventHandlers/onloadstart, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 776, :end-line 776, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onloadstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` representing the code to be called when\n  loadstart event is raised (when progress has begun on the loading\n  a resource.)\n\n  `img.onloadstart = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadstart`"}, set-onloadstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 790, :column 7, :end-line 790, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The onloadstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` representing the code to be called when\n  loadstart event is raised (when progress has begun on the loading\n  a resource.)\n\n  `img.onloadstart = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadstart`"}, :name web.GlobalEventHandlers/set-onloadstart!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 790, :end-line 790, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onloadstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` representing the code to be called when\n  loadstart event is raised (when progress has begun on the loading\n  a resource.)\n\n  `img.onloadstart = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadstart`"}, onpointercancel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1068, :column 7, :end-line 1068, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The onpointercancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes pointercancel events.\n\n  `targetElement.onpointercancel = cancelHandler;\n\n  var cancelHandler = targetElement.onpointercancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointercancel`"}, :name web.GlobalEventHandlers/onpointercancel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1068, :end-line 1068, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onpointercancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes pointercancel events.\n\n  `targetElement.onpointercancel = cancelHandler;\n\n  var cancelHandler = targetElement.onpointercancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointercancel`"}, set-onscroll! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1362, :column 7, :end-line 1362, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onscroll property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes scroll events.\n\n  `target.onscroll = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onscroll`"}, :name web.GlobalEventHandlers/set-onscroll!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1362, :end-line 1362, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onscroll property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes scroll events.\n\n  `target.onscroll = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onscroll`"}, onpointerleave {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1156, :column 7, :end-line 1156, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The global event handler for the pointerleave event, which is\n  to a `web.Node` when the pointer (mouse cursor, fingertip, etc.)\n  its hit test area (for example, if the cursor exits an `web.Element`\n  `web.Window`'s content area). This event is part of the Pointer\n  API.\n\n  `EventTarget.onpointerleave = leaveHandler;\n\n  var leaveHandler = EventTarget.onpointerleave;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerleave`"}, :name web.GlobalEventHandlers/onpointerleave, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1156, :end-line 1156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The global event handler for the pointerleave event, which is\n  to a `web.Node` when the pointer (mouse cursor, fingertip, etc.)\n  its hit test area (for example, if the cursor exits an `web.Element`\n  `web.Window`'s content area). This event is part of the Pointer\n  API.\n\n  `EventTarget.onpointerleave = leaveHandler;\n\n  var leaveHandler = EventTarget.onpointerleave;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerleave`"}, set-onclose! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 314, :column 7, :end-line 314, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onclose property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing close events sent to a `web.<dialog>`\n\n  `target.onclose = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclose`"}, :name web.GlobalEventHandlers/set-onclose!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onclose property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing close events sent to a `web.<dialog>`\n\n  `target.onclose = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclose`"}, onmouseup {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 984, :column 7, :end-line 984, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseup property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseup events.\n\n  `target.onmouseup = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseup`"}, :name web.GlobalEventHandlers/onmouseup, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 984, :end-line 984, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseup property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseup events.\n\n  `target.onmouseup = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseup`"}, onselectionchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1398, :column 7, :end-line 1398, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The onselectionchange property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes selectionchange events.\n\n  `object.onselectionchange = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectionchange`"}, :name web.GlobalEventHandlers/onselectionchange, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1398, :end-line 1398, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onselectionchange property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes selectionchange events.\n\n  `object.onselectionchange = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselectionchange`"}, set-oninput! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 550, :column 7, :end-line 550, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The oninput property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes input events on the `web.<input>`,\n  and `web.<textarea>` elements. It also handles these events on\n  where `web.contenteditable` or `web.designMode` are turned on.\n\n  `target.oninput = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninput`"}, :name web.GlobalEventHandlers/set-oninput!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 550, :end-line 550, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oninput property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes input events on the `web.<input>`,\n  and `web.<textarea>` elements. It also handles these events on\n  where `web.contenteditable` or `web.designMode` are turned on.\n\n  `target.oninput = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninput`"}, set-ontouchend! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1875, :column 7, :end-line 1875, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the touchend event.\n\n  `var endHandler = targetElement.ontouchend;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchend`"}, :name web.GlobalEventHandlers/set-ontouchend!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1875, :end-line 1875, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the touchend event.\n\n  `var endHandler = targetElement.ontouchend;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchend`"}, set-ondragstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1771, :column 7, :end-line 1771, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the dragstart event.\n\n  `var dragstartHandler = targetElement.ondragstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragstart`"}, :name web.GlobalEventHandlers/set-ondragstart!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1771, :end-line 1771, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the dragstart event.\n\n  `var dragstartHandler = targetElement.ondragstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragstart`"}, onloadedmetadata {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 718, :column 7, :end-line 718, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The onloadedmetadata property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing loadedmetadata events.\n\n  `element.onloadedmetadata = handlerFunction;\n  var handlerFunction = element.onloadedmetadata;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadedmetadata`"}, :name web.GlobalEventHandlers/onloadedmetadata, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 718, :end-line 718, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onloadedmetadata property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing loadedmetadata events.\n\n  `element.onloadedmetadata = handlerFunction;\n  var handlerFunction = element.onloadedmetadata;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadedmetadata`"}, ontouchcancel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1470, :column 7, :end-line 1470, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The ontouchcancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchcancel events.\n\n  `var cancelHandler = someElement.ontouchcancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchcancel`"}, :name web.GlobalEventHandlers/ontouchcancel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1470, :end-line 1470, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ontouchcancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchcancel events.\n\n  `var cancelHandler = someElement.ontouchcancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchcancel`"}, set-onpointercancel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1082, :column 7, :end-line 1082, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointercancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes pointercancel events.\n\n  `targetElement.onpointercancel = cancelHandler;\n\n  var cancelHandler = targetElement.onpointercancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointercancel`"}, :name web.GlobalEventHandlers/set-onpointercancel!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1082, :end-line 1082, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointercancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes pointercancel events.\n\n  `targetElement.onpointercancel = cancelHandler;\n\n  var cancelHandler = targetElement.onpointercancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointercancel`"}, onchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 250, :column 7, :end-line 250, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onchange property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing change events.\n\n  `target.onchange = functionRef;\n\n  functionRef is a function name or a function expression. The function receives an `web.Event` object as its sole argument.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onchange`"}, :name web.GlobalEventHandlers/onchange, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onchange property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing change events.\n\n  `target.onchange = functionRef;\n\n  functionRef is a function name or a function expression. The function receives an `web.Event` object as its sole argument.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onchange`"}, ondragend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1648, :column 7, :end-line 1648, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the dragend event.\n\n  `var dragendHandler = targetElement.ondragend;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragend`"}, :name web.GlobalEventHandlers/ondragend, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1648, :end-line 1648, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the dragend event.\n\n  `var dragendHandler = targetElement.ondragend;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragend`"}, ontransitionend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1546, :column 7, :end-line 1546, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The ontransitionend property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes transitionend events.\n\n  `var transitionEndHandler = target.ontransitionend;\n\n  target.ontransitionend = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontransitionend`"}, :name web.GlobalEventHandlers/ontransitionend, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1546, :end-line 1546, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ontransitionend property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes transitionend events.\n\n  `var transitionEndHandler = target.ontransitionend;\n\n  target.ontransitionend = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontransitionend`"}, set-onwheel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1586, :column 7, :end-line 1586, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onwheel property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes wheel events.\n\n  `target.onwheel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onwheel`"}, :name web.GlobalEventHandlers/set-onwheel!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1586, :end-line 1586, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onwheel property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes wheel events.\n\n  `target.onwheel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onwheel`"}, onresize {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1326, :column 7, :end-line 1326, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onresize property of the `web.GlobalEventHandlers` interface\n  an `web.EventHandler` that processes resize events.\n\n  `window.onresize = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize`"}, :name web.GlobalEventHandlers/onresize, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1326, :end-line 1326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onresize property of the `web.GlobalEventHandlers` interface\n  an `web.EventHandler` that processes resize events.\n\n  `window.onresize = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize`"}, ongotpointercapture {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 512, :column 7, :end-line 512, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The ongotpointercapture property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes gotpointercapture events.\n\n  `target.ongotpointercapture = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ongotpointercapture`"}, :name web.GlobalEventHandlers/ongotpointercapture, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 512, :end-line 512, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ongotpointercapture property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes gotpointercapture events.\n\n  `target.ongotpointercapture = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ongotpointercapture`"}, onreset {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1302, :column 7, :end-line 1302, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onreset property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes reset events.\n\n  `target.onreset = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onreset`"}, :name web.GlobalEventHandlers/onreset, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1302, :end-line 1302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onreset property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes reset events.\n\n  `target.onreset = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onreset`"}, onblur {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 138, :column 7, :end-line 138, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The onblur property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing blur events. It's available\n  `web.Element`, `web.Document`, and `web.Window`.\n\n  `target.onblur = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onblur`"}, :name web.GlobalEventHandlers/onblur, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onblur property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing blur events. It's available\n  `web.Element`, `web.Document`, and `web.Window`.\n\n  `target.onblur = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onblur`"}, set-onreset! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1314, :column 7, :end-line 1314, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onreset property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes reset events.\n\n  `target.onreset = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onreset`"}, :name web.GlobalEventHandlers/set-onreset!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1314, :end-line 1314, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onreset property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes reset events.\n\n  `target.onreset = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onreset`"}, set-onabort! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onabort property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing abort events sent to the window.\n\n  `window.onabort = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onabort`"}, :name web.GlobalEventHandlers/set-onabort!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onabort property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing abort events sent to the window.\n\n  `window.onabort = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onabort`"}, onkeyup {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 638, :column 7, :end-line 638, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onkeyup property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes keyup events.\n\n  `target.onkeyup = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeyup`"}, :name web.GlobalEventHandlers/onkeyup, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 638, :end-line 638, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onkeyup property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes keyup events.\n\n  `target.onkeyup = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeyup`"}, set-onmousedown! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 840, :column 7, :end-line 840, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The onmousedown property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mousedown events.\n\n  `target.onmousedown = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousedown`"}, :name web.GlobalEventHandlers/set-onmousedown!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 840, :end-line 840, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onmousedown property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mousedown events.\n\n  `target.onmousedown = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousedown`"}, set-oncanplaythrough! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 235, :column 7, :end-line 235, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The oncanplaythrough property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing canplaythrough events.\n\n  `element.oncanplaythrough = handlerFunction;\n  var handlerFunction = element.oncanplaythrough;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplaythrough`"}, :name web.GlobalEventHandlers/set-oncanplaythrough!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oncanplaythrough property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing canplaythrough events.\n\n  `element.oncanplaythrough = handlerFunction;\n  var handlerFunction = element.oncanplaythrough;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncanplaythrough`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 476, :column 7, :end-line 476, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onerror property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes error events.\n\n  `For historical reasons, different arguments are passed to window.onerror and element.onerror handlers (as well as on error-type `web.window.addEventListener` handlers).`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror`"}, :name web.GlobalEventHandlers/set-onerror!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 476, :end-line 476, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onerror property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes error events.\n\n  `For historical reasons, different arguments are passed to window.onerror and element.onerror handlers (as well as on error-type `web.window.addEventListener` handlers).`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror`"}, set-onpointerover! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1260, :column 7, :end-line 1260, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointerover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerover events.\n\n  `targetElement.onpointerover = overHandler;\n\n  var overHandler = targetElement.onpointerover;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerover`"}, :name web.GlobalEventHandlers/set-onpointerover!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1260, :end-line 1260, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointerover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerover events.\n\n  `targetElement.onpointerover = overHandler;\n\n  var overHandler = targetElement.onpointerover;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerover`"}, onmouseleave {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 882, :column 7, :end-line 882, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseleave property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing mouseleave events.\n\n  `element.onmouseleave = handlerFunction;\n  var handlerFunction = element.onmouseleave;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseleave`"}, :name web.GlobalEventHandlers/onmouseleave, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 882, :end-line 882, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseleave property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing mouseleave events.\n\n  `element.onmouseleave = handlerFunction;\n  var handlerFunction = element.onmouseleave;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseleave`"}, set-oncontextmenu! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 338, :column 7, :end-line 338, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The oncontextmenu property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes contextmenu events.\n\n  `target.oncontextmenu = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncontextmenu`"}, :name web.GlobalEventHandlers/set-oncontextmenu!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oncontextmenu property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes contextmenu events.\n\n  `target.oncontextmenu = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncontextmenu`"}, set-onfocus! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 500, :column 7, :end-line 500, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onfocus property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes focus events on the given element.\n\n  `target.onfocus = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onfocus`"}, :name web.GlobalEventHandlers/set-onfocus!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 500, :end-line 500, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onfocus property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes focus events on the given element.\n\n  `target.onfocus = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onfocus`"}, onmousewheel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1834, :column 7, :end-line 1834, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The onmousewheel property sets and returns the event handler\n  the mousewheel event.\n\n  `element.onmousewheel = handlerFunction;\n  var handlerFunction = element.onmousewheel;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousewheel`"}, :name web.GlobalEventHandlers/onmousewheel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1834, :end-line 1834, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onmousewheel property sets and returns the event handler\n  the mousewheel event.\n\n  `element.onmousewheel = handlerFunction;\n  var handlerFunction = element.onmousewheel;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmousewheel`"}, ondurationchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 404, :column 7, :end-line 404, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The ondurationchange property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing durationchange events.\n\n  `element.ondurationchange = handlerFunction;\n  var handlerFunction = element.ondurationchange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondurationchange`"}, :name web.GlobalEventHandlers/ondurationchange, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ondurationchange property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing durationchange events.\n\n  `element.ondurationchange = handlerFunction;\n  var handlerFunction = element.ondurationchange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondurationchange`"}, set-onanimationend! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 72, :column 7, :end-line 72, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The onanimationend property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationend events.\n\n  `var animEndHandler = target.onanimationend;\n\n  target.onanimationend = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationend`"}, :name web.GlobalEventHandlers/set-onanimationend!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onanimationend property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationend events.\n\n  `var animEndHandler = target.onanimationend;\n\n  target.onanimationend = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationend`"}, set-onpause! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1023, :column 7, :end-line 1023, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onpause property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing pause events.\n\n  `element.onpause = handlerFunction;\n  var handlerFunction = element.onpause;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpause`"}, :name web.GlobalEventHandlers/set-onpause!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1023, :end-line 1023, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onpause property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing pause events.\n\n  `element.onpause = handlerFunction;\n  var handlerFunction = element.onpause;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpause`"}, set-onlostpointercapture! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 816, :column 7, :end-line 816, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The onlostpointercapture property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes lostpointercapture events.\n\n  `target.onlostpointercapture = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onlostpointercapture`"}, :name web.GlobalEventHandlers/set-onlostpointercapture!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 816, :end-line 816, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onlostpointercapture property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes lostpointercapture events.\n\n  `target.onlostpointercapture = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onlostpointercapture`"}, set-oninvalid! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 577, :column 7, :end-line 577, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The oninvalid property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes invalid events.\n\n  `target.oninvalid = functionRef;\n  var functionRef = target.oninvalid;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninvalid`"}, :name web.GlobalEventHandlers/set-oninvalid!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 577, :end-line 577, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oninvalid property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes invalid events.\n\n  `target.oninvalid = functionRef;\n  var functionRef = target.oninvalid;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oninvalid`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 464, :column 7, :end-line 464, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onerror property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes error events.\n\n  `For historical reasons, different arguments are passed to window.onerror and element.onerror handlers (as well as on error-type `web.window.addEventListener` handlers).`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror`"}, :name web.GlobalEventHandlers/onerror, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 464, :end-line 464, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onerror property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes error events.\n\n  `For historical reasons, different arguments are passed to window.onerror and element.onerror handlers (as well as on error-type `web.window.addEventListener` handlers).`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror`"}, set-ontouchstart! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1506, :column 7, :end-line 1506, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The ontouchstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchstart events.\n\n  `var startHandler = someElement.ontouchstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchstart`"}, :name web.GlobalEventHandlers/set-ontouchstart!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1506, :end-line 1506, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ontouchstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchstart events.\n\n  `var startHandler = someElement.ontouchstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchstart`"}, ondrag {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1626, :column 7, :end-line 1626, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the drag event.\n\n  `var dragHandler = targetElement.ondrag;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrag`"}, :name web.GlobalEventHandlers/ondrag, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1626, :end-line 1626, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the drag event.\n\n  `var dragHandler = targetElement.ondrag;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrag`"}, set-oncuechange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 365, :column 7, :end-line 365, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The oncuechange property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing cuechange events.\n\n  `element.oncuechange = handlerFunction;\n  var handlerFunction = element.oncuechange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncuechange`"}, :name web.GlobalEventHandlers/set-oncuechange!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oncuechange property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing cuechange events.\n\n  `element.oncuechange = handlerFunction;\n  var handlerFunction = element.oncuechange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncuechange`"}, set-onpointerup! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1288, :column 7, :end-line 1288, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointerup property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerup events.\n\n  `targetElement.onpointerup = upHandler;\n\n  var upHandler = targetElement.onpointerup;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerup`"}, :name web.GlobalEventHandlers/set-onpointerup!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1288, :end-line 1288, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onpointerup property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerup events.\n\n  `targetElement.onpointerup = upHandler;\n\n  var upHandler = targetElement.onpointerup;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerup`"}, ontransitioncancel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1518, :column 7, :end-line 1518, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The ontransitioncancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes transitioncancel events.\n\n  `var transitionCancelHandler = target.ontransitioncancel;\n\n  target.ontransitioncancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontransitioncancel`"}, :name web.GlobalEventHandlers/ontransitioncancel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1518, :end-line 1518, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ontransitioncancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes transitioncancel events.\n\n  `var transitionCancelHandler = target.ontransitioncancel;\n\n  target.ontransitioncancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontransitioncancel`"}, onwheel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1574, :column 7, :end-line 1574, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onwheel property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes wheel events.\n\n  `target.onwheel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onwheel`"}, :name web.GlobalEventHandlers/onwheel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1574, :end-line 1574, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onwheel property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes wheel events.\n\n  `target.onwheel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onwheel`"}, set-onload! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 675, :column 7, :end-line 675, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The onload property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes load events on a `web.Window`,\n  `web.<img>` element, etc.\n\n  `target.onload = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onload`"}, :name web.GlobalEventHandlers/set-onload!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 675, :end-line 675, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onload property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes load events on a `web.Window`,\n  `web.<img>` element, etc.\n\n  `target.onload = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onload`"}, set-ontouchcancel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1482, :column 7, :end-line 1482, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The ontouchcancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchcancel events.\n\n  `var cancelHandler = someElement.ontouchcancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchcancel`"}, :name web.GlobalEventHandlers/set-ontouchcancel!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1482, :end-line 1482, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ontouchcancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchcancel events.\n\n  `var cancelHandler = someElement.ontouchcancel;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchcancel`"}, set-onplay! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1053, :column 7, :end-line 1053, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The onplay property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing play events.\n\n  `element.onplay = handlerFunction;\n  var handlerFunction = element.onplay;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplay`"}, :name web.GlobalEventHandlers/set-onplay!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1053, :end-line 1053, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onplay property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing play events.\n\n  `element.onplay = handlerFunction;\n  var handlerFunction = element.onplay;\n\n  handlerFunction should be either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onplay`"}, onloadeddata {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 688, :column 7, :end-line 688, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The onloadeddata property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing loadeddata events.\n\n  `element.onloadeddata = handlerFunction;\n  var handlerFunction = element.onloadeddata;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadeddata`"}, :name web.GlobalEventHandlers/onloadeddata, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 688, :end-line 688, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onloadeddata property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing loadeddata events.\n\n  `element.onloadeddata = handlerFunction;\n  var handlerFunction = element.onloadeddata;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadeddata`"}, onmouseover {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 960, :column 7, :end-line 960, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseover events.\n\n  `element.onmouseover = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseover`"}, :name web.GlobalEventHandlers/onmouseover, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 960, :end-line 960, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseover events.\n\n  `element.onmouseover = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseover`"}, ontouchmove {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1886, :column 7, :end-line 1886, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the touchmove event.\n\n  `var moveHandler = someElement.ontouchmove;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchmove`"}, :name web.GlobalEventHandlers/ontouchmove, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1886, :end-line 1886, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the touchmove event.\n\n  `var moveHandler = someElement.ontouchmove;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchmove`"}, oncancel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 164, :column 7, :end-line 164, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The oncancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing cancel events sent to a\n  element.\n\n  `target.oncancel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncancel`"}, :name web.GlobalEventHandlers/oncancel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The oncancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing cancel events sent to a\n  element.\n\n  `target.oncancel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncancel`"}, onselect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1374, :column 7, :end-line 1374, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onselect property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes `web.select`.\n\n  `target.onselect = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselect`"}, :name web.GlobalEventHandlers/onselect, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1374, :end-line 1374, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onselect property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes `web.select`.\n\n  `target.onselect = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onselect`"}, set-ontouchmove! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1897, :column 7, :end-line 1897, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the touchmove event.\n\n  `var moveHandler = someElement.ontouchmove;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchmove`"}, :name web.GlobalEventHandlers/set-ontouchmove!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1897, :end-line 1897, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  A `web.global event handler` for the touchmove event.\n\n  `var moveHandler = someElement.ontouchmove;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchmove`"}, set-onauxclick! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 126, :column 7, :end-line 126, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The onauxclick property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing auxclick events.\n\n  `target.onauxclick = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onauxclick`"}, :name web.GlobalEventHandlers/set-onauxclick!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 126, :end-line 126, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onauxclick property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing auxclick events.\n\n  `target.onauxclick = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onauxclick`"}, set-onmouseleave! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 897, :column 7, :end-line 897, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseleave property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing mouseleave events.\n\n  `element.onmouseleave = handlerFunction;\n  var handlerFunction = element.onmouseleave;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseleave`"}, :name web.GlobalEventHandlers/set-onmouseleave!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 897, :end-line 897, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseleave property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing mouseleave events.\n\n  `element.onmouseleave = handlerFunction;\n  var handlerFunction = element.onmouseleave;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseleave`"}, set-onmouseout! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 948, :column 7, :end-line 948, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseout property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseout events.\n\n  `element.onmouseout = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseout`"}, :name web.GlobalEventHandlers/set-onmouseout!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 948, :end-line 948, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseout property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseout events.\n\n  `element.onmouseout = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseout`"}, ondrop {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1782, :column 7, :end-line 1782, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the drop event.\n\n  `var dropHandler = targetElement.ondrop;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop`"}, :name web.GlobalEventHandlers/ondrop, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1782, :end-line 1782, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  A `web.global event handler` for the drop event.\n\n  `var dropHandler = targetElement.ondrop;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondrop`"}, set-onkeypress! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 626, :column 7, :end-line 626, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The onkeypress property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes keypress events.\n\n  `target.onkeypress = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeypress`"}, :name web.GlobalEventHandlers/set-onkeypress!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 626, :end-line 626, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onkeypress property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes keypress events.\n\n  `target.onkeypress = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeypress`"}, onfocus {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 488, :column 7, :end-line 488, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onfocus property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes focus events on the given element.\n\n  `target.onfocus = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onfocus`"}, :name web.GlobalEventHandlers/onfocus, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 488, :end-line 488, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onfocus property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` that processes focus events on the given element.\n\n  `target.onfocus = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onfocus`"}, set-onsubmit! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1458, :column 7, :end-line 1458, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onsubmit property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes submit events.\n\n  `target.onsubmit = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onsubmit`"}, :name web.GlobalEventHandlers/set-onsubmit!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1458, :end-line 1458, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onsubmit property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes submit events.\n\n  `target.onsubmit = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onsubmit`"}, onkeydown {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 590, :column 7, :end-line 590, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onkeydown property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes keydown events.\n\n  `target.onkeydown = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeydown`"}, :name web.GlobalEventHandlers/onkeydown, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 590, :end-line 590, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onkeydown property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes keydown events.\n\n  `target.onkeydown = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeydown`"}, onmouseout {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 936, :column 7, :end-line 936, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseout property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseout events.\n\n  `element.onmouseout = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseout`"}, :name web.GlobalEventHandlers/onmouseout, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 936, :end-line 936, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onmouseout property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseout events.\n\n  `element.onmouseout = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseout`"}, onclick {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 278, :column 7, :end-line 278, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The onclick property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing click events on a given element.\n\n  `target.onclick = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick`"}, :name web.GlobalEventHandlers/onclick, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onclick property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing click events on a given element.\n\n  `target.onclick = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick`"}, set-onchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 264, :column 7, :end-line 264, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onchange property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing change events.\n\n  `target.onchange = functionRef;\n\n  functionRef is a function name or a function expression. The function receives an `web.Event` object as its sole argument.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onchange`"}, :name web.GlobalEventHandlers/set-onchange!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onchange property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing change events.\n\n  `target.onchange = functionRef;\n\n  functionRef is a function name or a function expression. The function receives an `web.Event` object as its sole argument.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onchange`"}, set-onanimationcancel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 44, :column 7, :end-line 44, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The onanimationcancel property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationcancel events.\n\n  `var animCancelHandler = target.onanimationcancel;\n\n  target.onanimationcancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationcancel`"}, :name web.GlobalEventHandlers/set-onanimationcancel!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onanimationcancel property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationcancel events.\n\n  `var animCancelHandler = target.onanimationcancel;\n\n  target.onanimationcancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationcancel`"}, ontouchstart {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1494, :column 7, :end-line 1494, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The ontouchstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchstart events.\n\n  `var startHandler = someElement.ontouchstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchstart`"}, :name web.GlobalEventHandlers/ontouchstart, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1494, :end-line 1494, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ontouchstart property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes touchstart events.\n\n  `var startHandler = someElement.ontouchstart;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontouchstart`"}, onpointerover {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1246, :column 7, :end-line 1246, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The onpointerover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerover events.\n\n  `targetElement.onpointerover = overHandler;\n\n  var overHandler = targetElement.onpointerover;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerover`"}, :name web.GlobalEventHandlers/onpointerover, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1246, :end-line 1246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onpointerover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes pointerover events.\n\n  `targetElement.onpointerover = overHandler;\n\n  var overHandler = targetElement.onpointerover;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onpointerover`"}, onanimationcancel {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 30, :column 7, :end-line 30, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The onanimationcancel property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationcancel events.\n\n  `var animCancelHandler = target.onanimationcancel;\n\n  target.onanimationcancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationcancel`"}, :name web.GlobalEventHandlers/onanimationcancel, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onanimationcancel property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing animationcancel events.\n\n  `var animCancelHandler = target.onanimationcancel;\n\n  target.onanimationcancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onanimationcancel`"}, onloadend {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 748, :column 7, :end-line 748, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onloadend property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` representing the code to be called when\n  loadend event is raised (when progress has stopped on the loading\n  a resource.)\n\n  `img.onloadend = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadend`"}, :name web.GlobalEventHandlers/onloadend, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 748, :end-line 748, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onloadend property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` representing the code to be called when\n  loadend event is raised (when progress has stopped on the loading\n  a resource.)\n\n  `img.onloadend = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onloadend`"}, set-onresize! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1338, :column 7, :end-line 1338, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onresize property of the `web.GlobalEventHandlers` interface\n  an `web.EventHandler` that processes resize events.\n\n  `window.onresize = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize`"}, :name web.GlobalEventHandlers/set-onresize!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1338, :end-line 1338, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onresize property of the `web.GlobalEventHandlers` interface\n  an `web.EventHandler` that processes resize events.\n\n  `window.onresize = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize`"}, set-onmouseover! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 972, :column 7, :end-line 972, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseover events.\n\n  `element.onmouseover = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseover`"}, :name web.GlobalEventHandlers/set-onmouseover!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 972, :end-line 972, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onmouseover property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes mouseover events.\n\n  `element.onmouseover = function;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onmouseover`"}, set-oncancel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 177, :column 7, :end-line 177, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The oncancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing cancel events sent to a\n  element.\n\n  `target.oncancel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncancel`"}, :name web.GlobalEventHandlers/set-oncancel!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oncancel property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` for processing cancel events sent to a\n  element.\n\n  `target.oncancel = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncancel`"}, set-ondurationchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 419, :column 7, :end-line 419, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The ondurationchange property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing durationchange events.\n\n  `element.ondurationchange = handlerFunction;\n  var handlerFunction = element.ondurationchange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondurationchange`"}, :name web.GlobalEventHandlers/set-ondurationchange!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 419, :end-line 419, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ondurationchange property of the `web.GlobalEventHandlers`\n  is the `web.EventHandler` for processing durationchange events.\n\n  `element.ondurationchange = handlerFunction;\n  var handlerFunction = element.ondurationchange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondurationchange`"}, onkeypress {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 614, :column 7, :end-line 614, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The onkeypress property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes keypress events.\n\n  `target.onkeypress = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeypress`"}, :name web.GlobalEventHandlers/onkeypress, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onkeypress property of the `web.GlobalEventHandlers` mixin\n  an `web.EventHandler` that processes keypress events.\n\n  `target.onkeypress = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onkeypress`"}, oncuechange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 350, :column 7, :end-line 350, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The oncuechange property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing cuechange events.\n\n  `element.oncuechange = handlerFunction;\n  var handlerFunction = element.oncuechange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncuechange`"}, :name web.GlobalEventHandlers/oncuechange, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 350, :end-line 350, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The oncuechange property of the `web.GlobalEventHandlers` mixin\n  the `web.EventHandler` for processing cuechange events.\n\n  `element.oncuechange = handlerFunction;\n  var handlerFunction = element.oncuechange;\n\n  handlerFunction is either null or a JavaScript function specifying the handler for the event.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/oncuechange`"}, set-onclick! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 290, :column 7, :end-line 290, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The onclick property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing click events on a given element.\n\n  `target.onclick = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick`"}, :name web.GlobalEventHandlers/set-onclick!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 290, :end-line 290, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onclick property of the `web.GlobalEventHandlers` mixin is\n  `web.EventHandler` for processing click events on a given element.\n\n  `target.onclick = functionRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onclick`"}, ondragexit {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1692, :column 7, :end-line 1692, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The GlobalEventHandler.ondragexit property is an event handler\n  the dragexit event.\n\n  `var dragexitHandler = targetElement.ondragexit;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragexit`"}, :name web.GlobalEventHandlers/ondragexit, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1692, :end-line 1692, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The GlobalEventHandler.ondragexit property is an event handler\n  the dragexit event.\n\n  `var dragexitHandler = targetElement.ondragexit;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ondragexit`"}, set-ontransitioncancel! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/GlobalEventHandlers.cljs", :line 1532, :column 7, :end-line 1532, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The ontransitioncancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes transitioncancel events.\n\n  `var transitionCancelHandler = target.ontransitioncancel;\n\n  target.ontransitioncancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontransitioncancel`"}, :name web.GlobalEventHandlers/set-ontransitioncancel!, :variadic false, :file "src/web/GlobalEventHandlers.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1532, :end-line 1532, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ontransitioncancel property of the `web.GlobalEventHandlers`\n  is an `web.EventHandler` that processes transitioncancel events.\n\n  `var transitionCancelHandler = target.ontransitioncancel;\n\n  target.ontransitioncancel = Function`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/ontransitioncancel`"}, ...}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The GlobalEventHandlers mixin describes the event handlers common\n  several interfaces like `html.HTMLElement`, `web.Document`, or"}
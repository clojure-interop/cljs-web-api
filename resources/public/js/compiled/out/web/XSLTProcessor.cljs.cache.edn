{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.XSLTProcessor, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {node {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XSLTProcessor.cljs", :line 8, :column 7, :end-line 8, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  Node Node\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Node`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.XSLTProcessor/node, :variadic true, :file "src/web/XSLTProcessor.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  Node Node\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Node`"}, document-fragment {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XSLTProcessor.cljs", :line 17, :column 7, :end-line 17, :end-column 24, :arglists (quote ([this & args])), :doc "Method.\n\n  The DocumentFragment interface represents a minimal document\n  that has no parent. It is used as a lightweight version of `web.Document`\n  stores a segment of a document structure comprised of nodes just\n  a standard document. The key difference is that because the document\n  isn't part of the active document tree structure, changes made\n  the fragment don't affect the document, cause reflow, or incur\n  performance impact that can occur when changes are made.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.XSLTProcessor/document-fragment, :variadic true, :file "src/web/XSLTProcessor.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The DocumentFragment interface represents a minimal document\n  that has no parent. It is used as a lightweight version of `web.Document`\n  stores a segment of a document structure comprised of nodes just\n  a standard document. The key difference is that because the document\n  isn't part of the active document tree structure, changes made\n  the fragment don't affect the document, cause reflow, or incur\n  performance impact that can occur when changes are made.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment`"}, document {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XSLTProcessor.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The Document interface represents any web page loaded in the\n  and serves as an entry point into the web page's content, which\n  the DOM tree.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.XSLTProcessor/document, :variadic true, :file "src/web/XSLTProcessor.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The Document interface represents any web page loaded in the\n  and serves as an entry point into the web page's content, which\n  the DOM tree.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Document`"}, string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XSLTProcessor.cljs", :line 43, :column 7, :end-line 43, :end-column 13, :arglists (quote ([this & args])), :doc "Method.\n\n  The String global object is a constructor for strings or a sequence\n  characters.\n\n  `String literals take the forms:\n\n\n\n  'string text'\n  \\\"string text\\\"\n  \\\"中文 español Deutsch English देवनागरी العربية português বাংলা русский 日本語 norsk bokmål ਪੰਜਾਬੀ 한국어 தமிழ் עברית\\\"\n\n  Strings can also be created using the String global object directly:\n\n\n\n  String(thing)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.XSLTProcessor/string, :variadic true, :file "src/web/XSLTProcessor.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The String global object is a constructor for strings or a sequence\n  characters.\n\n  `String literals take the forms:\n\n\n\n  'string text'\n  \\\"string text\\\"\n  \\\"中文 español Deutsch English देवनागरी العربية português বাংলা русский 日本語 norsk bokmål ਪੰਜਾਬੀ 한국어 தமிழ் עברית\\\"\n\n  Strings can also be created using the String global object directly:\n\n\n\n  String(thing)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "An XSLTProcessor applies an XSLT stylesheet transformation to\n  XML document to produce a new XML document as output. It has\n  to load the XSLT stylesheet, to manipulate <xsl:param> parameter\n  and to apply the transformation to documents."}
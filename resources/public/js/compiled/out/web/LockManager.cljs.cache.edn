{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.LockManager, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {query {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockManager.cljs", :line 7, :column 7, :end-line 7, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The query() method of the `web.LockManager` interface returns\n  `web.Promise` which resolves with an object containing information\n  held and pending locks.\n\n  `var promise<LockManagerSnapshot> = LockManager.query()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockManager/query`"}, :name web.LockManager/query, :variadic false, :file "src/web/LockManager.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The query() method of the `web.LockManager` interface returns\n  `web.Promise` which resolves with an object containing information\n  held and pending locks.\n\n  `var promise<LockManagerSnapshot> = LockManager.query()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockManager/query`"}, request {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/LockManager.cljs", :line 20, :column 7, :end-line 20, :end-column 14, :arglists (quote ([this & args])), :doc "Method.\n\n  The request() method of the `web.LockManager` interface requests\n  `web.Lock` object with parameters specifying its name and characteristics.\n  requested Lock is passed to a callback, while the function itself\n  a `web.Promise` that resolves with `web.undefined`.\n\n  `LockManager.request(var promise = name[, {options}], callback)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.LockManager/request, :variadic true, :file "src/web/LockManager.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The request() method of the `web.LockManager` interface requests\n  `web.Lock` object with parameters specifying its name and characteristics.\n  requested Lock is passed to a callback, while the function itself\n  a `web.Promise` that resolves with `web.undefined`.\n\n  `LockManager.request(var promise = name[, {options}], callback)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The LockManager interface of the the Web Locks API provides methods\n  requesting a new `web.Lock` object and querying for an existing\n  object. To get an instance of LockManager, call `web.navigator.locks`."}
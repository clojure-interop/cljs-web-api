{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{time}, :name web.BudgetState, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {budget-at {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/BudgetState.cljs", :line 7, :column 7, :end-line 7, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The budgetAt read-only property of the `web.BudgetState` interface\n  the anticipated processing budget at the specified time.\n\n  `var budget = BudgetState.budgetAt`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/budgetAt`"}, :name web.BudgetState/budget-at, :variadic false, :file "src/web/BudgetState.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The budgetAt read-only property of the `web.BudgetState` interface\n  the anticipated processing budget at the specified time.\n\n  `var budget = BudgetState.budgetAt`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/budgetAt`"}, set-budget-at! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/BudgetState.cljs", :line 19, :column 7, :end-line 19, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The budgetAt read-only property of the `web.BudgetState` interface\n  the anticipated processing budget at the specified time.\n\n  `var budget = BudgetState.budgetAt`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/budgetAt`"}, :name web.BudgetState/set-budget-at!, :variadic false, :file "src/web/BudgetState.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The budgetAt read-only property of the `web.BudgetState` interface\n  the anticipated processing budget at the specified time.\n\n  `var budget = BudgetState.budgetAt`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/budgetAt`"}, time {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/BudgetState.cljs", :line 31, :column 7, :end-line 31, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The time read-only property of the `web.BudgetState` interface\n  a `web.timestamp` at which the budgetAt value is valid.\n\n  `var time = BudgetState.time`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/time`"}, :name web.BudgetState/time, :variadic false, :file "src/web/BudgetState.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The time read-only property of the `web.BudgetState` interface\n  a `web.timestamp` at which the budgetAt value is valid.\n\n  `var time = BudgetState.time`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/time`"}, set-time! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/BudgetState.cljs", :line 43, :column 7, :end-line 43, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The time read-only property of the `web.BudgetState` interface\n  a `web.timestamp` at which the budgetAt value is valid.\n\n  `var time = BudgetState.time`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/time`"}, :name web.BudgetState/set-time!, :variadic false, :file "src/web/BudgetState.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The time read-only property of the `web.BudgetState` interface\n  a `web.timestamp` at which the budgetAt value is valid.\n\n  `var time = BudgetState.time`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/BudgetState/time`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The BudgetState interface of the the Web Budget API provides\n  amount of the user agent's processing budget at a specific point\n  time."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{hash}, :name web.WorkerLocation, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {href {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 57, :column 7, :end-line 57, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.href read-only property returns a `dom.DOMString`\n  the whole URL.\n\n  `string = object.href;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/href`"}, :name web.WorkerLocation/href, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.href read-only property returns a `dom.DOMString`\n  the whole URL.\n\n  `string = object.href;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/href`"}, hash {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.hash read-only property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL. The hash\n  not percent encoded.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/hash`"}, :name web.WorkerLocation/hash, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.hash read-only property returns a `dom.DOMString`\n  a '#' followed by the fragment identifier of the URL. The hash\n  not percent encoded.\n\n  `string = object.hash;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/hash`"}, protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 109, :column 7, :end-line 109, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.protocol read-only property returns a `dom.DOMString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/protocol`"}, :name web.WorkerLocation/protocol, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.protocol read-only property returns a `dom.DOMString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/protocol`"}, to-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 8, :column 7, :end-line 8, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The URLUtilsReadOnly.toString() stringifier method returns a\n  containing the whole URL. It is a synonym for `web.URLUtilsReadOnly.href`.\n\n  `string = object.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/toString`"}, :name web.WorkerLocation/to-string, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The URLUtilsReadOnly.toString() stringifier method returns a\n  containing the whole URL. It is a synonym for `web.URLUtilsReadOnly.href`.\n\n  `string = object.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/toString`"}, pathname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 85, :column 7, :end-line 85, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.pathname read-only property returns a `dom.DOMString`\n  an initial '/' followed by the path of the URL.\n\n  `string = object.pathname;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/pathname`"}, :name web.WorkerLocation/pathname, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.pathname read-only property returns a `dom.DOMString`\n  an initial '/' followed by the path of the URL.\n\n  `string = object.pathname;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/pathname`"}, hostname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 45, :column 7, :end-line 45, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.hostname read-only property returns a `dom.DOMString`\n  the domain of the URL.\n\n  `string = object.hostname;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/hostname`"}, :name web.WorkerLocation/hostname, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.hostname read-only property returns a `dom.DOMString`\n  the domain of the URL.\n\n  `string = object.hostname;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/hostname`"}, search {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 121, :column 7, :end-line 121, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.search read-only property returns a `dom.DOMString`\n  a '?' followed by the parameters of the URL.\n\n  `string = object.search;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/search`"}, :name web.WorkerLocation/search, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.search read-only property returns a `dom.DOMString`\n  a '?' followed by the parameters of the URL.\n\n  `string = object.search;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/search`"}, port {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 97, :column 7, :end-line 97, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.port read-only property returns a `dom.DOMString`\n  the port number of the URL.\n\n  `string = object.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/port`"}, :name web.WorkerLocation/port, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.port read-only property returns a `dom.DOMString`\n  the port number of the URL.\n\n  `string = object.port;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/port`"}, host {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.host read-only property returns a `dom.DOMString`\n  the host, that is the hostname, a ':', and the port of the URL.\n\n  `string = object.host;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/host`"}, :name web.WorkerLocation/host, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.host read-only property returns a `dom.DOMString`\n  the host, that is the hostname, a ':', and the port of the URL.\n\n  `string = object.host;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/host`"}, origin {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/WorkerLocation.cljs", :line 69, :column 7, :end-line 69, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.origin read-only property is a `dom.DOMString`\n  the Unicode serialization of the origin of the represented URL,\n  is, for http and https, the scheme followed by '://', followed\n  the domain, followed by ':', followed by the port (the default\n  80 and 443 respectively, if explicitely specified). For URL using\n  scheme, the value is browser dependant.\n\n  `string = object.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/origin`"}, :name web.WorkerLocation/origin, :variadic false, :file "src/web/WorkerLocation.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The URLUtilsReadOnly.origin read-only property is a `dom.DOMString`\n  the Unicode serialization of the origin of the represented URL,\n  is, for http and https, the scheme followed by '://', followed\n  the domain, followed by ':', followed by the port (the default\n  80 and 443 respectively, if explicitely specified). For URL using\n  scheme, the value is browser dependant.\n\n  `string = object.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URLUtilsReadOnly/origin`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WorkerLocation interface defines the absolute location of\n  script executed by the `web.Worker`. Such an object is initialized\n  each worker and is available via the `web.WorkerGlobalScope.location`\n  obtained by calling self.location."}
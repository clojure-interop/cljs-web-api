{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Element.ev, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {ms-gesture-end {:name web.Element.ev/ms-gesture-end, :file "src/web/Element/ev.cljs", :line 325, :column 1, :end-line 325, :end-column 20, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 325, :column 6, :end-line 325, :end-column 20}, :doc "Event.\n\n  The MSGestureEnd event is fired when all associated touch points\n  stopped contacting the touch surface, and any associated inertial\n  have ended; thus ending the gesture.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureEnd_event`", :tag string}, mousedown {:name web.Element.ev/mousedown, :file "src/web/Element/ev.cljs", :line 217, :column 1, :end-line 217, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 217, :column 6, :end-line 217, :end-column 15}, :doc "Event.\n\n  The mousedown event is fired at an `web.Element` when a pointing\n  button is pressed while the pointer is inside the element.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event`", :tag string}, ms-gesture-tap {:name web.Element.ev/ms-gesture-tap, :file "src/web/Element/ev.cljs", :line 357, :column 1, :end-line 357, :end-column 20, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 357, :column 6, :end-line 357, :end-column 20}, :doc "Event.\n\n  The MSGestureTap event is fired when the user \\\"taps\\\" the pointing\n  (e.g., touches the touch surface with their finger, taps the\n  surface with a pen device, clicks with a mouse). Typically, it's\n  to listen for the click event instead.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureTap_event`", :tag string}, wheel {:name web.Element.ev/wheel, :file "src/web/Element/ev.cljs", :line 506, :column 1, :end-line 506, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 506, :column 6, :end-line 506, :end-column 11}, :doc "Event.\n\n  The wheel event fires when the user rotates a wheel button on\n  pointing device (typically a mouse).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event`", :tag string}, webkitmouseforceup {:name web.Element.ev/webkitmouseforceup, :file "src/web/Element/ev.cljs", :line 484, :column 1, :end-line 484, :end-column 24, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 484, :column 6, :end-line 484, :end-column 24}, :doc "Event.\n\n  The non-standard webkitmouseforceup event is fired by Safari\n  an `web.Element` some time after the webkitmouseforcedown event,\n  pressure on the button has been reduced sufficiently to end the\n  click\\\".\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforceup_event`", :tag string}, ms-inertia-start {:name web.Element.ev/ms-inertia-start, :file "src/web/Element/ev.cljs", :line 369, :column 1, :end-line 369, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 369, :column 6, :end-line 369, :end-column 22}, :doc "Event.\n\n  The MSInertiaStart event is fired when contact with the touch\n  stops when a scroll has enough inertia to continue scrolling.\n  event may not be fired if the scroll is sufficiently slow.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSInertiaStart_event`", :tag string}, auxclick {:name web.Element.ev/auxclick, :file "src/web/Element/ev.cljs", :line 14, :column 1, :end-line 14, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 14, :column 6, :end-line 14, :end-column 14}, :doc "Event.\n\n  The auxclick event is fired at an `web.Element` when a non-primary\n  device button (any mouse button other than the primaryâ€”usually\n  has been pressed and released both within the same element.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/auxclick_event`", :tag string}, dom-mouse-scroll {:name web.Element.ev/dom-mouse-scroll, :file "src/web/Element/ev.cljs", :line 120, :column 1, :end-line 120, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 120, :column 6, :end-line 120, :end-column 22}, :doc "Event.\n\n  The DOM DOMMouseScroll event is fired asynchronously when mouse\n  or similar device is operated and the accumulated scroll amount\n  over 1 line or 1 page since last event. It's represented by the\n  interface. This event was only implemented by Firefox. You should\n  use the standard `web.wheel` event.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/DOMMouseScroll_event`", :tag string}, show {:name web.Element.ev/show, :file "src/web/Element/ev.cljs", :line 421, :column 1, :end-line 421, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 421, :column 6, :end-line 421, :end-column 10}, :doc "Event.\n\n  The show event is fired when a contextmenu event was fired on/bubbled\n  an element that has a `web.contextmenu`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/show_event`", :tag string}, compositionend {:name web.Element.ev/compositionend, :file "src/web/Element/ev.cljs", :line 47, :column 1, :end-line 47, :end-column 20, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 47, :column 6, :end-line 47, :end-column 20}, :doc "Event.\n\n  The compositionend event is fired when a text composition system\n  as an input method editor completes or cancels the current composition\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionend_event`", :tag string}, focusout {:name web.Element.ev/focusout, :file "src/web/Element/ev.cljs", :line 166, :column 1, :end-line 166, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 166, :column 6, :end-line 166, :end-column 14}, :doc "Event.\n\n  The focusout event fires when an element is about to lose focus.\n  main difference between this event and `web.blur` is that focusout\n  while blur does not.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/focusout_event`", :tag string}, select {:name web.Element.ev/select, :file "src/web/Element/ev.cljs", :line 412, :column 1, :end-line 412, :end-column 12, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 412, :column 6, :end-line 412, :end-column 12}, :doc "Event.\n\n  The select event fires when some text has been selected.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event`", :tag string}, cut {:name web.Element.ev/cut, :file "src/web/Element/ev.cljs", :line 99, :column 1, :end-line 99, :end-column 9, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 99, :column 6, :end-line 99, :end-column 9}, :doc "Event.\n\n  The cut event is fired when the user has initiated a \\\"cut\\\"\n  through the browser's user interface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/cut_event`", :tag string}, ms-content-zoom {:name web.Element.ev/ms-content-zoom, :file "src/web/Element/ev.cljs", :line 305, :column 1, :end-line 305, :end-column 21, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 305, :column 6, :end-line 305, :end-column 21}, :doc "Event.\n\n  The msContentZoom event fires when a user zooms the element (changes\n  scale of the content).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/msContentZoom_event`", :tag string}, mouseup {:name web.Element.ev/mouseup, :file "src/web/Element/ev.cljs", :line 270, :column 1, :end-line 270, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 270, :column 6, :end-line 270, :end-column 13}, :doc "Event.\n\n  The mouseup event is fired at an `web.Element` when a button\n  a pointing device (such as a mouse or trackpad) is released while\n  pointer is located inside it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event`", :tag string}, ms-gesture-change {:name web.Element.ev/ms-gesture-change, :file "src/web/Element/ev.cljs", :line 315, :column 1, :end-line 315, :end-column 23, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 315, :column 6, :end-line 315, :end-column 23}, :doc "Event.\n\n  The MSGestureChange event is fired when touch contact positions\n  and also while inertia-based movements are being processed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureChange_event`", :tag string}, gestureend {:name web.Element.ev/gestureend, :file "src/web/Element/ev.cljs", :line 186, :column 1, :end-line 186, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 186, :column 6, :end-line 186, :end-column 16}, :doc "Event.\n\n  The gestureend event is fired when there are no longer multiple\n  contacting the touch surface, thus ending the gesture.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/gestureend_event`", :tag string}, ms-gesture-start {:name web.Element.ev/ms-gesture-start, :file "src/web/Element/ev.cljs", :line 346, :column 1, :end-line 346, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 346, :column 6, :end-line 346, :end-column 22}, :doc "Event.\n\n  The MSGestureStart event is fired when there's a new point of\n  on the touch surface, thus starting a new gesture. When the gesture\n  ended, a MSGestureEnd event will be fired.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureStart_event`", :tag string}, copy {:name web.Element.ev/copy, :file "src/web/Element/ev.cljs", :line 89, :column 1, :end-line 89, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 89, :column 6, :end-line 89, :end-column 10}, :doc "Event.\n\n  The copy event fires when the user initiates a copy action through\n  browser's user interface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/copy_event`", :tag string}, touchmove {:name web.Element.ev/touchmove, :file "src/web/Element/ev.cljs", :line 556, :column 1, :end-line 556, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 556, :column 6, :end-line 556, :end-column 15}, :doc "Event.\n\n  The touchmove event is fired when one or more touch points are\n  along the touch surface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/touchmove_event`", :tag string}, focusin {:name web.Element.ev/focusin, :file "src/web/Element/ev.cljs", :line 155, :column 1, :end-line 155, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 155, :column 6, :end-line 155, :end-column 13}, :doc "Event.\n\n  The focusin event fires when an element is about to receive focus.\n  main difference between this event and `web.focus` is that focusin\n  while focus does not.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event`", :tag string}, webkitmouseforcechanged {:name web.Element.ev/webkitmouseforcechanged, :file "src/web/Element/ev.cljs", :line 462, :column 1, :end-line 462, :end-column 29, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 462, :column 6, :end-line 462, :end-column 29}, :doc "Event.\n\n  The non-standard webkitmouseforcechanged event is fired by Safari\n  time the amount of pressure changes on the trackpad/touchscreen.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcechanged_event`", :tag string}, keydown {:name web.Element.ev/keydown, :file "src/web/Element/ev.cljs", :line 208, :column 1, :end-line 208, :end-column 13, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 208, :column 6, :end-line 208, :end-column 13}, :doc "Event.\n\n  The keydown event is fired when a key is pressed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/keydown_event`", :tag string}, compositionstart {:name web.Element.ev/compositionstart, :file "src/web/Element/ev.cljs", :line 57, :column 1, :end-line 57, :end-column 22, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 57, :column 6, :end-line 57, :end-column 22}, :doc "Event.\n\n  The compositionstart event is fired when a text composition system\n  as an input method editor starts a new composition session.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionstart_event`", :tag string}, contextmenu {:name web.Element.ev/contextmenu, :file "src/web/Element/ev.cljs", :line 78, :column 1, :end-line 78, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 78, :column 6, :end-line 78, :end-column 17}, :doc "Event.\n\n  The contextmenu event fires when the user attempts to open a\n  menu. This event is typically triggered by clicking the right\n  button, or by pressing the context menu key.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event`", :tag string}, webkitmouseforcedown {:name web.Element.ev/webkitmouseforcedown, :file "src/web/Element/ev.cljs", :line 472, :column 1, :end-line 472, :end-column 26, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 472, :column 6, :end-line 472, :end-column 26}, :doc "Event.\n\n  After a `web.mousedown` event has been fired at the element,\n  and when sufficient pressure has been applied to the mouse or\n  button to qualify as a \\\"force click,\\\" Safari begins sending\n  events to the element.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcedown_event`", :tag string}, gesturestart {:name web.Element.ev/gesturestart, :file "src/web/Element/ev.cljs", :line 196, :column 1, :end-line 196, :end-column 18, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 196, :column 6, :end-line 196, :end-column 18}, :doc "Event.\n\n  The gesturestart event is fired when multiple fingers contact\n  touch surface, thus starting a new gesture. During the gesture,\n  events will be fired. When the gesture has ended, a gestureend\n  will be fired.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/gesturestart_event`", :tag string}, overflow {:name web.Element.ev/overflow, :file "src/web/Element/ev.cljs", :line 391, :column 1, :end-line 391, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 391, :column 6, :end-line 391, :end-column 14}, :doc "Event.\n\n  The overflow event is fired when an element has been overflowed\n  its content or has been rendered for the first time in this state\n  works for elements styled with overflow != visible).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/overflow_event`", :tag string}, mouseenter {:name web.Element.ev/mouseenter, :file "src/web/Element/ev.cljs", :line 227, :column 1, :end-line 227, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 227, :column 6, :end-line 227, :end-column 16}, :doc "Event.\n\n  The mouseenter event is fired at an `web.Element` when a pointing\n  (usually a mouse) is initially moved so that its hotspot is within\n  element at which the event was fired.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event`", :tag string}, gesturechange {:name web.Element.ev/gesturechange, :file "src/web/Element/ev.cljs", :line 177, :column 1, :end-line 177, :end-column 19, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 177, :column 6, :end-line 177, :end-column 19}, :doc "Event.\n\n  The gesturechange event is fired when digits move during a touch\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/gesturechange_event`", :tag string}, ms-gesture-hold {:name web.Element.ev/ms-gesture-hold, :file "src/web/Element/ev.cljs", :line 336, :column 1, :end-line 336, :end-column 21, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 336, :column 6, :end-line 336, :end-column 21}, :doc "Event.\n\n  The MSGestureHold event is fired when the user contacts the touch\n  and remains in the same position for a while.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSGestureHold_event`", :tag string}, mouseout {:name web.Element.ev/mouseout, :file "src/web/Element/ev.cljs", :line 248, :column 1, :end-line 248, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 248, :column 6, :end-line 248, :end-column 14}, :doc "Event.\n\n  The mouseout event is fired at an `web.Element` when a pointing\n  (usually a mouse) is used to move the cursor so that it is no\n  contained within the element or one of its children.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event`", :tag string}, touchcancel {:name web.Element.ev/touchcancel, :file "src/web/Element/ev.cljs", :line 431, :column 1, :end-line 431, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 431, :column 6, :end-line 431, :end-column 17}, :doc "Event.\n\n  The touchcancel event is fired when one or more touch points\n  been disrupted in an implementation-specific manner (for example,\n  many touch points are created).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/touchcancel_event`", :tag string}, paste {:name web.Element.ev/paste, :file "src/web/Element/ev.cljs", :line 402, :column 1, :end-line 402, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 402, :column 6, :end-line 402, :end-column 11}, :doc "Event.\n\n  The paste event is fired when the user has initiated a \\\"paste\\\"\n  through the browser's user interface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/paste_event`", :tag string}, afterscriptexecute {:name web.Element.ev/afterscriptexecute, :file "src/web/Element/ev.cljs", :line 5, :column 1, :end-line 5, :end-column 24, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 5, :column 6, :end-line 5, :end-column 24}, :doc "Event.\n\n  The afterscriptexecute event is fired after a script has been\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/afterscriptexecute_event`", :tag string}, compositionupdate {:name web.Element.ev/compositionupdate, :file "src/web/Element/ev.cljs", :line 67, :column 1, :end-line 67, :end-column 23, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 67, :column 6, :end-line 67, :end-column 23}, :doc "Event.\n\n  The compositionupdate event is fired when a new character is\n  in the context of a text composition session controlled by a\n  composition system such as an input method editor.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/compositionupdate_event`", :tag string}, underflow {:name web.Element.ev/underflow, :file "src/web/Element/ev.cljs", :line 452, :column 1, :end-line 452, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 452, :column 6, :end-line 452, :end-column 15}, :doc "Event.\n\n  The non-standard underflow event, which is specific to Firefox,\n  fired when an element is no longer overflowed by its content.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/underflow_event`", :tag string}, mouseover {:name web.Element.ev/mouseover, :file "src/web/Element/ev.cljs", :line 259, :column 1, :end-line 259, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 259, :column 6, :end-line 259, :end-column 15}, :doc "Event.\n\n  The mouseover event is fired at an `web.Element` when a pointing\n  (such as a mouse or trackpad) is used to move the cursor onto\n  element or one of its child elements.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event`", :tag string}, click {:name web.Element.ev/click, :file "src/web/Element/ev.cljs", :line 36, :column 1, :end-line 36, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 36, :column 6, :end-line 36, :end-column 11}, :doc "Event.\n\n  An element receives a click event when a pointing device button\n  as a mouse's primary mouse button) is both pressed and released\n  the pointer is located inside the element.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event`", :tag string}, moz-mouse-pixel-scroll {:name web.Element.ev/moz-mouse-pixel-scroll, :file "src/web/Element/ev.cljs", :line 294, :column 1, :end-line 294, :end-column 28, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 294, :column 6, :end-line 294, :end-column 28}, :doc "Event.\n\n  The Firefox-only, non-standard, and obsolete MozMousePixelScroll\n  is fired at an `web.Element` asynchronously when a mouse wheel\n  similar device is operated. It's represented by the `web.MouseScrollEvent`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MozMousePixelScroll`", :tag string}, mousemove {:name web.Element.ev/mousemove, :file "src/web/Element/ev.cljs", :line 238, :column 1, :end-line 238, :end-column 15, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 238, :column 6, :end-line 238, :end-column 15}, :doc "Event.\n\n  The mousemove event is fired at an element when a pointing device\n  a mouse) is moved while the cursor's hotspot is inside it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event`", :tag string}, blur {:name web.Element.ev/blur, :file "src/web/Element/ev.cljs", :line 25, :column 1, :end-line 25, :end-column 10, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 25, :column 6, :end-line 25, :end-column 10}, :doc "Event.\n\n  The blur event fires when an element has lost focus. The main\n  between this event and `web.focusout` is that focusout bubbles\n  blur does not.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event`", :tag string}, scroll {:name web.Element.ev/scroll, :file "src/web/Element/ev.cljs", :line 516, :column 1, :end-line 516, :end-column 12, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 516, :column 6, :end-line 516, :end-column 12}, :doc "Event.\n\n  The scroll event fires an element has been scrolled.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event`", :tag string}, mouseleave {:name web.Element.ev/mouseleave, :file "src/web/Element/ev.cljs", :line 536, :column 1, :end-line 536, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 536, :column 6, :end-line 536, :end-column 16}, :doc "Event.\n\n  The mouseleave event is fired at an `web.Element` when the cursor\n  a pointing device (usually a mouse) is moved out of it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event`", :tag string}, touchstart {:name web.Element.ev/touchstart, :file "src/web/Element/ev.cljs", :line 442, :column 1, :end-line 442, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 442, :column 6, :end-line 442, :end-column 16}, :doc "Event.\n\n  The touchstart event is fired when one or more touch points are\n  on the touch surface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/touchstart_event`", :tag string}, mousewheel {:name web.Element.ev/mousewheel, :file "src/web/Element/ev.cljs", :line 281, :column 1, :end-line 281, :end-column 16, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 281, :column 6, :end-line 281, :end-column 16}, :doc "Event.\n\n  The obsolete and non-standard mousewheel event is fired asynchronously\n  an `web.Element` to provide updates while a mouse wheel or similar\n  is operated. The mousewheel event was never part of any standard,\n  while it was implemented by several browsers, it was never implemented\n  Firefox.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/mousewheel_event`", :tag string}, webkitmouseforcewillbegin {:name web.Element.ev/webkitmouseforcewillbegin, :file "src/web/Element/ev.cljs", :line 496, :column 1, :end-line 496, :end-column 31, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 496, :column 6, :end-line 496, :end-column 31}, :doc "Event.\n\n  Safari for macOS fires the non-standard webkitmouseforcewillbegin\n  at an `web.Element` before firing the initial mousedown event.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/webkitmouseforcewillbegin_event`", :tag string}, touchend {:name web.Element.ev/touchend, :file "src/web/Element/ev.cljs", :line 546, :column 1, :end-line 546, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 546, :column 6, :end-line 546, :end-column 14}, :doc "Event.\n\n  The touchend event fires when one or more touch points are removed\n  the touch surface.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/touchend_event`", :tag string}, dom-activate {:name web.Element.ev/dom-activate, :file "src/web/Element/ev.cljs", :line 525, :column 1, :end-line 525, :end-column 18, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 525, :column 6, :end-line 525, :end-column 18}, :doc "Event.\n\n  The DOMActivate event is fired at an element when it becomes\n  such as when it is clicked on using the mouse or a keypress is\n  to navigate to it.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/DOMActivate_event`", :tag string}, focus {:name web.Element.ev/focus, :file "src/web/Element/ev.cljs", :line 144, :column 1, :end-line 144, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 144, :column 6, :end-line 144, :end-column 11}, :doc "Event.\n\n  The focus event fires when an element has received focus. The\n  difference between this event and `web.focusin` is that focusin\n  while focus does not.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event`", :tag string}, error {:name web.Element.ev/error, :file "src/web/Element/ev.cljs", :line 133, :column 1, :end-line 133, :end-column 11, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 133, :column 6, :end-line 133, :end-column 11}, :doc "Event.\n\n  The error event is fired on an `web.Element` object when a resource\n  to load, or can't be used. For example, if a script has an execution\n  or an image can't be found or is invalid.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event`", :tag string}, ms-manipulation-state-changed {:name web.Element.ev/ms-manipulation-state-changed, :file "src/web/Element/ev.cljs", :line 380, :column 1, :end-line 380, :end-column 35, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 380, :column 6, :end-line 380, :end-column 35}, :doc "Event.\n\n  MSManipulationStateChanged fires when the state of an element\n  manipulated has changed (ie. whenever you start or finish panning\n  zooming an element).\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/MSManipulationStateChanged_event`", :tag string}, dblclick {:name web.Element.ev/dblclick, :file "src/web/Element/ev.cljs", :line 109, :column 1, :end-line 109, :end-column 14, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Element/ev.cljs", :line 109, :column 6, :end-line 109, :end-column 14}, :doc "Event.\n\n  The dblclick event fires when a pointing device button (such\n  a mouse's primary button) is double-clicked; that is, when it's\n  clicked twice on a single element within a very short span of\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Element/dblclick_event`", :tag string}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "Element Events."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Gamepad, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-pose! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 252, :column 7, :end-line 252, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The pose read-only property of the `web.Gamepad` interface returns\n  `web.GamepadPose` object representing the pose information associated\n  a WebVR controller (e.g. its position and orientation in 3D space).\n\n  `var myGamepadPose = gamepadInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose`"}, :name web.Gamepad/set-pose!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 252, :end-line 252, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pose read-only property of the `web.Gamepad` interface returns\n  `web.GamepadPose` object representing the pose information associated\n  a WebVR controller (e.g. its position and orientation in 3D space).\n\n  `var myGamepadPose = gamepadInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose`"}, timestamp {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 265, :column 7, :end-line 265, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.timestamp property of the `web.Gamepad` interface\n  a `dom.DOMHighResTimeStamp` representing the last time the data\n  this gamepad was updated.\n\n  `readonly    attribute DOMHighResTimeStamp timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/timestamp`"}, :name web.Gamepad/timestamp, :variadic false, :file "src/web/Gamepad.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.timestamp property of the `web.Gamepad` interface\n  a `dom.DOMHighResTimeStamp` representing the last time the data\n  this gamepad was updated.\n\n  `readonly    attribute DOMHighResTimeStamp timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/timestamp`"}, haptic-actuators {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 137, :column 7, :end-line 137, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The hapticActuators read-only property of the `web.Gamepad` interface\n  an array containing `web.GamepadHapticActuator` objects, each\n  which represents haptic feedback hardware available on the controller.\n\n  `var myHapticActuators = gamepadInstance.hapticActuators;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hapticActuators`"}, :name web.Gamepad/haptic-actuators, :variadic false, :file "src/web/Gamepad.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 137, :end-line 137, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The hapticActuators read-only property of the `web.Gamepad` interface\n  an array containing `web.GamepadHapticActuator` objects, each\n  which represents haptic feedback hardware available on the controller.\n\n  `var myHapticActuators = gamepadInstance.hapticActuators;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hapticActuators`"}, display-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 85, :column 7, :end-line 85, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The displayId read-only property of the `web.Gamepad` interface\n  the `vr.VRDisplay.displayId` of the associated `vr.VRDisplay`\n  the VRDisplay that the gamepad is controlling the displayed scene\n\n  `var myDisplayId = gamepadInstance.displayId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/displayId`"}, :name web.Gamepad/display-id, :variadic false, :file "src/web/Gamepad.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The displayId read-only property of the `web.Gamepad` interface\n  the `vr.VRDisplay.displayId` of the associated `vr.VRDisplay`\n  the VRDisplay that the gamepad is controlling the displayed scene\n\n  `var myDisplayId = gamepadInstance.displayId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/displayId`"}, buttons {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 33, :column 7, :end-line 33, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.buttons property of the `web.Gamepad` interface returns\n  array of `web.gamepadButton` objects representing the buttons\n  on the device.\n\n  `readonly    attribute GamepadButton[]     buttons;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/buttons`"}, :name web.Gamepad/buttons, :variadic false, :file "src/web/Gamepad.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.buttons property of the `web.Gamepad` interface returns\n  array of `web.gamepadButton` objects representing the buttons\n  on the device.\n\n  `readonly    attribute GamepadButton[]     buttons;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/buttons`"}, index {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 187, :column 7, :end-line 187, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.index property of the `web.Gamepad` interface returns\n  integer that is auto-incremented to be unique for each device\n  connected to the system.\n\n  `readonly    attribute long                index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/index`"}, :name web.Gamepad/index, :variadic false, :file "src/web/Gamepad.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.index property of the `web.Gamepad` interface returns\n  integer that is auto-incremented to be unique for each device\n  connected to the system.\n\n  `readonly    attribute long                index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/index`"}, set-index! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 200, :column 7, :end-line 200, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.index property of the `web.Gamepad` interface returns\n  integer that is auto-incremented to be unique for each device\n  connected to the system.\n\n  `readonly    attribute long                index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/index`"}, :name web.Gamepad/set-index!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.index property of the `web.Gamepad` interface returns\n  integer that is auto-incremented to be unique for each device\n  connected to the system.\n\n  `readonly    attribute long                index;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/index`"}, set-buttons! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 46, :column 7, :end-line 46, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.buttons property of the `web.Gamepad` interface returns\n  array of `web.gamepadButton` objects representing the buttons\n  on the device.\n\n  `readonly    attribute GamepadButton[]     buttons;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/buttons`"}, :name web.Gamepad/set-buttons!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.buttons property of the `web.Gamepad` interface returns\n  array of `web.gamepadButton` objects representing the buttons\n  on the device.\n\n  `readonly    attribute GamepadButton[]     buttons;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/buttons`"}, axes {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 7, :column 7, :end-line 7, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.axes property of the `web.Gamepad` interface returns\n  array representing the controls with axes present on the device\n  analog thumb sticks).-\n\n  `readonly    attribute double[]            axes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/axes`"}, :name web.Gamepad/axes, :variadic false, :file "src/web/Gamepad.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.axes property of the `web.Gamepad` interface returns\n  array representing the controls with axes present on the device\n  analog thumb sticks).-\n\n  `readonly    attribute double[]            axes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/axes`"}, set-axes! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.axes property of the `web.Gamepad` interface returns\n  array representing the controls with axes present on the device\n  analog thumb sticks).-\n\n  `readonly    attribute double[]            axes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/axes`"}, :name web.Gamepad/set-axes!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.axes property of the `web.Gamepad` interface returns\n  array representing the controls with axes present on the device\n  analog thumb sticks).-\n\n  `readonly    attribute double[]            axes;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/axes`"}, mapping {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 213, :column 7, :end-line 213, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.mapping property of the `web.Gamepad` interface returns\n  string indicating whether the browser has remapped the controls\n  the device to a known layout.\n\n  `readonly    attribute DOMString           mapping;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/mapping`"}, :name web.Gamepad/mapping, :variadic false, :file "src/web/Gamepad.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 213, :end-line 213, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.mapping property of the `web.Gamepad` interface returns\n  string indicating whether the browser has remapped the controls\n  the device to a known layout.\n\n  `readonly    attribute DOMString           mapping;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/mapping`"}, set-display-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 98, :column 7, :end-line 98, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The displayId read-only property of the `web.Gamepad` interface\n  the `vr.VRDisplay.displayId` of the associated `vr.VRDisplay`\n  the VRDisplay that the gamepad is controlling the displayed scene\n\n  `var myDisplayId = gamepadInstance.displayId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/displayId`"}, :name web.Gamepad/set-display-id!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The displayId read-only property of the `web.Gamepad` interface\n  the `vr.VRDisplay.displayId` of the associated `vr.VRDisplay`\n  the VRDisplay that the gamepad is controlling the displayed scene\n\n  `var myDisplayId = gamepadInstance.displayId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/displayId`"}, connected {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 59, :column 7, :end-line 59, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.connected property of the `web.Gamepad` interface\n  a boolean indicating whether the gamepad is still connected to\n  system.\n\n  `readonly    attribute boolean             connected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/connected`"}, :name web.Gamepad/connected, :variadic false, :file "src/web/Gamepad.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.connected property of the `web.Gamepad` interface\n  a boolean indicating whether the gamepad is still connected to\n  system.\n\n  `readonly    attribute boolean             connected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/connected`"}, hand {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 111, :column 7, :end-line 111, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The hand read-only property of the `web.Gamepad` interface returns\n  enum defining what hand the controller is being held in, or is\n  likely to be held in.\n\n  `var myHand = gamepadInstance.hand;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand`"}, :name web.Gamepad/hand, :variadic false, :file "src/web/Gamepad.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The hand read-only property of the `web.Gamepad` interface returns\n  enum defining what hand the controller is being held in, or is\n  likely to be held in.\n\n  `var myHand = gamepadInstance.hand;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand`"}, set-connected! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 72, :column 7, :end-line 72, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.connected property of the `web.Gamepad` interface\n  a boolean indicating whether the gamepad is still connected to\n  system.\n\n  `readonly    attribute boolean             connected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/connected`"}, :name web.Gamepad/set-connected!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.connected property of the `web.Gamepad` interface\n  a boolean indicating whether the gamepad is still connected to\n  system.\n\n  `readonly    attribute boolean             connected;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/connected`"}, set-hand! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 124, :column 7, :end-line 124, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The hand read-only property of the `web.Gamepad` interface returns\n  enum defining what hand the controller is being held in, or is\n  likely to be held in.\n\n  `var myHand = gamepadInstance.hand;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand`"}, :name web.Gamepad/set-hand!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The hand read-only property of the `web.Gamepad` interface returns\n  enum defining what hand the controller is being held in, or is\n  likely to be held in.\n\n  `var myHand = gamepadInstance.hand;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand`"}, id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 163, :column 7, :end-line 163, :end-column 9, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.id property of the `web.Gamepad` interface returns\n  string containing some information about the controller.\n\n  `readonly    attribute DOMString           id;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/id`"}, :name web.Gamepad/id, :variadic false, :file "src/web/Gamepad.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Gamepad.id property of the `web.Gamepad` interface returns\n  string containing some information about the controller.\n\n  `readonly    attribute DOMString           id;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/id`"}, set-haptic-actuators! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 150, :column 7, :end-line 150, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The hapticActuators read-only property of the `web.Gamepad` interface\n  an array containing `web.GamepadHapticActuator` objects, each\n  which represents haptic feedback hardware available on the controller.\n\n  `var myHapticActuators = gamepadInstance.hapticActuators;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hapticActuators`"}, :name web.Gamepad/set-haptic-actuators!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The hapticActuators read-only property of the `web.Gamepad` interface\n  an array containing `web.GamepadHapticActuator` objects, each\n  which represents haptic feedback hardware available on the controller.\n\n  `var myHapticActuators = gamepadInstance.hapticActuators;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hapticActuators`"}, pose {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 239, :column 7, :end-line 239, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The pose read-only property of the `web.Gamepad` interface returns\n  `web.GamepadPose` object representing the pose information associated\n  a WebVR controller (e.g. its position and orientation in 3D space).\n\n  `var myGamepadPose = gamepadInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose`"}, :name web.Gamepad/pose, :variadic false, :file "src/web/Gamepad.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 239, :end-line 239, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pose read-only property of the `web.Gamepad` interface returns\n  `web.GamepadPose` object representing the pose information associated\n  a WebVR controller (e.g. its position and orientation in 3D space).\n\n  `var myGamepadPose = gamepadInstance.pose;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose`"}, set-timestamp! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 278, :column 7, :end-line 278, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.timestamp property of the `web.Gamepad` interface\n  a `dom.DOMHighResTimeStamp` representing the last time the data\n  this gamepad was updated.\n\n  `readonly    attribute DOMHighResTimeStamp timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/timestamp`"}, :name web.Gamepad/set-timestamp!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.timestamp property of the `web.Gamepad` interface\n  a `dom.DOMHighResTimeStamp` representing the last time the data\n  this gamepad was updated.\n\n  `readonly    attribute DOMHighResTimeStamp timestamp;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/timestamp`"}, set-mapping! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 226, :column 7, :end-line 226, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.mapping property of the `web.Gamepad` interface returns\n  string indicating whether the browser has remapped the controls\n  the device to a known layout.\n\n  `readonly    attribute DOMString           mapping;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/mapping`"}, :name web.Gamepad/set-mapping!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 226, :end-line 226, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.mapping property of the `web.Gamepad` interface returns\n  string indicating whether the browser has remapped the controls\n  the device to a known layout.\n\n  `readonly    attribute DOMString           mapping;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/mapping`"}, set-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Gamepad.cljs", :line 175, :column 7, :end-line 175, :end-column 14, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.id property of the `web.Gamepad` interface returns\n  string containing some information about the controller.\n\n  `readonly    attribute DOMString           id;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/id`"}, :name web.Gamepad/set-id!, :variadic false, :file "src/web/Gamepad.cljs", :end-column 14, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Gamepad.id property of the `web.Gamepad` interface returns\n  string containing some information about the controller.\n\n  `readonly    attribute DOMString           id;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/id`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Gamepad interface of the Gamepad API defines an individual\n  or other controller, allowing access to information such as button\n  axis positions, and id."}
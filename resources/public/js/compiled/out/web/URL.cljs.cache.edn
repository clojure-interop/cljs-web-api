{:rename-macros {}, :renames {}, :externs {URL {}}, :use-macros {}, :excludes #{hash}, :name web.URL, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-username! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 358, :column 7, :end-line 358, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The username property of the `web.URL` interface is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/username`"}, :name web.URL/set-username!, :variadic false, :file "src/web/URL.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 358, :end-line 358, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The username property of the `web.URL` interface is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/username`"}, href {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 156, :column 7, :end-line 156, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The href property of the `web.URL` interface is a `web.USVString`\n  the whole URL.\n\n  `string = object.href;\n  object.href = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/href`"}, :name web.URL/href, :variadic false, :file "src/web/URL.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 156, :end-line 156, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The href property of the `web.URL` interface is a `web.USVString`\n  the whole URL.\n\n  `string = object.href;\n  object.href = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/href`"}, set-host! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 116, :column 7, :end-line 116, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The host property of the `web.URL` interface is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/host`"}, :name web.URL/set-host!, :variadic false, :file "src/web/URL.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The host property of the `web.URL` interface is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/host`"}, revoke-object-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 39, :column 7, :end-line 39, :end-column 24, :arglists (quote ([this object-url])), :doc "Method.\n\n  The URL.revokeObjectURL() static method releases an existing\n  URL which was previously created by calling `web.URL.createObjectURL()`.\n\n  `window.URL.revokeObjectURL(objectURL);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL`"}, :name web.URL/revoke-object-url, :variadic false, :file "src/web/URL.cljs", :end-column 24, :method-params ([this object-url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this object-url])), :doc "Method.\n\n  The URL.revokeObjectURL() static method releases an existing\n  URL which was previously created by calling `web.URL.createObjectURL()`.\n\n  `window.URL.revokeObjectURL(objectURL);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL`"}, hash {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 76, :column 7, :end-line 76, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The hash property of the `web.URL` interface returns a `web.USVString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;\n  object.hash = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hash`"}, :name web.URL/hash, :variadic false, :file "src/web/URL.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The hash property of the `web.URL` interface returns a `web.USVString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;\n  object.hash = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hash`"}, set-hostname! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 143, :column 7, :end-line 143, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The hostname property of the `web.URL` interface is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hostname`"}, :name web.URL/set-hostname!, :variadic false, :file "src/web/URL.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The hostname property of the `web.URL` interface is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hostname`"}, protocol {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 278, :column 7, :end-line 278, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The protocol property of the `web.URL` interface is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/protocol`"}, :name web.URL/protocol, :variadic false, :file "src/web/URL.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The protocol property of the `web.URL` interface is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/protocol`"}, create-object-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 24, :column 7, :end-line 24, :end-column 24, :arglists (quote ([this object])), :doc "Method.\n\n  The URL.createObjectURL() static method creates a `dom.DOMString`\n  a URL representing the object given in the parameter. The URL\n  is tied to the `web.document` in the window on which it was created.\n  new object URL represents the specified `file.File` object or\n  object.\n\n  `objectURL = URL.createObjectURL(object);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL`"}, :name web.URL/create-object-url, :variadic false, :file "src/web/URL.cljs", :end-column 24, :method-params ([this object]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this object])), :doc "Method.\n\n  The URL.createObjectURL() static method creates a `dom.DOMString`\n  a URL representing the object given in the parameter. The URL\n  is tied to the `web.document` in the window on which it was created.\n  new object URL represents the specified `file.File` object or\n  object.\n\n  `objectURL = URL.createObjectURL(object);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL`"}, password {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 196, :column 7, :end-line 196, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The password property of the `web.URL` interface is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/password`"}, :name web.URL/password, :variadic false, :file "src/web/URL.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The password property of the `web.URL` interface is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/password`"}, to-string {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 64, :column 7, :end-line 64, :end-column 16, :arglists (quote ([this])), :doc "Method.\n\n  The URL.toString() stringifier method returns a `web.USVString`\n  the whole URL. It is effectively a read-only version of `web.URL.href`.\n\n  `string = url.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/toString`"}, :name web.URL/to-string, :variadic false, :file "src/web/URL.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The URL.toString() stringifier method returns a `web.USVString`\n  the whole URL. It is effectively a read-only version of `web.URL.href`.\n\n  `string = url.toString();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/toString`"}, set-pathname! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 236, :column 7, :end-line 236, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The pathname property of the `web.URL` interface is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname`"}, :name web.URL/set-pathname!, :variadic false, :file "src/web/URL.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 236, :end-line 236, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pathname property of the `web.URL` interface is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname`"}, set-hash! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 89, :column 7, :end-line 89, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The hash property of the `web.URL` interface returns a `web.USVString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;\n  object.hash = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hash`"}, :name web.URL/set-hash!, :variadic false, :file "src/web/URL.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The hash property of the `web.URL` interface returns a `web.USVString`\n  a '#' followed by the fragment identifier of the URL.\n\n  `string = object.hash;\n  object.hash = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hash`"}, pathname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 222, :column 7, :end-line 222, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The pathname property of the `web.URL` interface is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname`"}, :name web.URL/pathname, :variadic false, :file "src/web/URL.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pathname property of the `web.URL` interface is a `web.USVString`\n  an initial '/' followed by the path of the URL (or the empty\n  if there is no path).\n\n  `string = object.pathname;\n  object.pathname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/pathname`"}, username {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 345, :column 7, :end-line 345, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The username property of the `web.URL` interface is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/username`"}, :name web.URL/username, :variadic false, :file "src/web/URL.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 345, :end-line 345, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The username property of the `web.URL` interface is a `web.USVString`\n  the username specified before the domain name.\n\n  `string = object.username;\n  object.username = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/username`"}, to-json {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 51, :column 7, :end-line 51, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The toJSON() method of the `web.URL` interface returns a `web.USVString`\n  a serialized version of the URL, although in practice it seems\n  have the same effect as `web.URL.toString()`.\n\n  `json = url.toJSON();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/toJSON`"}, :name web.URL/to-json, :variadic false, :file "src/web/URL.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The toJSON() method of the `web.URL` interface returns a `web.USVString`\n  a serialized version of the URL, although in practice it seems\n  have the same effect as `web.URL.toString()`.\n\n  `json = url.toJSON();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/toJSON`"}, hostname {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 130, :column 7, :end-line 130, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The hostname property of the `web.URL` interface is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hostname`"}, :name web.URL/hostname, :variadic false, :file "src/web/URL.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The hostname property of the `web.URL` interface is a `web.USVString`\n  the domain of the URL.\n\n  `string = object.hostname;\n  object.hostname = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/hostname`"}, search {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 304, :column 7, :end-line 304, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The search property of the `web.URL` interface is a search string,\n  called a query string, that is a `web.USVString` containing a\n  followed by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/search`"}, :name web.URL/search, :variadic false, :file "src/web/URL.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The search property of the `web.URL` interface is a search string,\n  called a query string, that is a `web.USVString` containing a\n  followed by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/search`"}, port {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 250, :column 7, :end-line 250, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The port property of the `web.URL` interface is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/port`"}, :name web.URL/port, :variadic false, :file "src/web/URL.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The port property of the `web.URL` interface is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/port`"}, set-search! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 318, :column 7, :end-line 318, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The search property of the `web.URL` interface is a search string,\n  called a query string, that is a `web.USVString` containing a\n  followed by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/search`"}, :name web.URL/set-search!, :variadic false, :file "src/web/URL.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The search property of the `web.URL` interface is a search string,\n  called a query string, that is a `web.USVString` containing a\n  followed by the parameters of the URL.\n\n  `string = object.search;\n  object.search = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/search`"}, host {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 102, :column 7, :end-line 102, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The host property of the `web.URL` interface is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/host`"}, :name web.URL/host, :variadic false, :file "src/web/URL.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The host property of the `web.URL` interface is a `web.USVString`\n  the host, that is the hostname, and then, if the port of the\n  is nonempty, a ':', and the port of the URL.\n\n  `string = object.host;\n  object.host = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/host`"}, set-href! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 169, :column 7, :end-line 169, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The href property of the `web.URL` interface is a `web.USVString`\n  the whole URL.\n\n  `string = object.href;\n  object.href = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/href`"}, :name web.URL/set-href!, :variadic false, :file "src/web/URL.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The href property of the `web.URL` interface is a `web.USVString`\n  the whole URL.\n\n  `string = object.href;\n  object.href = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/href`"}, set-password! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 209, :column 7, :end-line 209, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The password property of the `web.URL` interface is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/password`"}, :name web.URL/set-password!, :variadic false, :file "src/web/URL.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The password property of the `web.URL` interface is a `web.USVString`\n  the password specified before the domain name.\n\n  `string = object.password;\n  object.password = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/password`"}, search-params {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 332, :column 7, :end-line 332, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The searchParams readonly property of the `web.URL` interface\n  a `web.URLSearchParams` object allowing access to the GET decoded\n  arguments contained in the URL.\n\n  `var urlSearchParams = URL.searchParams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/searchParams`"}, :name web.URL/search-params, :variadic false, :file "src/web/URL.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The searchParams readonly property of the `web.URL` interface\n  a `web.URLSearchParams` object allowing access to the GET decoded\n  arguments contained in the URL.\n\n  `var urlSearchParams = URL.searchParams;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/searchParams`"}, constructor {:name web.URL/constructor, :file "src/web/URL.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The URL() constructor returns a newly created `web.URL` object representing the URL defined by the parameters.\n\n  url\n  \\tA `web.USVString` representing an absolute or relative URL. If url is a relative URL, base is required, and will be used as the base URL. If url is an absolute URL, a given base will be ignored.\n  \\tbase Optional\n  \\tA `web.USVString` representing the base URL to use in case url is a relative URL. If not specified, it defaults to ''.\n\n\n\n  Note: You can still use an existing `web.URL` object for the base, which stringifies itself to the object's `web.href` attribute.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/URL`", :tag js}, set-protocol! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 291, :column 7, :end-line 291, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The protocol property of the `web.URL` interface is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/protocol`"}, :name web.URL/set-protocol!, :variadic false, :file "src/web/URL.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 291, :end-line 291, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The protocol property of the `web.URL` interface is a `web.USVString`\n  the protocol scheme of the URL, including the final ':'.\n\n  `string = object.protocol;\n  object.protocol = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/protocol`"}, origin {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 182, :column 7, :end-line 182, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The origin read-only property of the `web.URL` interface returns\n  `web.USVString` containing the Unicode serialization of the origin\n  the represented URL. The exact structure varies depending on\n  type of URL:\n\n  `string = URLObject.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/origin`"}, :name web.URL/origin, :variadic false, :file "src/web/URL.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The origin read-only property of the `web.URL` interface returns\n  `web.USVString` containing the Unicode serialization of the origin\n  the represented URL. The exact structure varies depending on\n  type of URL:\n\n  `string = URLObject.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/origin`"}, set-port! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/URL.cljs", :line 264, :column 7, :end-line 264, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The port property of the `web.URL` interface is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/port`"}, :name web.URL/set-port!, :variadic false, :file "src/web/URL.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The port property of the `web.URL` interface is a `web.USVString`\n  the port number of the URL. If the URL does not contain an explicit\n  number, it will be set to ''.\n\n  `string = object.port;\n  object.port = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/URL/port`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The URL interface is used to parse, construct, normalize, and\n  URLs. It works by providing properties which allow you to easily\n  and modify the components of a URL."}
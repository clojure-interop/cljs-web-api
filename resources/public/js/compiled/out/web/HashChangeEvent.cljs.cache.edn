{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.HashChangeEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {new-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/HashChangeEvent.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The newURL read-only property of the `web.HashChangeEvent` interface\n  the new URL to which the window is navigating.\n\n  `let newEventUrl = event.newURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/newURL`"}, :name web.HashChangeEvent/new-url, :variadic false, :file "src/web/HashChangeEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The newURL read-only property of the `web.HashChangeEvent` interface\n  the new URL to which the window is navigating.\n\n  `let newEventUrl = event.newURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/newURL`"}, set-new-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/HashChangeEvent.cljs", :line 18, :column 7, :end-line 18, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The newURL read-only property of the `web.HashChangeEvent` interface\n  the new URL to which the window is navigating.\n\n  `let newEventUrl = event.newURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/newURL`"}, :name web.HashChangeEvent/set-new-url!, :variadic false, :file "src/web/HashChangeEvent.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The newURL read-only property of the `web.HashChangeEvent` interface\n  the new URL to which the window is navigating.\n\n  `let newEventUrl = event.newURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/newURL`"}, old-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/HashChangeEvent.cljs", :line 30, :column 7, :end-line 30, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The oldURL read-only property of the `web.HashChangeEvent` interface\n  the previous URL from which the window was navigated.\n\n  `let oldEventUrl = event.oldURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/oldURL`"}, :name web.HashChangeEvent/old-url, :variadic false, :file "src/web/HashChangeEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The oldURL read-only property of the `web.HashChangeEvent` interface\n  the previous URL from which the window was navigated.\n\n  `let oldEventUrl = event.oldURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/oldURL`"}, set-old-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/HashChangeEvent.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The oldURL read-only property of the `web.HashChangeEvent` interface\n  the previous URL from which the window was navigated.\n\n  `let oldEventUrl = event.oldURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/oldURL`"}, :name web.HashChangeEvent/set-old-url!, :variadic false, :file "src/web/HashChangeEvent.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The oldURL read-only property of the `web.HashChangeEvent` interface\n  the previous URL from which the window was navigated.\n\n  `let oldEventUrl = event.oldURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/HashChangeEvent/oldURL`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The HashChangeEvent interface represents events that fire when\n  fragment identifier of the URL has changed."}
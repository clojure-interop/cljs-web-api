{:rename-macros {}, :renames {}, :externs {OverconstrainedError {}}, :use-macros {}, :excludes #{name}, :name web.OverconstrainedError, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.OverconstrainedError/constructor, :file "src/web/OverconstrainedError.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 9, :column 6, :end-line 9, :end-column 17}, :doc "Constructor.\n\n  The OverconstrainedError constructor creates a new `web.OverconstrainedError` object which indicates that the set of desired capabilities for the current `media.MediaStreamTrack` cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied.\n\n  constraint\n  The constraint that was not satified.\n  message\n  Text for the error's message property.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/OverconstrainedError`", :tag js}, constraint {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 22, :column 7, :end-line 22, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The constraint read-only property of the `web.OverconstrainedError`\n  returns the constraint that was supplied in the constructor,\n  the contraint that was not satisfied.\n\n  `var constraint = Overconstrainederror.constraint;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/constraint`"}, :name web.OverconstrainedError/constraint, :variadic false, :file "src/web/OverconstrainedError.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The constraint read-only property of the `web.OverconstrainedError`\n  returns the constraint that was supplied in the constructor,\n  the contraint that was not satisfied.\n\n  `var constraint = Overconstrainederror.constraint;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/constraint`"}, set-constraint! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 35, :column 7, :end-line 35, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The constraint read-only property of the `web.OverconstrainedError`\n  returns the constraint that was supplied in the constructor,\n  the contraint that was not satisfied.\n\n  `var constraint = Overconstrainederror.constraint;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/constraint`"}, :name web.OverconstrainedError/set-constraint!, :variadic false, :file "src/web/OverconstrainedError.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The constraint read-only property of the `web.OverconstrainedError`\n  returns the constraint that was supplied in the constructor,\n  the contraint that was not satisfied.\n\n  `var constraint = Overconstrainederror.constraint;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/constraint`"}, message {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 48, :column 7, :end-line 48, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The message read-only property of the `web.OverconstrainedError`\n  returns the text supplied in the constructor.\n\n  `var message = OverconstrainedError.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/message`"}, :name web.OverconstrainedError/message, :variadic false, :file "src/web/OverconstrainedError.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The message read-only property of the `web.OverconstrainedError`\n  returns the text supplied in the constructor.\n\n  `var message = OverconstrainedError.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/message`"}, set-message! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 60, :column 7, :end-line 60, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The message read-only property of the `web.OverconstrainedError`\n  returns the text supplied in the constructor.\n\n  `var message = OverconstrainedError.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/message`"}, :name web.OverconstrainedError/set-message!, :variadic false, :file "src/web/OverconstrainedError.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The message read-only property of the `web.OverconstrainedError`\n  returns the text supplied in the constructor.\n\n  `var message = OverconstrainedError.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/message`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 72, :column 7, :end-line 72, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.OverconstrainedError`\n  will always return 'OverconstrainedError'.\n\n  `var name = OverconstrainedError.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/name`"}, :name web.OverconstrainedError/name, :variadic false, :file "src/web/OverconstrainedError.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.OverconstrainedError`\n  will always return 'OverconstrainedError'.\n\n  `var name = OverconstrainedError.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/name`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/OverconstrainedError.cljs", :line 84, :column 7, :end-line 84, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.OverconstrainedError`\n  will always return 'OverconstrainedError'.\n\n  `var name = OverconstrainedError.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/name`"}, :name web.OverconstrainedError/set-name!, :variadic false, :file "src/web/OverconstrainedError.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.OverconstrainedError`\n  will always return 'OverconstrainedError'.\n\n  `var name = OverconstrainedError.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/name`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The OverconstrainedError interface of the Media Capture and Streams\n  indicates that the set of desired capabilities for the current\n  cannot currently be met. When this event is thrown on a MediaStreamTrack,\n  is muted until either the current constraints can be established\n  until satisfiable constraints are applied."}
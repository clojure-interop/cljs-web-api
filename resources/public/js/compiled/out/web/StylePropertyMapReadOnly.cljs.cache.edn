{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{get keys}, :name web.StylePropertyMapReadOnly, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 8, :column 7, :end-line 8, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The StylePropertyMapReadOnly.entries() method returns an array\n  a given object's own enumerable property [key, value] pairs,\n  the same order as that provided by a `web.for...in` loop (the\n  being that a for-in loop enumerates properties in the prototype\n  as well).\n\n  `StylePropertyMapReadOnly.entries()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/entries`"}, :name web.StylePropertyMapReadOnly/entries, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The StylePropertyMapReadOnly.entries() method returns an array\n  a given object's own enumerable property [key, value] pairs,\n  the same order as that provided by a `web.for...in` loop (the\n  being that a for-in loop enumerates properties in the prototype\n  as well).\n\n  `StylePropertyMapReadOnly.entries()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/entries`"}, for-each {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 23, :column 7, :end-line 23, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The StylePropertyMapReadOnly.forEach() method executes a provided\n  once for each element of `web.StylePropertyMapReadOnly`.\n\n  `StylePropertyMapReadOnly.forEach(function callback(currentValue[, index[, array]]) {\n  //your code\n  }[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.StylePropertyMapReadOnly/for-each, :variadic true, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The StylePropertyMapReadOnly.forEach() method executes a provided\n  once for each element of `web.StylePropertyMapReadOnly`.\n\n  `StylePropertyMapReadOnly.forEach(function callback(currentValue[, index[, array]]) {\n  //your code\n  }[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/forEach`"}, get {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 37, :column 7, :end-line 37, :end-column 10, :arglists (quote ([this property])), :doc "Method.\n\n  The get() method of the `web.StylePropertyMapReadOnly` interface\n  a `css.CSSStyleValue` object for the first value of the specified\n\n  `var declarationBlock = StylePropertyMapReadOnly.get(property)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/get`"}, :name web.StylePropertyMapReadOnly/get, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 10, :method-params ([this property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this property])), :doc "Method.\n\n  The get() method of the `web.StylePropertyMapReadOnly` interface\n  a `css.CSSStyleValue` object for the first value of the specified\n\n  `var declarationBlock = StylePropertyMapReadOnly.get(property)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/get`"}, get-all {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 49, :column 7, :end-line 49, :end-column 14, :arglists (quote ([this property])), :doc "Method.\n\n  The getAll() method of the `web.StylePropertyMapReadOnly` interface\n  an array of `css.CSSStyleValue` objects containing the values\n  the provided property.\n\n  `var cssStyleValues[] = StylePropertyMapReadOnly.getAll(property)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll`"}, :name web.StylePropertyMapReadOnly/get-all, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 14, :method-params ([this property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this property])), :doc "Method.\n\n  The getAll() method of the `web.StylePropertyMapReadOnly` interface\n  an array of `css.CSSStyleValue` objects containing the values\n  the provided property.\n\n  `var cssStyleValues[] = StylePropertyMapReadOnly.getAll(property)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/getAll`"}, has {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 62, :column 7, :end-line 62, :end-column 10, :arglists (quote ([this property])), :doc "Method.\n\n  The has() method of the `web.StylePropertyMapReadOnly` interface\n  whether the specified property is in the StylePropertyMapReadOnly\n\n  `var boolean = StylePropertyMapReadOnly.has(property)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/has`"}, :name web.StylePropertyMapReadOnly/has, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 10, :method-params ([this property]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this property])), :doc "Method.\n\n  The has() method of the `web.StylePropertyMapReadOnly` interface\n  whether the specified property is in the StylePropertyMapReadOnly\n\n  `var boolean = StylePropertyMapReadOnly.has(property)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/has`"}, keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 74, :column 7, :end-line 74, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The StylePropertyMapReadOnly.keys() method returns a new Array\n  containing the keys for each item in StylePropertyMapReadOnly\n\n  `StylePropertyMapReadOnly.keys()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/keys`"}, :name web.StylePropertyMapReadOnly/keys, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The StylePropertyMapReadOnly.keys() method returns a new Array\n  containing the keys for each item in StylePropertyMapReadOnly\n\n  `StylePropertyMapReadOnly.keys()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/keys`"}, values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 86, :column 7, :end-line 86, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The StylePropertyMapReadOnly.values() method returns a new Array\n  containing the values for each index in the StylePropertyMapReadOnly\n\n  `StylePropertyMapReadOnly.values()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/values`"}, :name web.StylePropertyMapReadOnly/values, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The StylePropertyMapReadOnly.values() method returns a new Array\n  containing the values for each index in the StylePropertyMapReadOnly\n\n  `StylePropertyMapReadOnly.values()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/values`"}, size {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 98, :column 7, :end-line 98, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The size read-only property of the `web.StylePropertyMapReadOnly`\n  returns an unsinged long integer containing the size of the StylePropertyMapReadOnly\n\n  `var size = StylePropertyMapReadOnly.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/size`"}, :name web.StylePropertyMapReadOnly/size, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The size read-only property of the `web.StylePropertyMapReadOnly`\n  returns an unsinged long integer containing the size of the StylePropertyMapReadOnly\n\n  `var size = StylePropertyMapReadOnly.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/size`"}, set-size! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StylePropertyMapReadOnly.cljs", :line 110, :column 7, :end-line 110, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The size read-only property of the `web.StylePropertyMapReadOnly`\n  returns an unsinged long integer containing the size of the StylePropertyMapReadOnly\n\n  `var size = StylePropertyMapReadOnly.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/size`"}, :name web.StylePropertyMapReadOnly/set-size!, :variadic false, :file "src/web/StylePropertyMapReadOnly.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The size read-only property of the `web.StylePropertyMapReadOnly`\n  returns an unsinged long integer containing the size of the StylePropertyMapReadOnly\n\n  `var size = StylePropertyMapReadOnly.size`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StylePropertyMapReadOnly/size`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The StylePropertyMapReadOnly interface of the the CSS Typed Object\n  API provides a read-only representation of a CSS declaration\n  that is an alternative to `css.CSSStyleDeclaration`. Retrieve\n  instance of this interface using `web.Element.computedStyleMap()`."}
{:rename-macros {}, :renames {}, :externs {MerchantValidationEvent {}}, :use-macros {}, :excludes #{}, :name web.MerchantValidationEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.MerchantValidationEvent/constructor, :file "src/web/MerchantValidationEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MerchantValidationEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The MerchantValidationEvent() constructor creates a new `web.MerchantValidationEvent` object. You should not have to create these events yourself; instead, just handle the merchantvalidation event.\n\n  type\n  A `dom.DOMString` which must be merchantvalidation, the only type of event which uses the MerchantValidationEvent interface.\n  options Optional\n\n  An optional dictionary which may contain zero or more of the following properties:\n\n\n  methodName Optional\n  A `dom.DOMString` containing the payment method identifier for the payment handler being used. This is an empty string by default.\n  validationURL Optional\n  The URL from which to retrieve payment handler specific verification information used to validate the merchant. This is an empty string by default.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/MerchantValidationEvent`", :tag js}, complete {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MerchantValidationEvent.cljs", :line 27, :column 7, :end-line 27, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The `web.MerchantValidationEvent` method complete() takes merchant-specific\n  previously received from the `web.validationURL` and uses it\n  validate the merchant.\n\n  `merchantValidationEvent.complete(validationData);\n  merchantValidationEvent.complete(merchantSessionPromise);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/complete`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.MerchantValidationEvent/complete, :variadic true, :file "src/web/MerchantValidationEvent.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The `web.MerchantValidationEvent` method complete() takes merchant-specific\n  previously received from the `web.validationURL` and uses it\n  validate the merchant.\n\n  `merchantValidationEvent.complete(validationData);\n  merchantValidationEvent.complete(merchantSessionPromise);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/complete`"}, method-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MerchantValidationEvent.cljs", :line 41, :column 7, :end-line 41, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property methodName is a read-only\n  which returns a string indicating the payment method identifier\n  represents the payment handler that requires merchant validation.\n\n  `methodID = merchantValidationEvent.methodName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/methodName`"}, :name web.MerchantValidationEvent/method-name, :variadic false, :file "src/web/MerchantValidationEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property methodName is a read-only\n  which returns a string indicating the payment method identifier\n  represents the payment handler that requires merchant validation.\n\n  `methodID = merchantValidationEvent.methodName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/methodName`"}, set-method-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MerchantValidationEvent.cljs", :line 54, :column 7, :end-line 54, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property methodName is a read-only\n  which returns a string indicating the payment method identifier\n  represents the payment handler that requires merchant validation.\n\n  `methodID = merchantValidationEvent.methodName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/methodName`"}, :name web.MerchantValidationEvent/set-method-name!, :variadic false, :file "src/web/MerchantValidationEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property methodName is a read-only\n  which returns a string indicating the payment method identifier\n  represents the payment handler that requires merchant validation.\n\n  `methodID = merchantValidationEvent.methodName;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/methodName`"}, validation-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MerchantValidationEvent.cljs", :line 67, :column 7, :end-line 67, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property validationURL is a\n  string value providing the URL from which to fetch the payment\n  data needed to validate the merchant.\n\n  `validationURL = merchantValidationEvent.validationURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/validationURL`"}, :name web.MerchantValidationEvent/validation-url, :variadic false, :file "src/web/MerchantValidationEvent.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property validationURL is a\n  string value providing the URL from which to fetch the payment\n  data needed to validate the merchant.\n\n  `validationURL = merchantValidationEvent.validationURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/validationURL`"}, set-validation-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MerchantValidationEvent.cljs", :line 80, :column 7, :end-line 80, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property validationURL is a\n  string value providing the URL from which to fetch the payment\n  data needed to validate the merchant.\n\n  `validationURL = merchantValidationEvent.validationURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/validationURL`"}, :name web.MerchantValidationEvent/set-validation-url!, :variadic false, :file "src/web/MerchantValidationEvent.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MerchantValidationEvent` property validationURL is a\n  string value providing the URL from which to fetch the payment\n  data needed to validate the merchant.\n\n  `validationURL = merchantValidationEvent.validationURL;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MerchantValidationEvent/validationURL`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MerchantValidationEvent interface of the the Payment Request\n  enables a merchant to verify themselves as allowed to use a particular\n  handler."}
{:rename-macros {}, :renames {}, :externs {MouseEvent {}}, :use-macros {}, :excludes #{}, :name web.MouseEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 378, :column 7, :end-line 378, :end-column 8, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.x property is an alias for the `web.MouseEvent.clientX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/x`"}, :name web.MouseEvent/x, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.x property is an alias for the `web.MouseEvent.clientX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/x`"}, set-y! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 405, :column 7, :end-line 405, :end-column 13, :arglists (quote ([this val])), :doc "Property.\n\n  The MouseEvent.y property is an alias for the `web.MouseEvent.clientY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/y`"}, :name web.MouseEvent/set-y!, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 13, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 405, :end-line 405, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MouseEvent.y property is an alias for the `web.MouseEvent.clientY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/y`"}, screen-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 273, :column 7, :end-line 273, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The screenY read-only property of the `web.MouseEvent` interface\n  the vertical coordinate (offset) of the mouse pointer in global\n  coordinates.\n\n  `var y = instanceOfMouseEvent.screenY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/screenY`"}, :name web.MouseEvent/screen-y, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 273, :end-line 273, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The screenY read-only property of the `web.MouseEvent` interface\n  the vertical coordinate (offset) of the mouse pointer in global\n  coordinates.\n\n  `var y = instanceOfMouseEvent.screenY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/screenY`"}, init-mouse-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 28, :column 7, :end-line 28, :end-column 23, :arglists (quote ([this & args])), :doc "Method.\n\n  The MouseEvent.initMouseEvent() method initializes the value\n  a mouse event once it's been created (normally using the `web.Document.createEvent()`\n\n  `event.initMouseEvent(type, canBubble, cancelable, view,\n  detail, screenX, screenY, clientX, clientY,\n  ctrlKey, altKey, shiftKey, metaKey,\n  button, relatedTarget);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/initMouseEvent`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.MouseEvent/init-mouse-event, :variadic true, :file "src/web/MouseEvent.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The MouseEvent.initMouseEvent() method initializes the value\n  a mouse event once it's been created (normally using the `web.Document.createEvent()`\n\n  `event.initMouseEvent(type, canBubble, cancelable, view,\n  detail, screenX, screenY, clientX, clientY,\n  ctrlKey, altKey, shiftKey, metaKey,\n  button, relatedTarget);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/initMouseEvent`"}, set-webkit-force-at-force-mouse-down! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 310, :column 7, :end-line 310, :end-column 44, :arglists (quote ([this val])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN is a proprietary,\n  static numeric property whose value is the minimum force necessary\n  a force click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN`"}, :name web.MouseEvent/set-webkit-force-at-force-mouse-down!, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 44, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN is a proprietary,\n  static numeric property whose value is the minimum force necessary\n  a force click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN`"}, alt-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 43, :column 7, :end-line 43, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.altKey read-only property is a `web.Boolean` that\n  whether the alt key was pressed or not when a given mouse event\n\n  `var altKeyPressed = instanceOfMouseEvent.altKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/altKey`"}, :name web.MouseEvent/alt-key, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.altKey read-only property is a `web.Boolean` that\n  whether the alt key was pressed or not when a given mouse event\n\n  `var altKeyPressed = instanceOfMouseEvent.altKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/altKey`"}, client-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 94, :column 7, :end-line 94, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The clientY read-only property of the `web.MouseEvent` interface\n  the vertical coordinate within the application's client area\n  which the event occurred (as opposed to the coordinate within\n  page).\n\n  `var y = instanceOfMouseEvent.clientY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY`"}, :name web.MouseEvent/client-y, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The clientY read-only property of the `web.MouseEvent` interface\n  the vertical coordinate within the application's client area\n  which the event occurred (as opposed to the coordinate within\n  page).\n\n  `var y = instanceOfMouseEvent.clientY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientY`"}, y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 396, :column 7, :end-line 396, :end-column 8, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.y property is an alias for the `web.MouseEvent.clientY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/y`"}, :name web.MouseEvent/y, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 396, :end-line 396, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.y property is an alias for the `web.MouseEvent.clientY`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/y`"}, client-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 80, :column 7, :end-line 80, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The clientX read-only property of the `web.MouseEvent` interface\n  the horizontal coordinate within the application's client area\n  which the event occurred (as opposed to the coordinate within\n  page).\n\n  `var x = instanceOfMouseEvent.clientX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX`"}, :name web.MouseEvent/client-x, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The clientX read-only property of the `web.MouseEvent` interface\n  the horizontal coordinate within the application's client area\n  which the event occurred (as opposed to the coordinate within\n  page).\n\n  `var x = instanceOfMouseEvent.clientX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/clientX`"}, meta-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 121, :column 7, :end-line 121, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.metaKey read-only property is a `web.Boolean`\n  indicates whether the meta key was pressed or not when a given\n  event occurs.\n\n  `var metaKeyPressed = instanceOfMouseEvent.metaKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/metaKey`"}, :name web.MouseEvent/meta-key, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.metaKey read-only property is a `web.Boolean`\n  indicates whether the meta key was pressed or not when a given\n  event occurs.\n\n  `var metaKeyPressed = instanceOfMouseEvent.metaKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/metaKey`"}, buttons {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 67, :column 7, :end-line 67, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.buttons read-only property indicates which buttons\n  pressed on the mouse (or other input device) when a mouse event\n  triggered.\n\n  `var buttonsPressed = instanceOfMouseEvent.buttons`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons`"}, :name web.MouseEvent/buttons, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.buttons read-only property indicates which buttons\n  pressed on the mouse (or other input device) when a mouse event\n  triggered.\n\n  `var buttonsPressed = instanceOfMouseEvent.buttons`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons`"}, webkit-force-at-mouse-down {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 321, :column 7, :end-line 321, :end-column 33, :arglists (quote ([this])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN is a proprietary, WebKit-specific,\n  numeric property whose value is the minimum force necessary for\n  normal click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_MOUSE_DOWN`"}, :name web.MouseEvent/webkit-force-at-mouse-down, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 33, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN is a proprietary, WebKit-specific,\n  numeric property whose value is the minimum force necessary for\n  normal click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_MOUSE_DOWN`"}, get-modifier-state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 15, :column 7, :end-line 15, :end-column 25, :arglists (quote ([this key-arg])), :doc "Method.\n\n  The MouseEvent.getModifierState() method returns the current\n  of the specified modifier key: true if the modifier is active\n  the modifier key is pressed or locked), otherwise, false.\n\n  `var active =​ event.getModifierState(keyArg);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/getModifierState`"}, :name web.MouseEvent/get-modifier-state, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 25, :method-params ([this key-arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key-arg])), :doc "Method.\n\n  The MouseEvent.getModifierState() method returns the current\n  of the specified modifier key: true if the modifier is active\n  the modifier key is pressed or locked), otherwise, false.\n\n  `var active =​ event.getModifierState(keyArg);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/getModifierState`"}, related-target {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 248, :column 7, :end-line 248, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.relatedTarget read-only property is the secondary\n  for the mouse event, if there is one. That is:\n\n  `var target = instanceOfMouseEvent.relatedTarget`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/relatedTarget`"}, :name web.MouseEvent/related-target, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.relatedTarget read-only property is the secondary\n  for the mouse event, if there is one. That is:\n\n  `var target = instanceOfMouseEvent.relatedTarget`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/relatedTarget`"}, ctrl-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 108, :column 7, :end-line 108, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.ctrlKey read-only property is a `web.Boolean`\n  indicates whether the ctrl key was pressed or not when a given\n  event occurs.\n\n  `var ctrlKeyPressed = instanceOfMouseEvent.ctrlKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/ctrlKey`"}, :name web.MouseEvent/ctrl-key, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.ctrlKey read-only property is a `web.Boolean`\n  indicates whether the ctrl key was pressed or not when a given\n  event occurs.\n\n  `var ctrlKeyPressed = instanceOfMouseEvent.ctrlKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/ctrlKey`"}, webkit-force {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 343, :column 7, :end-line 343, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  MouseEvent.webkitForce is a proprietary, WebKit-specific numeric\n  whose value represents the amount of pressure that is being applied\n  the touchpad or touchscreen.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/webkitForce`"}, :name web.MouseEvent/webkit-force, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 343, :end-line 343, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  MouseEvent.webkitForce is a proprietary, WebKit-specific numeric\n  whose value represents the amount of pressure that is being applied\n  the touchpad or touchscreen.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/webkitForce`"}, button {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 55, :column 7, :end-line 55, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.button read-only property indicates which button\n  pressed on the mouse to trigger the event.\n\n  `var buttonPressed = instanceOfMouseEvent.button`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button`"}, :name web.MouseEvent/button, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.button read-only property indicates which button\n  pressed on the mouse to trigger the event.\n\n  `var buttonPressed = instanceOfMouseEvent.button`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button`"}, offset-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 193, :column 7, :end-line 193, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The offsetY read-only property of the `web.MouseEvent` interface\n  the offset in the Y coordinate of the mouse pointer between that\n  and the padding edge of the target node.\n\n  `var yOffset = instanceOfMouseEvent.offsetY;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetY`"}, :name web.MouseEvent/offset-y, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The offsetY read-only property of the `web.MouseEvent` interface\n  the offset in the Y coordinate of the mouse pointer between that\n  and the padding edge of the target node.\n\n  `var yOffset = instanceOfMouseEvent.offsetY;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetY`"}, set-webkit-force! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 354, :column 7, :end-line 354, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  MouseEvent.webkitForce is a proprietary, WebKit-specific numeric\n  whose value represents the amount of pressure that is being applied\n  the touchpad or touchscreen.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/webkitForce`"}, :name web.MouseEvent/set-webkit-force!, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 354, :end-line 354, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  MouseEvent.webkitForce is a proprietary, WebKit-specific numeric\n  whose value represents the amount of pressure that is being applied\n  the touchpad or touchscreen.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/webkitForce`"}, page-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 206, :column 7, :end-line 206, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The pageX read-only property of the `web.MouseEvent` interface\n  the X (horizontal) coordinate (in pixels) at which the mouse\n  clicked, relative to the left edge of the entire document.\n\n  `var pageX = MouseEvent.pageX;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX`"}, :name web.MouseEvent/page-x, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pageX read-only property of the `web.MouseEvent` interface\n  the X (horizontal) coordinate (in pixels) at which the mouse\n  clicked, relative to the left edge of the entire document.\n\n  `var pageX = MouseEvent.pageX;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX`"}, webkit-force-at-force-mouse-down {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 299, :column 7, :end-line 299, :end-column 39, :arglists (quote ([this])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN is a proprietary,\n  static numeric property whose value is the minimum force necessary\n  a force click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN`"}, :name web.MouseEvent/webkit-force-at-force-mouse-down, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 39, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 299, :end-line 299, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN is a proprietary,\n  static numeric property whose value is the minimum force necessary\n  a force click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN`"}, movement-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 149, :column 7, :end-line 149, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The movementY read-only property of the `web.MouseEvent` interface\n  the difference in the Y coordinate of the mouse pointer between\n  given event and the previous mousemove event. In other words,\n  value of the property is computed like this: currentEvent.movementY\n  currentEvent.screenY - previousEvent.screenY.\n\n  `var yShift = instanceOfMouseEvent.movementY;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY`"}, :name web.MouseEvent/movement-y, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The movementY read-only property of the `web.MouseEvent` interface\n  the difference in the Y coordinate of the mouse pointer between\n  given event and the previous mousemove event. In other words,\n  value of the property is computed like this: currentEvent.movementY\n  currentEvent.screenY - previousEvent.screenY.\n\n  `var yShift = instanceOfMouseEvent.movementY;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementY`"}, page-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 219, :column 7, :end-line 219, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The pageY read-only property of the `web.MouseEvent` interface\n  the Y (vertical) coordinate in pixels of the event relative to\n  whole document. This property takes into account any vertical\n  of the page.\n\n  `var pos = event.pageY;\n\n  Originally, this property was defined as a long integer. The CSSOM View Module redefined it as a double float. See the Browser compatibility section for details.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY`"}, :name web.MouseEvent/page-y, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pageY read-only property of the `web.MouseEvent` interface\n  the Y (vertical) coordinate in pixels of the event relative to\n  whole document. This property takes into account any vertical\n  of the page.\n\n  `var pos = event.pageY;\n\n  Originally, this property was defined as a long integer. The CSSOM View Module redefined it as a double float. See the Browser compatibility section for details.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY`"}, region {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 235, :column 7, :end-line 235, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.region read-only property returns the id of the\n  hit region affected by the event. If no hit region is affected,\n  is returned.\n\n  `var hitRegion = instanceOfMouseEvent.region`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/region`"}, :name web.MouseEvent/region, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 235, :end-line 235, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.region read-only property returns the id of the\n  hit region affected by the event. If no hit region is affected,\n  is returned.\n\n  `var hitRegion = instanceOfMouseEvent.region`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/region`"}, moz-input-source {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 164, :column 7, :end-line 164, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.mozInputSource read-only property on `web.MouseEvent`\n  information indicating the type of device that generated the\n  This lets you, for example, determine whether a mouse event was\n  by an actual mouse or by a touch event (which might affect the\n  of accuracy with which you interpret the coordinates associated\n  the event).\n\n  `var source = instanceOfMouseEvent.mozInputSource;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/mozInputSource`"}, :name web.MouseEvent/moz-input-source, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.mozInputSource read-only property on `web.MouseEvent`\n  information indicating the type of device that generated the\n  This lets you, for example, determine whether a mouse event was\n  by an actual mouse or by a touch event (which might affect the\n  of accuracy with which you interpret the coordinates associated\n  the event).\n\n  `var source = instanceOfMouseEvent.mozInputSource;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/mozInputSource`"}, which {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 365, :column 7, :end-line 365, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.which read-only property indicates which button\n  pressed on the mouse to trigger the event. The standard alternatives\n  this property are `web.MouseEvent.button` and `web.MouseEvent.buttons`.\n\n  `var buttonPressed = instanceOfMouseEvent.which`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which`"}, :name web.MouseEvent/which, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 365, :end-line 365, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.which read-only property indicates which button\n  pressed on the mouse to trigger the event. The standard alternatives\n  this property are `web.MouseEvent.button` and `web.MouseEvent.buttons`.\n\n  `var buttonPressed = instanceOfMouseEvent.which`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which`"}, movement-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 134, :column 7, :end-line 134, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The movementX read-only property of the `web.MouseEvent` interface\n  the difference in the X coordinate of the mouse pointer between\n  given event and the previous mousemove event. In other words,\n  value of the property is computed like this: currentEvent.movementX\n  currentEvent.screenX - previousEvent.screenX.\n\n  `var xShift = instanceOfMouseEvent.movementX;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX`"}, :name web.MouseEvent/movement-x, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The movementX read-only property of the `web.MouseEvent` interface\n  the difference in the X coordinate of the mouse pointer between\n  given event and the previous mousemove event. In other words,\n  value of the property is computed like this: currentEvent.movementX\n  currentEvent.screenX - previousEvent.screenX.\n\n  `var xShift = instanceOfMouseEvent.movementX;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/movementX`"}, set-webkit-force-at-mouse-down! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 332, :column 7, :end-line 332, :end-column 38, :arglists (quote ([this val])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN is a proprietary, WebKit-specific,\n  numeric property whose value is the minimum force necessary for\n  normal click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_MOUSE_DOWN`"}, :name web.MouseEvent/set-webkit-force-at-mouse-down!, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 38, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  MouseEvent.WEBKIT_FORCE_AT_MOUSE_DOWN is a proprietary, WebKit-specific,\n  numeric property whose value is the minimum force necessary for\n  normal click.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/WEBKIT_FORCE_AT_MOUSE_DOWN`"}, screen-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 260, :column 7, :end-line 260, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The screenX read-only property of the `web.MouseEvent` interface\n  the horizontal coordinate (offset) of the mouse pointer in global\n  coordinates.\n\n  `var x = instanceOfMouseEvent.screenX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/screenX`"}, :name web.MouseEvent/screen-x, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The screenX read-only property of the `web.MouseEvent` interface\n  the horizontal coordinate (offset) of the mouse pointer in global\n  coordinates.\n\n  `var x = instanceOfMouseEvent.screenX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/screenX`"}, shift-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 286, :column 7, :end-line 286, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.shiftKey read-only property is a `web.Boolean`\n  indicates whether the shift key was pressed or not when a given\n  event occurs.\n\n  `var shiftKeyPressed = instanceOfMouseEvent.shiftKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/shiftKey`"}, :name web.MouseEvent/shift-key, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 286, :end-line 286, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The MouseEvent.shiftKey read-only property is a `web.Boolean`\n  indicates whether the shift key was pressed or not when a given\n  event occurs.\n\n  `var shiftKeyPressed = instanceOfMouseEvent.shiftKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/shiftKey`"}, set-x! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 387, :column 7, :end-line 387, :end-column 13, :arglists (quote ([this val])), :doc "Property.\n\n  The MouseEvent.x property is an alias for the `web.MouseEvent.clientX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/x`"}, :name web.MouseEvent/set-x!, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 13, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 387, :end-line 387, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The MouseEvent.x property is an alias for the `web.MouseEvent.clientX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/x`"}, constructor {:name web.MouseEvent/constructor, :file "src/web/MouseEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The MouseEvent() constructor creates a new `web.MouseEvent`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent`", :tag js}, offset-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MouseEvent.cljs", :line 180, :column 7, :end-line 180, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The offsetX read-only property of the `web.MouseEvent` interface\n  the offset in the X coordinate of the mouse pointer between that\n  and the padding edge of the target node.\n\n  `var xOffset = instanceOfMouseEvent.offsetX;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX`"}, :name web.MouseEvent/offset-x, :variadic false, :file "src/web/MouseEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The offsetX read-only property of the `web.MouseEvent` interface\n  the offset in the X coordinate of the mouse pointer between that\n  and the padding edge of the target node.\n\n  `var xOffset = instanceOfMouseEvent.offsetX;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MouseEvent interface represents events that occur due to\n  user interacting with a pointing device (such as a mouse). Common\n  using this interface include click, dblclick, mouseup, mousedown."}
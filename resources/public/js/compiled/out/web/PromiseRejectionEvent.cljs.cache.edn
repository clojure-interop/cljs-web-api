{:rename-macros {}, :renames {}, :externs {PromiseRejectionEvent {}}, :use-macros {}, :excludes #{}, :name web.PromiseRejectionEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.PromiseRejectionEvent/constructor, :file "src/web/PromiseRejectionEvent.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PromiseRejectionEvent.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The PromiseRejectionEvent() constructor returns a newly created `web.PromiseRejectionEvent`, which represents events fired when a JavaScript `web.Promise` is rejected.\n\n  The PromiseRejectionEvent() constructor also inherits parameters from `web.Event()`.\n\n\n  type\n  A string representing the name of the type of the PromiseRejectionEvent. This is case-sensitive and should be one of \\\"rejectionhandled\\\" or \\\"unhandledrejection\\\", to match the event names of the possible (non-synthetic) `web.PromiseRejectionEvent` events that user agents can actually fire).\n  options\n  An `web.Object` specifying details about the rejection which occurred:\n\n  promise\n  The `web.Promise` that was rejected.\n  reason\n  Any value or `web.Object` which represents the reason the promise was rejected. This can be anything from a numeric error code to an error `dom.DOMString` to an object which contains detailed information describing the situation resulting in the promise being rejected.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/PromiseRejectionEvent`", :tag js}, promise {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PromiseRejectionEvent.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The `web.PromiseRejectionEvent` interface's promise read-only\n  indicates the JavaScript `web.Promise` which was rejected. You\n  examine the event's `web.PromiseRejectionEvent.reason` property\n  learn why the promise was rejected.\n\n  `promise = PromiseRejectionEvent.promise`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/promise`"}, :name web.PromiseRejectionEvent/promise, :variadic false, :file "src/web/PromiseRejectionEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.PromiseRejectionEvent` interface's promise read-only\n  indicates the JavaScript `web.Promise` which was rejected. You\n  examine the event's `web.PromiseRejectionEvent.reason` property\n  learn why the promise was rejected.\n\n  `promise = PromiseRejectionEvent.promise`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/promise`"}, set-promise! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PromiseRejectionEvent.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.PromiseRejectionEvent` interface's promise read-only\n  indicates the JavaScript `web.Promise` which was rejected. You\n  examine the event's `web.PromiseRejectionEvent.reason` property\n  learn why the promise was rejected.\n\n  `promise = PromiseRejectionEvent.promise`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/promise`"}, :name web.PromiseRejectionEvent/set-promise!, :variadic false, :file "src/web/PromiseRejectionEvent.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.PromiseRejectionEvent` interface's promise read-only\n  indicates the JavaScript `web.Promise` which was rejected. You\n  examine the event's `web.PromiseRejectionEvent.reason` property\n  learn why the promise was rejected.\n\n  `promise = PromiseRejectionEvent.promise`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/promise`"}, reason {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PromiseRejectionEvent.cljs", :line 55, :column 7, :end-line 55, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `web.PromiseRejection` property reason read-only\n  is any JavaScript value or `web.Object` which provides the reason\n  into `web.Promise.reject()`. This in theory provides information\n  why the promise was rejected.\n\n  `reason = PromiseRejectionEvent.reason`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/reason`"}, :name web.PromiseRejectionEvent/reason, :variadic false, :file "src/web/PromiseRejectionEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `web.PromiseRejection` property reason read-only\n  is any JavaScript value or `web.Object` which provides the reason\n  into `web.Promise.reject()`. This in theory provides information\n  why the promise was rejected.\n\n  `reason = PromiseRejectionEvent.reason`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/reason`"}, set-reason! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PromiseRejectionEvent.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only `web.PromiseRejection` property reason read-only\n  is any JavaScript value or `web.Object` which provides the reason\n  into `web.Promise.reject()`. This in theory provides information\n  why the promise was rejected.\n\n  `reason = PromiseRejectionEvent.reason`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/reason`"}, :name web.PromiseRejectionEvent/set-reason!, :variadic false, :file "src/web/PromiseRejectionEvent.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only `web.PromiseRejection` property reason read-only\n  is any JavaScript value or `web.Object` which provides the reason\n  into `web.Promise.reject()`. This in theory provides information\n  why the promise was rejected.\n\n  `reason = PromiseRejectionEvent.reason`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent/reason`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PromiseRejectionEvent interface represents events which are\n  to the global script context when JavaScript `web.Promise`s are"}
// Compiled by ClojureScript 1.9.946 {}
goog.provide('web.CompositionEvent');
goog.require('cljs.core');
/**
 * Constructor.
 * 
 *   The CompositionEvent() constructor creates a new `web.CompositionEvent` object instance.
 * 
 *   See also: `https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/CompositionEvent`
 */
web.CompositionEvent.constructor$ = CompositionEvent;
/**
 * Method.
 * 
 *   The initCompositionEvent() method of the `web.CompositionEvent`
 *   initializes the attributes of a CompositionEvent object instance.
 * 
 *   `compositionEventInstance.initCompositionEvent(typeArg, canBubbleArg, cancelableArg, viewArg, dataArg, localeArg)`
 * 
 *   See also: `https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/initCompositionEvent`
 */
web.CompositionEvent.init_composition_event = (function web$CompositionEvent$init_composition_event(this$,type_arg,can_bubble_arg,cancelable_arg,view_arg,data_arg,locale_arg){
return this$.initCompositionEvent(type_arg,can_bubble_arg,cancelable_arg,view_arg,data_arg,locale_arg);
});
/**
 * Property.
 * 
 *   The data read-only property of the `web.CompositionEvent` interface
 *   the characters generated by the input method that raised the
 *   its exact nature varies depending on the type of event that generated
 *   CompositionEvent object.
 * 
 *   `myData = CompositionEvent.data`
 * 
 *   See also: `https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/data`
 */
web.CompositionEvent.data = (function web$CompositionEvent$data(this$){
return this$.data();
});
/**
 * Property.
 * 
 *   The data read-only property of the `web.CompositionEvent` interface
 *   the characters generated by the input method that raised the
 *   its exact nature varies depending on the type of event that generated
 *   CompositionEvent object.
 * 
 *   `myData = CompositionEvent.data`
 * 
 *   See also: `https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/data`
 */
web.CompositionEvent.set_data_BANG_ = (function web$CompositionEvent$set_data_BANG_(this$,val){
return (this$["data"] = val);
});
/**
 * Property.
 * 
 *   The locale read-only property of the `web.CompositionEvent` interface
 *   the locale of current input method (for example, the keyboard
 *   locale if the composition is associated with IME).
 * 
 *   `myLocale = CompositionEvent.locale`
 * 
 *   See also: `https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/locale`
 */
web.CompositionEvent.locale = (function web$CompositionEvent$locale(this$){
return this$.locale();
});
/**
 * Property.
 * 
 *   The locale read-only property of the `web.CompositionEvent` interface
 *   the locale of current input method (for example, the keyboard
 *   locale if the composition is associated with IME).
 * 
 *   `myLocale = CompositionEvent.locale`
 * 
 *   See also: `https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent/locale`
 */
web.CompositionEvent.set_locale_BANG_ = (function web$CompositionEvent$set_locale_BANG_(this$,val){
return (this$["locale"] = val);
});

//# sourceMappingURL=CompositionEvent.js.map?rel=1565798804681

{:rename-macros {}, :renames {}, :externs {DynamicsCompressorNode {}}, :use-macros {}, :excludes #{}, :name web.DynamicsCompressorNode, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {attack {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 24, :column 7, :end-line 24, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.attack.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/attack`"}, :name web.DynamicsCompressorNode/attack, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.attack.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/attack`"}, set-ratio! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 89, :column 7, :end-line 89, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.ratio.value = 12;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/ratio`"}, :name web.DynamicsCompressorNode/set-ratio!, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.ratio.value = 12;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/ratio`"}, reduction {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 102, :column 7, :end-line 102, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The reduction read-only property of the `web.DynamicsCompressorNode`\n  is a float representing the amount of gain reduction currently\n  by the compressor to the signal.\n\n  `var myReduction = compressorNodeInstance.reduction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/reduction`"}, :name web.DynamicsCompressorNode/reduction, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The reduction read-only property of the `web.DynamicsCompressorNode`\n  is a float representing the amount of gain reduction currently\n  by the compressor to the signal.\n\n  `var myReduction = compressorNodeInstance.reduction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/reduction`"}, set-knee! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 63, :column 7, :end-line 63, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.knee.value = 40;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/knee`"}, :name web.DynamicsCompressorNode/set-knee!, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.knee.value = 40;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/knee`"}, release {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 128, :column 7, :end-line 128, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.release.value = 0.25;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/release`"}, :name web.DynamicsCompressorNode/release, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.release.value = 0.25;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/release`"}, set-reduction! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 115, :column 7, :end-line 115, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The reduction read-only property of the `web.DynamicsCompressorNode`\n  is a float representing the amount of gain reduction currently\n  by the compressor to the signal.\n\n  `var myReduction = compressorNodeInstance.reduction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/reduction`"}, :name web.DynamicsCompressorNode/set-reduction!, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The reduction read-only property of the `web.DynamicsCompressorNode`\n  is a float representing the amount of gain reduction currently\n  by the compressor to the signal.\n\n  `var myReduction = compressorNodeInstance.reduction;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/reduction`"}, threshold {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 154, :column 7, :end-line 154, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.threshold.value = -50;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/threshold`"}, :name web.DynamicsCompressorNode/threshold, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.threshold.value = -50;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/threshold`"}, set-threshold! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 167, :column 7, :end-line 167, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.threshold.value = -50;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/threshold`"}, :name web.DynamicsCompressorNode/set-threshold!, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.threshold.value = -50;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/threshold`"}, set-attack! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 37, :column 7, :end-line 37, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.attack.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/attack`"}, :name web.DynamicsCompressorNode/set-attack!, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.attack.value = 0;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/attack`"}, knee {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 50, :column 7, :end-line 50, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.knee.value = 40;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/knee`"}, :name web.DynamicsCompressorNode/knee, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.knee.value = 40;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/knee`"}, set-release! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 141, :column 7, :end-line 141, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.release.value = 0.25;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/release`"}, :name web.DynamicsCompressorNode/set-release!, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.release.value = 0.25;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/release`"}, ratio {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 76, :column 7, :end-line 76, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.ratio.value = 12;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/ratio`"}, :name web.DynamicsCompressorNode/ratio, :variadic false, :file "src/web/DynamicsCompressorNode.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An `audio.AudioParam`.\n\n  `var audioCtx = new AudioContext();\n  var compressor = audioCtx.createDynamicsCompressor();\n  compressor.ratio.value = 12;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/ratio`"}, constructor {:name web.DynamicsCompressorNode/constructor, :file "src/web/DynamicsCompressorNode.cljs", :line 5, :column 1, :end-line 5, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DynamicsCompressorNode.cljs", :line 5, :column 6, :end-line 5, :end-column 17}, :doc "Constructor.\n\n  The DynamicsCompressorNode() constructor creates a new `web.DynamicsCompressorNode` object which provides a compression effect, which lowers the volume of the loudest parts of the signal\n\n  context\n  A reference to an `audio.AudioContext`.\n  options Optional\n  Options are as follows:\n\n  attack: The amount of time (in seconds) to reduce the gain by 10dB. Its default value is 0.003. This parameter is k-rate. Its nominal range is [0, 1].\n  knee: A decibel value representing the range above the threshold where the curve smoothly transitions to the \\\"ratio\\\" portion. Its default value is 30. This parameter is k-rate. Its nominal range is [0, 40].\n  ratio: The amount of dB change in input for a 1 dB change in output. Its default value is 12. This parameter is k-rate. Its nominal range is [1, 20].\n  release: The amount of time (in seconds) to increase the gain by 10dB. Its default value is 0.250. This parameter is k-rate. Its nominal range is [0, 1].\n  threshold: The decibel value above which the compression will start taking effect. Its default value is -24. This parameter is k-rate. Its nominal range is [-100, 0].\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DynamicsCompressorNode/DynamicsCompressorNode`", :tag js}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "Inherits properties from its parent, `audio.AudioNode`."}
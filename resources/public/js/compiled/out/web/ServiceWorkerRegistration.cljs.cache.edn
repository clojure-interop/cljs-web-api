{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{update}, :name web.ServiceWorkerRegistration, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-navigation-preload! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 134, :column 7, :end-line 134, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The navigationPreload read-only property of the `web.ServiceWorkerRegistration`\n  returns the `web.NavigationPreloadManager` associated with the\n  service worker registration.\n\n  `var navigationPreloadManager = serviceWorkerRegistration.navigationPreload`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/navigationPreload`"}, :name web.ServiceWorkerRegistration/set-navigation-preload!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The navigationPreload read-only property of the `web.ServiceWorkerRegistration`\n  returns the `web.NavigationPreloadManager` associated with the\n  service worker registration.\n\n  `var navigationPreloadManager = serviceWorkerRegistration.navigationPreload`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/navigationPreload`"}, get-notifications {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 7, :column 7, :end-line 7, :end-column 24, :arglists (quote ([this & args])), :doc "Method.\n\n  The getNotifications() method of the `web.ServiceWorkerRegistration`\n  returns a list of the notifications in the order that they were\n  from the current origin via the current service worker registration.\n  can have many active but differently-scoped service worker registrations.\n  created by one service worker on the same origin will not be\n  to other active services workers on that same origin.\n\n  `​ServiceWorkerRegistration.getNotifications(options)\n  .then(function(NotificationsList) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/getNotifications`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ServiceWorkerRegistration/get-notifications, :variadic true, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The getNotifications() method of the `web.ServiceWorkerRegistration`\n  returns a list of the notifications in the order that they were\n  from the current origin via the current service worker registration.\n  can have many active but differently-scoped service worker registrations.\n  created by one service worker on the same origin will not be\n  to other active services workers on that same origin.\n\n  `​ServiceWorkerRegistration.getNotifications(options)\n  .then(function(NotificationsList) { ... });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/getNotifications`"}, periodic-sync {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 175, :column 7, :end-line 175, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The periodicSync read-only property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PeriodicSyncManager` interface,\n  manages periodic background synchronization processes.\n\n  `myPeriodicSync = ServiceWorker.periodicSync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/periodicSync`"}, :name web.ServiceWorkerRegistration/periodic-sync, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The periodicSync read-only property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PeriodicSyncManager` interface,\n  manages periodic background synchronization processes.\n\n  `myPeriodicSync = ServiceWorker.periodicSync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/periodicSync`"}, set-onupdatefound! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 161, :column 7, :end-line 161, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The onupdatefound property of the `web.ServiceWorkerRegistration`\n  is an EventListener property called whenever an event of type\n  is fired; it is fired any time the ServiceWorkerRegistration.installing\n  acquires a new service worker.\n\n  `ServiceWorkerRegistration.onupdatefound = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/onupdatefound`"}, :name web.ServiceWorkerRegistration/set-onupdatefound!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onupdatefound property of the `web.ServiceWorkerRegistration`\n  is an EventListener property called whenever an event of type\n  is fired; it is fired any time the ServiceWorkerRegistration.installing\n  acquires a new service worker.\n\n  `ServiceWorkerRegistration.onupdatefound = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/onupdatefound`"}, unregister {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 36, :column 7, :end-line 36, :end-column 17, :arglists (quote ([this & args])), :doc "Method.\n\n  The unregister method of the `web.ServiceWorkerRegistration`\n  unregisters the service worker registration and returns a `web.Promise`.\n  promise will resolve to false if no registration was found, otherwise\n  resolves to true irrespective of whether unregistration happened\n  not (it may not unregister if someone else just called `web.ServiceWorkerContainer.register`\n  the same scope.) The service worker will finish any ongoing operations\n  it is unregistered.\n\n  `ServiceWorkerRegistration.unregister().then(function(boolean) {\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/unregister`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ServiceWorkerRegistration/unregister, :variadic true, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The unregister method of the `web.ServiceWorkerRegistration`\n  unregisters the service worker registration and returns a `web.Promise`.\n  promise will resolve to false if no registration was found, otherwise\n  resolves to true irrespective of whether unregistration happened\n  not (it may not unregister if someone else just called `web.ServiceWorkerContainer.register`\n  the same scope.) The service worker will finish any ongoing operations\n  it is unregistered.\n\n  `ServiceWorkerRegistration.unregister().then(function(boolean) {\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/unregister`"}, onupdatefound {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 147, :column 7, :end-line 147, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The onupdatefound property of the `web.ServiceWorkerRegistration`\n  is an EventListener property called whenever an event of type\n  is fired; it is fired any time the ServiceWorkerRegistration.installing\n  acquires a new service worker.\n\n  `ServiceWorkerRegistration.onupdatefound = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/onupdatefound`"}, :name web.ServiceWorkerRegistration/onupdatefound, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onupdatefound property of the `web.ServiceWorkerRegistration`\n  is an EventListener property called whenever an event of type\n  is fired; it is fired any time the ServiceWorkerRegistration.installing\n  acquires a new service worker.\n\n  `ServiceWorkerRegistration.onupdatefound = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/onupdatefound`"}, set-waiting! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 296, :column 7, :end-line 296, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The waiting property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is installed.\n  property is initially set to null.\n\n  `var serviceWorker = ServiceWorker.waiting`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/waiting`"}, :name web.ServiceWorkerRegistration/set-waiting!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The waiting property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is installed.\n  property is initially set to null.\n\n  `var serviceWorker = ServiceWorker.waiting`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/waiting`"}, set-push-manager! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 215, :column 7, :end-line 215, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The pushManager property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PushManager` interface for managing\n  subscriptions; this includes support for subscribing, getting\n  active subscription, and accessing push permission status.\n\n  `myPushManager = ServiceWorker.pushManager`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/pushManager`"}, :name web.ServiceWorkerRegistration/set-push-manager!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The pushManager property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PushManager` interface for managing\n  subscriptions; this includes support for subscribing, getting\n  active subscription, and accessing push permission status.\n\n  `myPushManager = ServiceWorker.pushManager`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/pushManager`"}, update {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 54, :column 7, :end-line 54, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The update method of the `web.ServiceWorkerRegistration` interface\n  to update the service worker. It fetches the worker's script\n  and if the new worker is not byte-by-byte identical to the current\n  it installs the new worker. The fetch of the worker bypasses\n  browser caches if the previous fetch occurred over 24 hours ago.\n\n  `ServiceWorkerRegistration.update();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/update`"}, :name web.ServiceWorkerRegistration/update, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The update method of the `web.ServiceWorkerRegistration` interface\n  to update the service worker. It fetches the worker's script\n  and if the new worker is not byte-by-byte identical to the current\n  it installs the new worker. The fetch of the worker bypasses\n  browser caches if the previous fetch occurred over 24 hours ago.\n\n  `ServiceWorkerRegistration.update();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/update`"}, sync {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 257, :column 7, :end-line 257, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The sync property of the `web.ServiceWorkerRegistration` interface\n  a reference to the `web.SyncManager` interface, which manages\n  synchronization processes.\n\n  `mySyncManager = ServiceWorker.sync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/sync`"}, :name web.ServiceWorkerRegistration/sync, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The sync property of the `web.ServiceWorkerRegistration` interface\n  a reference to the `web.SyncManager` interface, which manages\n  synchronization processes.\n\n  `mySyncManager = ServiceWorker.sync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/sync`"}, scope {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 229, :column 7, :end-line 229, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The scope read-only property of the `web.ServiceWorkerRegistration`\n  returns a unique identifier for a service worker registration.\n  service worker must be on the same origin as the document that\n  the ServiceWorker.\n\n  `swScope = ServiceWorkerRegistration.scope;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/scope`"}, :name web.ServiceWorkerRegistration/scope, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 229, :end-line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The scope read-only property of the `web.ServiceWorkerRegistration`\n  returns a unique identifier for a service worker registration.\n  service worker must be on the same origin as the document that\n  the ServiceWorker.\n\n  `swScope = ServiceWorkerRegistration.scope;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/scope`"}, set-active! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 82, :column 7, :end-line 82, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The active property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is activating\n  activated. This property is initially set to null.\n\n  `sw = ServiceWorker.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/active`"}, :name web.ServiceWorkerRegistration/set-active!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The active property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is activating\n  activated. This property is initially set to null.\n\n  `sw = ServiceWorker.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/active`"}, navigation-preload {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 121, :column 7, :end-line 121, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The navigationPreload read-only property of the `web.ServiceWorkerRegistration`\n  returns the `web.NavigationPreloadManager` associated with the\n  service worker registration.\n\n  `var navigationPreloadManager = serviceWorkerRegistration.navigationPreload`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/navigationPreload`"}, :name web.ServiceWorkerRegistration/navigation-preload, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The navigationPreload read-only property of the `web.ServiceWorkerRegistration`\n  returns the `web.NavigationPreloadManager` associated with the\n  service worker registration.\n\n  `var navigationPreloadManager = serviceWorkerRegistration.navigationPreload`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/navigationPreload`"}, waiting {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 283, :column 7, :end-line 283, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The waiting property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is installed.\n  property is initially set to null.\n\n  `var serviceWorker = ServiceWorker.waiting`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/waiting`"}, :name web.ServiceWorkerRegistration/waiting, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The waiting property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is installed.\n  property is initially set to null.\n\n  `var serviceWorker = ServiceWorker.waiting`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/waiting`"}, installing {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 95, :column 7, :end-line 95, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The installing property of the `web.ServiceWorkerRegistration`\n  returns a service worker whose `web.ServiceWorker.state` is installing.\n  property is initially set to null.\n\n  `sw = ServiceWorker.installing`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/installing`"}, :name web.ServiceWorkerRegistration/installing, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The installing property of the `web.ServiceWorkerRegistration`\n  returns a service worker whose `web.ServiceWorker.state` is installing.\n  property is initially set to null.\n\n  `sw = ServiceWorker.installing`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/installing`"}, set-periodic-sync! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 188, :column 7, :end-line 188, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The periodicSync read-only property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PeriodicSyncManager` interface,\n  manages periodic background synchronization processes.\n\n  `myPeriodicSync = ServiceWorker.periodicSync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/periodicSync`"}, :name web.ServiceWorkerRegistration/set-periodic-sync!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The periodicSync read-only property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PeriodicSyncManager` interface,\n  manages periodic background synchronization processes.\n\n  `myPeriodicSync = ServiceWorker.periodicSync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/periodicSync`"}, active {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 69, :column 7, :end-line 69, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The active property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is activating\n  activated. This property is initially set to null.\n\n  `sw = ServiceWorker.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/active`"}, :name web.ServiceWorkerRegistration/active, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The active property of the `web.ServiceWorkerRegistration` interface\n  a service worker whose `web.ServiceWorker.state` is activating\n  activated. This property is initially set to null.\n\n  `sw = ServiceWorker.active`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/active`"}, push-manager {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 201, :column 7, :end-line 201, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The pushManager property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PushManager` interface for managing\n  subscriptions; this includes support for subscribing, getting\n  active subscription, and accessing push permission status.\n\n  `myPushManager = ServiceWorker.pushManager`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/pushManager`"}, :name web.ServiceWorkerRegistration/push-manager, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The pushManager property of the `web.ServiceWorkerRegistration`\n  returns a reference to the `web.PushManager` interface for managing\n  subscriptions; this includes support for subscribing, getting\n  active subscription, and accessing push permission status.\n\n  `myPushManager = ServiceWorker.pushManager`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/pushManager`"}, set-installing! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 108, :column 7, :end-line 108, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The installing property of the `web.ServiceWorkerRegistration`\n  returns a service worker whose `web.ServiceWorker.state` is installing.\n  property is initially set to null.\n\n  `sw = ServiceWorker.installing`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/installing`"}, :name web.ServiceWorkerRegistration/set-installing!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The installing property of the `web.ServiceWorkerRegistration`\n  returns a service worker whose `web.ServiceWorker.state` is installing.\n  property is initially set to null.\n\n  `sw = ServiceWorker.installing`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/installing`"}, set-sync! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 270, :column 7, :end-line 270, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The sync property of the `web.ServiceWorkerRegistration` interface\n  a reference to the `web.SyncManager` interface, which manages\n  synchronization processes.\n\n  `mySyncManager = ServiceWorker.sync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/sync`"}, :name web.ServiceWorkerRegistration/set-sync!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 270, :end-line 270, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The sync property of the `web.ServiceWorkerRegistration` interface\n  a reference to the `web.SyncManager` interface, which manages\n  synchronization processes.\n\n  `mySyncManager = ServiceWorker.sync`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/sync`"}, set-scope! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 243, :column 7, :end-line 243, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The scope read-only property of the `web.ServiceWorkerRegistration`\n  returns a unique identifier for a service worker registration.\n  service worker must be on the same origin as the document that\n  the ServiceWorker.\n\n  `swScope = ServiceWorkerRegistration.scope;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/scope`"}, :name web.ServiceWorkerRegistration/set-scope!, :variadic false, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The scope read-only property of the `web.ServiceWorkerRegistration`\n  returns a unique identifier for a service worker registration.\n  service worker must be on the same origin as the document that\n  the ServiceWorker.\n\n  `swScope = ServiceWorkerRegistration.scope;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/scope`"}, show-notification {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ServiceWorkerRegistration.cljs", :line 24, :column 7, :end-line 24, :end-column 24, :arglists (quote ([this & args])), :doc "Method.\n\n  The showNotification() method of the `web.ServiceWorkerRegistration`\n  creates a notification on an active service worker.\n\n  `​ServiceWorkerRegistration.showNotification(title, [options]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ServiceWorkerRegistration/show-notification, :variadic true, :file "src/web/ServiceWorkerRegistration.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The showNotification() method of the `web.ServiceWorkerRegistration`\n  creates a notification on an active service worker.\n\n  `​ServiceWorkerRegistration.showNotification(title, [options]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/showNotification`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ServiceWorkerRegistration interface of the ServiceWorker\n  represents the service worker registration. You register a service\n  to control one or more pages that share the same origin."}
{:rename-macros {}, :renames {}, :externs {KeyboardEvent {}}, :use-macros {}, :excludes #{key repeat}, :name web.KeyboardEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {location {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 181, :column 7, :end-line 181, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.location read-only property returns an unsigned\n  representing the location of the key on the keyboard or other\n  device.\n\n  `var location = event.location;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/location`"}, :name web.KeyboardEvent/location, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.location read-only property returns an unsigned\n  representing the location of the key on the keyboard or other\n  device.\n\n  `var location = event.location;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/location`"}, char-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 75, :column 7, :end-line 75, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The charCode read-only property of the `web.KeyboardEvent` interface\n  the Unicode value of a character key pressed during a keypress\n\n  `var code = event.charCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/charCode`"}, :name web.KeyboardEvent/char-code, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The charCode read-only property of the `web.KeyboardEvent` interface\n  the Unicode value of a character key pressed during a keypress\n\n  `var code = event.charCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/charCode`"}, init-keyboard-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 28, :column 7, :end-line 28, :end-column 26, :arglists (quote ([this & args])), :doc "Method.\n\n  The KeyboardEvent.initKeyboardEvent() method initializes the\n  of a keyboard event object. This method was introduced in draft\n  DOM Level 3 Events, but deprecated in newer draft. Gecko won't\n  this feature since implementing this method as experimental broke\n  web apps (see bug 999645). Web applications should use constructor\n  of this if it's available.\n\n  `kbdEvent.initKeyboardEvent(typeArg, canBubbleArg, cancelableArg,\n  viewArg, charArg, keyArg,\n  locationArg, modifiersListArg, repeat)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.KeyboardEvent/init-keyboard-event, :variadic true, :file "src/web/KeyboardEvent.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The KeyboardEvent.initKeyboardEvent() method initializes the\n  of a keyboard event object. This method was introduced in draft\n  DOM Level 3 Events, but deprecated in newer draft. Gecko won't\n  this feature since implementing this method as experimental broke\n  web apps (see bug 999645). Web applications should use constructor\n  of this if it's available.\n\n  `kbdEvent.initKeyboardEvent(typeArg, canBubbleArg, cancelableArg,\n  viewArg, charArg, keyArg,\n  locationArg, modifiersListArg, repeat)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyboardEvent`"}, alt-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 62, :column 7, :end-line 62, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.altKey read-only property is a `web.Boolean`\n  indicates if the alt key (Option or ⌥ on OS X) was pressed (true)\n  not (false) when the event occured.\n\n  `var altKeyPressed = instanceOfKeyboardEvent.altKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/altKey`"}, :name web.KeyboardEvent/alt-key, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.altKey read-only property is a `web.Boolean`\n  indicates if the alt key (Option or ⌥ on OS X) was pressed (true)\n  not (false) when the event occured.\n\n  `var altKeyPressed = instanceOfKeyboardEvent.altKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/altKey`"}, key-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 148, :column 7, :end-line 148, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The deprecated KeyboardEvent.keyCode read-only property represents\n  system and implementation dependent numerical code identifying\n  unmodified value of the pressed key.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode`"}, :name web.KeyboardEvent/key-code, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deprecated KeyboardEvent.keyCode read-only property represents\n  system and implementation dependent numerical code identifying\n  unmodified value of the pressed key.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode`"}, meta-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 194, :column 7, :end-line 194, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.metaKey read-only property returning a `web.Boolean`\n  indicates if the Meta key was pressed (true) or not (false) when\n  event occurred. Some operating systems may intercept the key\n  it is never detected.\n\n  `var metaKeyPressed = instanceOfKeyboardEvent.metaKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/metaKey`"}, :name web.KeyboardEvent/meta-key, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.metaKey read-only property returning a `web.Boolean`\n  indicates if the Meta key was pressed (true) or not (false) when\n  event occurred. Some operating systems may intercept the key\n  it is never detected.\n\n  `var metaKeyPressed = instanceOfKeyboardEvent.metaKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/metaKey`"}, is-composing {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 124, :column 7, :end-line 124, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.isComposing read-only property returns a `web.Boolean`\n  indicating if the event is fired after compositionstart and before\n\n  `var bool = event.isComposing;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing`"}, :name web.KeyboardEvent/is-composing, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.isComposing read-only property returns a `web.Boolean`\n  indicating if the event is fired after compositionstart and before\n\n  `var bool = event.isComposing;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/isComposing`"}, get-modifier-state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 15, :column 7, :end-line 15, :end-column 25, :arglists (quote ([this key-arg])), :doc "Method.\n\n  The KeyboardEvent.getModifierState() method returns the current\n  of the specified modifier key: true if the modifier is active\n  is the modifier key is pressed or locked), otherwise, false.\n\n  `var active = event.getModifierState(keyArg);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState`"}, :name web.KeyboardEvent/get-modifier-state, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 25, :method-params ([this key-arg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this key-arg])), :doc "Method.\n\n  The KeyboardEvent.getModifierState() method returns the current\n  of the specified modifier key: true if the modifier is active\n  is the modifier key is pressed or locked), otherwise, false.\n\n  `var active = event.getModifierState(keyArg);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/getModifierState`"}, key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 136, :column 7, :end-line 136, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The `web.KeyboardEvent` interface's key read-only property returns\n  value of the key pressed by the user, taking into consideration\n  state of modifier keys such as Shift as well as the keyboard\n  and layout.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key`"}, :name web.KeyboardEvent/key, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.KeyboardEvent` interface's key read-only property returns\n  value of the key pressed by the user, taking into consideration\n  state of modifier keys such as Shift as well as the keyboard\n  and layout.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key`"}, ctrl-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 111, :column 7, :end-line 111, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.ctrlKey read-only property returns a `web.Boolean`\n  indicates if the control key was pressed (true) or not (false)\n  the event occured.\n\n  `var ctrlKeyPressed = instanceOfKeyboardEvent.ctrlKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/ctrlKey`"}, :name web.KeyboardEvent/ctrl-key, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 111, :end-line 111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.ctrlKey read-only property returns a `web.Boolean`\n  indicates if the control key was pressed (true) or not (false)\n  the event occured.\n\n  `var ctrlKeyPressed = instanceOfKeyboardEvent.ctrlKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/ctrlKey`"}, set-key-identifier! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 170, :column 7, :end-line 170, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The deprecated KeyboardEvent.keyIdentifier read-only property\n  a \\\"key identifier\\\" string that can be used to determine what\n  was pressed. Its non-deprecated replacement is `web.KeyboardEvent.key`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyIdentifier`"}, :name web.KeyboardEvent/set-key-identifier!, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The deprecated KeyboardEvent.keyIdentifier read-only property\n  a \\\"key identifier\\\" string that can be used to determine what\n  was pressed. Its non-deprecated replacement is `web.KeyboardEvent.key`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyIdentifier`"}, set-char-code! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 87, :column 7, :end-line 87, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The charCode read-only property of the `web.KeyboardEvent` interface\n  the Unicode value of a character key pressed during a keypress\n\n  `var code = event.charCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/charCode`"}, :name web.KeyboardEvent/set-char-code!, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The charCode read-only property of the `web.KeyboardEvent` interface\n  the Unicode value of a character key pressed during a keypress\n\n  `var code = event.charCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/charCode`"}, init-key-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 46, :column 7, :end-line 46, :end-column 21, :arglists (quote ([this & args])), :doc "Method.\n\n  The KeyboardEvent.initKeyEvent() method is used to initialize\n  value of an event created using `web.document.createEvent`(\\\"KeyboardEvent\\\").\n  initialized in this way must have been created with the `web.document.createEvent`(\\\"KeyboardEvent\\\")\n  initKeyEvent() must be called to set the event before it is dispatched.\n\n  `event.initKeyEvent (type, bubbles, cancelable, viewArg,\n  ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg,\n  keyCodeArg, charCodeArg)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyEvent`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.KeyboardEvent/init-key-event, :variadic true, :file "src/web/KeyboardEvent.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The KeyboardEvent.initKeyEvent() method is used to initialize\n  value of an event created using `web.document.createEvent`(\\\"KeyboardEvent\\\").\n  initialized in this way must have been created with the `web.document.createEvent`(\\\"KeyboardEvent\\\")\n  initKeyEvent() must be called to set the event before it is dispatched.\n\n  `event.initKeyEvent (type, bubbles, cancelable, viewArg,\n  ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg,\n  keyCodeArg, charCodeArg)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/initKeyEvent`"}, which {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 234, :column 7, :end-line 234, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The which read-only property of the `web.KeyboardEvent` interface\n  the numeric keyCode of the key pressed, or the character code\n  for an alphanumeric key pressed.\n\n  `var keyResult = event.which;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/which`"}, :name web.KeyboardEvent/which, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The which read-only property of the `web.KeyboardEvent` interface\n  the numeric keyCode of the key pressed, or the character code\n  for an alphanumeric key pressed.\n\n  `var keyResult = event.which;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/which`"}, shift-key {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 221, :column 7, :end-line 221, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.shiftKey read-only property is a `web.Boolean`\n  indicates if the shift key was pressed (true) or not (false)\n  the event occurred.\n\n  `var shiftKeyPressed = instanceOfKeyboardEvent.shiftKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/shiftKey`"}, :name web.KeyboardEvent/shift-key, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 221, :end-line 221, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.shiftKey read-only property is a `web.Boolean`\n  indicates if the shift key was pressed (true) or not (false)\n  the event occurred.\n\n  `var shiftKeyPressed = instanceOfKeyboardEvent.shiftKey`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/shiftKey`"}, constructor {:name web.KeyboardEvent/constructor, :file "src/web/KeyboardEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The KeyboardEvent() constructor creates a new `web.KeyboardEvent`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent`", :tag js}, code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 99, :column 7, :end-line 99, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.code property represents a physical key on\n  keyboard (as opposed to the character generated by pressing the\n  In other words, this property returns a value which isn't altered\n  keyboard layout or the state of the modifier keys.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code`"}, :name web.KeyboardEvent/code, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The KeyboardEvent.code property represents a physical key on\n  keyboard (as opposed to the character generated by pressing the\n  In other words, this property returns a value which isn't altered\n  keyboard layout or the state of the modifier keys.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code`"}, repeat {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 208, :column 7, :end-line 208, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The repeat read-only property of the `web.KeyboardEvent` interface\n  a `web.Boolean` that is true if the given key is being held down\n  that it is automatically repeating.\n\n  `var repeat = event.repeat;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat`"}, :name web.KeyboardEvent/repeat, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The repeat read-only property of the `web.KeyboardEvent` interface\n  a `web.Boolean` that is true if the given key is being held down\n  that it is automatically repeating.\n\n  `var repeat = event.repeat;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/repeat`"}, key-identifier {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/KeyboardEvent.cljs", :line 159, :column 7, :end-line 159, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The deprecated KeyboardEvent.keyIdentifier read-only property\n  a \\\"key identifier\\\" string that can be used to determine what\n  was pressed. Its non-deprecated replacement is `web.KeyboardEvent.key`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyIdentifier`"}, :name web.KeyboardEvent/key-identifier, :variadic false, :file "src/web/KeyboardEvent.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The deprecated KeyboardEvent.keyIdentifier read-only property\n  a \\\"key identifier\\\" string that can be used to determine what\n  was pressed. Its non-deprecated replacement is `web.KeyboardEvent.key`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyIdentifier`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "KeyboardEvent objects describe a user interaction with the keyboard;\n  event describes a single interaction between the user and a key\n  combination of a key with modifier keys) on the keyboard."}
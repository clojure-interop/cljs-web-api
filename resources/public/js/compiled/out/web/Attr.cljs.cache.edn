{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Attr, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {local-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Attr.cljs", :line 9, :column 7, :end-line 9, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The Attr.localName read-only property returns the local part\n  the qualified name of an element.\n\n  `name = attribute.localName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/localName`"}, :name web.Attr/local-name, :variadic false, :file "src/web/Attr.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Attr.localName read-only property returns the local part\n  the qualified name of an element.\n\n  `name = attribute.localName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/localName`"}, set-local-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Attr.cljs", :line 21, :column 7, :end-line 21, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The Attr.localName read-only property returns the local part\n  the qualified name of an element.\n\n  `name = attribute.localName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/localName`"}, :name web.Attr/set-local-name!, :variadic false, :file "src/web/Attr.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Attr.localName read-only property returns the local part\n  the qualified name of an element.\n\n  `name = attribute.localName`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/localName`"}, namespace-uri {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Attr.cljs", :line 33, :column 7, :end-line 33, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The Attr.namespaceURI read-only property returns the namespace\n  of the attribute, or null if the element is not in a namespace.\n\n  `namespace = attribute.namespaceURI`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/namespaceURI`"}, :name web.Attr/namespace-uri, :variadic false, :file "src/web/Attr.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Attr.namespaceURI read-only property returns the namespace\n  of the attribute, or null if the element is not in a namespace.\n\n  `namespace = attribute.namespaceURI`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/namespaceURI`"}, set-namespace-uri! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Attr.cljs", :line 45, :column 7, :end-line 45, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The Attr.namespaceURI read-only property returns the namespace\n  of the attribute, or null if the element is not in a namespace.\n\n  `namespace = attribute.namespaceURI`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/namespaceURI`"}, :name web.Attr/set-namespace-uri!, :variadic false, :file "src/web/Attr.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Attr.namespaceURI read-only property returns the namespace\n  of the attribute, or null if the element is not in a namespace.\n\n  `namespace = attribute.namespaceURI`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/namespaceURI`"}, prefix {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Attr.cljs", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The Attr.prefix read-only property returns the namespace prefix\n  the specified attribute, or null if no prefix is specified.\n\n  `string = attribute.prefix`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/prefix`"}, :name web.Attr/prefix, :variadic false, :file "src/web/Attr.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The Attr.prefix read-only property returns the namespace prefix\n  the specified attribute, or null if no prefix is specified.\n\n  `string = attribute.prefix`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/prefix`"}, set-prefix! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Attr.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The Attr.prefix read-only property returns the namespace prefix\n  the specified attribute, or null if no prefix is specified.\n\n  `string = attribute.prefix`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/prefix`"}, :name web.Attr/set-prefix!, :variadic false, :file "src/web/Attr.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The Attr.prefix read-only property returns the namespace prefix\n  the specified attribute, or null if no prefix is specified.\n\n  `string = attribute.prefix`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Attr/prefix`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "This type represents a DOM element's attribute as an object.\n  most DOM methods, you will probably directly retrieve the attribute\n  a string (e.g., `web.Element.getAttribute()`, but certain functions\n  `web.Element.getAttributeNode()`) or means of iterating give\n  types."}
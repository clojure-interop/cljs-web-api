{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.Keyboard, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-layout-map {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Keyboard.cljs", :line 7, :column 7, :end-line 7, :end-column 21, :arglists (quote ([this])), :doc "Method.\n\n  The getLayoutMap() method of the `web.Keyboard` interface returns\n  `web.Promise` that resolves with an instance of `web.KeyboardLayoutMap`\n  is a map-like object with functions for retrieving the strings\n  with specific physical keys.\n\n  `var promise = Keyboard.getLayoutMap()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/getLayoutMap`"}, :name web.Keyboard/get-layout-map, :variadic false, :file "src/web/Keyboard.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getLayoutMap() method of the `web.Keyboard` interface returns\n  `web.Promise` that resolves with an instance of `web.KeyboardLayoutMap`\n  is a map-like object with functions for retrieving the strings\n  with specific physical keys.\n\n  `var promise = Keyboard.getLayoutMap()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/getLayoutMap`"}, lock {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Keyboard.cljs", :line 21, :column 7, :end-line 21, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  The lock() method of the `web.Keyboard` interface returns a `web.Promise`\n  enabling the capture of keypresses for any or all of the keys\n  the physical keyboard. This method can only capture keys that\n  granted access by the underlying operating system.\n\n  `var promise = Keyboard.lock([keyCodes[]])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/lock`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.Keyboard/lock, :variadic true, :file "src/web/Keyboard.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The lock() method of the `web.Keyboard` interface returns a `web.Promise`\n  enabling the capture of keypresses for any or all of the keys\n  the physical keyboard. This method can only capture keys that\n  granted access by the underlying operating system.\n\n  `var promise = Keyboard.lock([keyCodes[]])`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/lock`"}, unlock {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/Keyboard.cljs", :line 35, :column 7, :end-line 35, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The unlock() method of the `web.Keyboard` interface unlocks all\n  captured by the `web.Keyboard.lock()` method and returns synchronously.\n\n  `Keyboard.unlock()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/unlock`"}, :name web.Keyboard/unlock, :variadic false, :file "src/web/Keyboard.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The unlock() method of the `web.Keyboard` interface unlocks all\n  captured by the `web.Keyboard.lock()` method and returns synchronously.\n\n  `Keyboard.unlock()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/Keyboard/unlock`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The Keyboard interface of the the Keyboard API provides functions\n  retrieve keyboard layout maps and toggle capturing of key presses\n  the physical keyboard."}
{:rename-macros {}, :renames {}, :externs {TrackDefault {}}, :use-macros {}, :excludes #{type}, :name web.TrackDefault, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {byte-stream-track-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 26, :column 7, :end-line 26, :end-column 27, :arglists (quote ([this])), :doc "Property.\n\n  The byteStreamTrackID read-only property of the `web.TrackDefault`\n  returns the ID of the specific track that the `web.SourceBuffer`\n  apply to.\n\n  `var myID = TrackDefault.byteStreamTrackID;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/byteStreamTrackID`"}, :name web.TrackDefault/byte-stream-track-id, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 27, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The byteStreamTrackID read-only property of the `web.TrackDefault`\n  returns the ID of the specific track that the `web.SourceBuffer`\n  apply to.\n\n  `var myID = TrackDefault.byteStreamTrackID;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/byteStreamTrackID`"}, set-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 149, :column 7, :end-line 149, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The type read-only property of the `web.TrackDefault` interface\n  the type of track that this `web.SourceBuffer`'s media segment\n  relates to (i.e. audio, video, or text track.)\n\n  `var myType = TrackDefault.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/type`"}, :name web.TrackDefault/set-type!, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The type read-only property of the `web.TrackDefault` interface\n  the type of track that this `web.SourceBuffer`'s media segment\n  relates to (i.e. audio, video, or text track.)\n\n  `var myType = TrackDefault.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/type`"}, kinds {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 52, :column 7, :end-line 52, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The kinds read-only property of the `web.TrackDefault` interface\n  default kinds for an associated `web.SourceBuffer` to use when\n  initialization segment does not contain label information for\n  new track.\n\n  `var mykinds = TrackDefault.kinds;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/kinds`"}, :name web.TrackDefault/kinds, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The kinds read-only property of the `web.TrackDefault` interface\n  default kinds for an associated `web.SourceBuffer` to use when\n  initialization segment does not contain label information for\n  new track.\n\n  `var mykinds = TrackDefault.kinds;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/kinds`"}, set-byte-stream-track-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 39, :column 7, :end-line 39, :end-column 32, :arglists (quote ([this val])), :doc "Property.\n\n  The byteStreamTrackID read-only property of the `web.TrackDefault`\n  returns the ID of the specific track that the `web.SourceBuffer`\n  apply to.\n\n  `var myID = TrackDefault.byteStreamTrackID;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/byteStreamTrackID`"}, :name web.TrackDefault/set-byte-stream-track-id!, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 32, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The byteStreamTrackID read-only property of the `web.TrackDefault`\n  returns the ID of the specific track that the `web.SourceBuffer`\n  apply to.\n\n  `var myID = TrackDefault.byteStreamTrackID;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/byteStreamTrackID`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 136, :column 7, :end-line 136, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The type read-only property of the `web.TrackDefault` interface\n  the type of track that this `web.SourceBuffer`'s media segment\n  relates to (i.e. audio, video, or text track.)\n\n  `var myType = TrackDefault.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/type`"}, :name web.TrackDefault/type, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The type read-only property of the `web.TrackDefault` interface\n  the type of track that this `web.SourceBuffer`'s media segment\n  relates to (i.e. audio, video, or text track.)\n\n  `var myType = TrackDefault.type;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/type`"}, label {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 80, :column 7, :end-line 80, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The label read-only property of the `web.TrackDefault` interface\n  the default label for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain label information\n  a new track.\n\n  `var mylabel = TrackDefault.label;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/label`"}, :name web.TrackDefault/label, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The label read-only property of the `web.TrackDefault` interface\n  the default label for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain label information\n  a new track.\n\n  `var mylabel = TrackDefault.label;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/label`"}, language {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 108, :column 7, :end-line 108, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The language read-only property of the `web.TrackDefault` interface\n  a default language for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain language information\n  a new track.\n\n  `var mylanguage = TrackDefault.language;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/language`"}, :name web.TrackDefault/language, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The language read-only property of the `web.TrackDefault` interface\n  a default language for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain language information\n  a new track.\n\n  `var mylanguage = TrackDefault.language;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/language`"}, set-label! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 94, :column 7, :end-line 94, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The label read-only property of the `web.TrackDefault` interface\n  the default label for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain label information\n  a new track.\n\n  `var mylabel = TrackDefault.label;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/label`"}, :name web.TrackDefault/set-label!, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The label read-only property of the `web.TrackDefault` interface\n  the default label for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain label information\n  a new track.\n\n  `var mylabel = TrackDefault.label;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/label`"}, constructor {:name web.TrackDefault/constructor, :file "src/web/TrackDefault.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The TrackDefault() constructor of the `web.TrackDefault` interface constructs and returns a new TrackDefault object.\n\n  type\n  A `dom.DOMString` specifying a media segment data type for the `web.SourceBuffer` to contain. Can be audio, video, or text.\n  language\n  A `dom.DOMString` specifying a default language for the `web.SourceBuffer` to use when an initialization segment does not contain language information for a new track.\n  label\n  A `dom.DOMString` specifying a default label for the `web.SourceBuffer` to use when an initialization segment does not contain label information for a new track.\n  kinds\n  An array (sequence) of `dom.DOMString`s specifying default kinds for the `web.SourceBuffer` to use when an initialization segment does not contain kind information for a new track.\n  byteStreamTrackID Optional\n  A `dom.DOMString` specifying the ID of the specific track that the `web.SourceBuffer` should apply to. If not specified, this value will be an empty string and the SourceBuffer can contain any tracks of the specified type.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/TrackDefault`", :tag js}, set-kinds! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 66, :column 7, :end-line 66, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The kinds read-only property of the `web.TrackDefault` interface\n  default kinds for an associated `web.SourceBuffer` to use when\n  initialization segment does not contain label information for\n  new track.\n\n  `var mykinds = TrackDefault.kinds;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/kinds`"}, :name web.TrackDefault/set-kinds!, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The kinds read-only property of the `web.TrackDefault` interface\n  default kinds for an associated `web.SourceBuffer` to use when\n  initialization segment does not contain label information for\n  new track.\n\n  `var mykinds = TrackDefault.kinds;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/kinds`"}, set-language! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TrackDefault.cljs", :line 122, :column 7, :end-line 122, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The language read-only property of the `web.TrackDefault` interface\n  a default language for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain language information\n  a new track.\n\n  `var mylanguage = TrackDefault.language;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/language`"}, :name web.TrackDefault/set-language!, :variadic false, :file "src/web/TrackDefault.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The language read-only property of the `web.TrackDefault` interface\n  a default language for an associated `web.SourceBuffer` to use\n  an initialization segment does not contain language information\n  a new track.\n\n  `var mylanguage = TrackDefault.language;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TrackDefault/language`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The TrackDefault interface provides a `web.SourceBuffer` with\n  label, and language information for tracks that do not contain\n  information in the initialization segments of a media chunk."}
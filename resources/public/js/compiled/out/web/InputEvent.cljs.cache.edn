{:rename-macros {}, :renames {}, :externs {InputEvent {}}, :use-macros {}, :excludes #{}, :name web.InputEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.InputEvent/constructor, :file "src/web/InputEvent.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The InputEvent() constructor creates a new `web.InputEvent`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/InputEvent`", :tag js}, get-target-ranges {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 14, :column 7, :end-line 14, :end-column 24, :arglists (quote ([this])), :doc "Method.\n\n  The getTargetRanges() property of the `web.InputEvent` interface\n  an array of static ranges that will be affected by a change to\n  DOM if the input event is not canceled.\n\n  `var staticRanges[] = inputEvent.getTargetRanges()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/getTargetRanges`"}, :name web.InputEvent/get-target-ranges, :variadic false, :file "src/web/InputEvent.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getTargetRanges() property of the `web.InputEvent` interface\n  an array of static ranges that will be affected by a change to\n  DOM if the input event is not canceled.\n\n  `var staticRanges[] = inputEvent.getTargetRanges()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/getTargetRanges`"}, data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 27, :column 7, :end-line 27, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The data read-only property of the `web.InputEvent` interface\n  a `dom.DOMString` with the inserted characters. This may be an\n  string if the change doesn't insert text (such as when deleting\n  for example).\n\n  `var aString = inputEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/data`"}, :name web.InputEvent/data, :variadic false, :file "src/web/InputEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The data read-only property of the `web.InputEvent` interface\n  a `dom.DOMString` with the inserted characters. This may be an\n  string if the change doesn't insert text (such as when deleting\n  for example).\n\n  `var aString = inputEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/data`"}, set-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 41, :column 7, :end-line 41, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The data read-only property of the `web.InputEvent` interface\n  a `dom.DOMString` with the inserted characters. This may be an\n  string if the change doesn't insert text (such as when deleting\n  for example).\n\n  `var aString = inputEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/data`"}, :name web.InputEvent/set-data!, :variadic false, :file "src/web/InputEvent.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The data read-only property of the `web.InputEvent` interface\n  a `dom.DOMString` with the inserted characters. This may be an\n  string if the change doesn't insert text (such as when deleting\n  for example).\n\n  `var aString = inputEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/data`"}, data-transfer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 55, :column 7, :end-line 55, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The dataTransfer read-only property of the `web.InputEvent` interface\n  a `web.DataTransfer` object containing information about richtext\n  plaintext data being added to or removed from editible content.\n\n  `var dataTransfer = inputEvent.dataTransfer`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/dataTransfer`"}, :name web.InputEvent/data-transfer, :variadic false, :file "src/web/InputEvent.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The dataTransfer read-only property of the `web.InputEvent` interface\n  a `web.DataTransfer` object containing information about richtext\n  plaintext data being added to or removed from editible content.\n\n  `var dataTransfer = inputEvent.dataTransfer`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/dataTransfer`"}, set-data-transfer! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 68, :column 7, :end-line 68, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The dataTransfer read-only property of the `web.InputEvent` interface\n  a `web.DataTransfer` object containing information about richtext\n  plaintext data being added to or removed from editible content.\n\n  `var dataTransfer = inputEvent.dataTransfer`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/dataTransfer`"}, :name web.InputEvent/set-data-transfer!, :variadic false, :file "src/web/InputEvent.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The dataTransfer read-only property of the `web.InputEvent` interface\n  a `web.DataTransfer` object containing information about richtext\n  plaintext data being added to or removed from editible content.\n\n  `var dataTransfer = inputEvent.dataTransfer`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/dataTransfer`"}, input-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 81, :column 7, :end-line 81, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The inputType read-only property of the `web.InputEvent` interface\n  the type of change made to editible content. Possible changes\n  for example inserting, deleting, and formatting text.\n\n  `var aString = inputEvent.inputType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType`"}, :name web.InputEvent/input-type, :variadic false, :file "src/web/InputEvent.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The inputType read-only property of the `web.InputEvent` interface\n  the type of change made to editible content. Possible changes\n  for example inserting, deleting, and formatting text.\n\n  `var aString = inputEvent.inputType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType`"}, set-input-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 94, :column 7, :end-line 94, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The inputType read-only property of the `web.InputEvent` interface\n  the type of change made to editible content. Possible changes\n  for example inserting, deleting, and formatting text.\n\n  `var aString = inputEvent.inputType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType`"}, :name web.InputEvent/set-input-type!, :variadic false, :file "src/web/InputEvent.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The inputType read-only property of the `web.InputEvent` interface\n  the type of change made to editible content. Possible changes\n  for example inserting, deleting, and formatting text.\n\n  `var aString = inputEvent.inputType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/inputType`"}, is-composing {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/InputEvent.cljs", :line 107, :column 7, :end-line 107, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The InputEvent.isComposing read-only property returns a `web.Boolean`\n  indicating if the event is fired after compositionstart and before\n\n  `var bool = event.isComposing;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/isComposing`"}, :name web.InputEvent/is-composing, :variadic false, :file "src/web/InputEvent.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The InputEvent.isComposing read-only property returns a `web.Boolean`\n  indicating if the event is fired after compositionstart and before\n\n  `var bool = event.isComposing;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/InputEvent/isComposing`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The InputEvent interface represents an event notifying of editable\n  change."}
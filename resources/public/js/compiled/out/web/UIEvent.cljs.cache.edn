{:rename-macros {}, :renames {}, :externs {UIEvent {}}, :use-macros {}, :excludes #{}, :name web.UIEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {is-char {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 67, :column 7, :end-line 67, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.isChar read-only property returns a `web.Boolean`\n  whether the event produced a key character or not.\n\n  `var isChar = UIEvent.isChar;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/isChar`"}, :name web.UIEvent/is-char, :variadic false, :file "src/web/UIEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.isChar read-only property returns a `web.Boolean`\n  whether the event produced a key character or not.\n\n  `var isChar = UIEvent.isChar;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/isChar`"}, layer-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 79, :column 7, :end-line 79, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.layerX read-only property returns the horizontal\n  of the event relative to the current layer.\n\n  `var xpos = event.layerX\n\n\n  xpos is an integer value in pixels for the x-coordinate of the mouse pointer, when the mouse event fired.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/layerX`"}, :name web.UIEvent/layer-x, :variadic false, :file "src/web/UIEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.layerX read-only property returns the horizontal\n  of the event relative to the current layer.\n\n  `var xpos = event.layerX\n\n\n  xpos is an integer value in pixels for the x-coordinate of the mouse pointer, when the mouse event fired.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/layerX`"}, view {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 163, :column 7, :end-line 163, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.view read-only property returns the `web.WindowProxy`\n  from which the event was generated. In browsers, this is the\n  object the event happened in.\n\n  `var view = event.view;\n\n\n  view is a reference to an AbstractView object.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/view`"}, :name web.UIEvent/view, :variadic false, :file "src/web/UIEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.view read-only property returns the `web.WindowProxy`\n  from which the event was generated. In browsers, this is the\n  object the event happened in.\n\n  `var view = event.view;\n\n\n  view is a reference to an AbstractView object.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/view`"}, init-ui-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 13, :column 7, :end-line 13, :end-column 20, :arglists (quote ([this type can-bubble cancelable view detail])), :doc "Method.\n\n  The UIEvent.initUIEvent() method initializes a UI event once\n  been created.\n\n  `event.initUIEvent(type, canBubble, cancelable, view, detail)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/initUIEvent`"}, :name web.UIEvent/init-ui-event, :variadic false, :file "src/web/UIEvent.cljs", :end-column 20, :method-params ([this type can-bubble cancelable view detail]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 6, :fn-var true, :arglists (quote ([this type can-bubble cancelable view detail])), :doc "Method.\n\n  The UIEvent.initUIEvent() method initializes a UI event once\n  been created.\n\n  `event.initUIEvent(type, canBubble, cancelable, view, detail)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/initUIEvent`"}, detail {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.detail read-only property, when non-zero, provides\n  current (or next, depending on the event) click count.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail`"}, :name web.UIEvent/detail, :variadic false, :file "src/web/UIEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.detail read-only property, when non-zero, provides\n  current (or next, depending on the event) click count.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/detail`"}, source-capabilities {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 135, :column 7, :end-line 135, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.sourceCapabilities read-only property returns an\n  of the `web.InputDeviceCapabilities` interface which provides\n  about the physical device responsible for generating a touch\n  If no input device was responsible for the event, it returns\n\n  `var iDC = event.sourceCapabilities`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/sourceCapabilities`"}, :name web.UIEvent/source-capabilities, :variadic false, :file "src/web/UIEvent.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.sourceCapabilities read-only property returns an\n  of the `web.InputDeviceCapabilities` interface which provides\n  about the physical device responsible for generating a touch\n  If no input device was responsible for the event, it returns\n\n  `var iDC = event.sourceCapabilities`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/sourceCapabilities`"}, set-cancel-bubble! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 41, :column 7, :end-line 41, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The UIEvent.cancelBubble property indicates if event bubbling\n  this event has been canceled or not. It is set to false by default,\n  the event to bubble up the DOM, if it is a bubbleable event.\n  this property to true stops the event from bubbling up the DOM.\n  all events are allowed to bubble up the DOM.\n\n  `event.cancelBubble = bool;\n  var bool = event.cancelBubble;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/cancelBubble`"}, :name web.UIEvent/set-cancel-bubble!, :variadic false, :file "src/web/UIEvent.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The UIEvent.cancelBubble property indicates if event bubbling\n  this event has been canceled or not. It is set to false by default,\n  the event to bubble up the DOM, if it is a bubbleable event.\n  this property to true stops the event from bubbling up the DOM.\n  all events are allowed to bubble up the DOM.\n\n  `event.cancelBubble = bool;\n  var bool = event.cancelBubble;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/cancelBubble`"}, page-x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 109, :column 7, :end-line 109, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The non-standard, read-only `web.UIEvent` property pageX returns\n  horizontal coordinate of the event relative to the whole document.\n\n  `var pos = event.pageX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageX`"}, :name web.UIEvent/page-x, :variadic false, :file "src/web/UIEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The non-standard, read-only `web.UIEvent` property pageX returns\n  horizontal coordinate of the event relative to the whole document.\n\n  `var pos = event.pageX`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageX`"}, cancel-bubble {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 25, :column 7, :end-line 25, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.cancelBubble property indicates if event bubbling\n  this event has been canceled or not. It is set to false by default,\n  the event to bubble up the DOM, if it is a bubbleable event.\n  this property to true stops the event from bubbling up the DOM.\n  all events are allowed to bubble up the DOM.\n\n  `event.cancelBubble = bool;\n  var bool = event.cancelBubble;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/cancelBubble`"}, :name web.UIEvent/cancel-bubble, :variadic false, :file "src/web/UIEvent.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.cancelBubble property indicates if event bubbling\n  this event has been canceled or not. It is set to false by default,\n  the event to bubble up the DOM, if it is a bubbleable event.\n  this property to true stops the event from bubbling up the DOM.\n  all events are allowed to bubble up the DOM.\n\n  `event.cancelBubble = bool;\n  var bool = event.cancelBubble;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/cancelBubble`"}, page-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 121, :column 7, :end-line 121, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.pageY read-only property returns the vertical coordinate\n  the event relative to the whole document.\n\n  `var pageY = event.pageY;\n\n  pageY is an integer value in pixels for the y-coordinate of the mouse pointer, relative to the whole document, when the mouse event fired. This property takes into account any vertical scrolling of the page.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageY`"}, :name web.UIEvent/page-y, :variadic false, :file "src/web/UIEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.pageY read-only property returns the vertical coordinate\n  the event relative to the whole document.\n\n  `var pageY = event.pageY;\n\n  pageY is an integer value in pixels for the y-coordinate of the mouse pointer, relative to the whole document, when the mouse event fired. This property takes into account any vertical scrolling of the page.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/pageY`"}, set-source-capabilities! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 149, :column 7, :end-line 149, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The UIEvent.sourceCapabilities read-only property returns an\n  of the `web.InputDeviceCapabilities` interface which provides\n  about the physical device responsible for generating a touch\n  If no input device was responsible for the event, it returns\n\n  `var iDC = event.sourceCapabilities`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/sourceCapabilities`"}, :name web.UIEvent/set-source-capabilities!, :variadic false, :file "src/web/UIEvent.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The UIEvent.sourceCapabilities read-only property returns an\n  of the `web.InputDeviceCapabilities` interface which provides\n  about the physical device responsible for generating a touch\n  If no input device was responsible for the event, it returns\n\n  `var iDC = event.sourceCapabilities`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/sourceCapabilities`"}, layer-y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 94, :column 7, :end-line 94, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.layerY read-only property returns the vertical coordinate\n  the event relative to the current layer.\n\n  `var ypos = event.layerY;\n\n\n  ypos is an integer value in pixels for the y-coordinate of the mouse pointer, when the mouse event fired.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/layerY`"}, :name web.UIEvent/layer-y, :variadic false, :file "src/web/UIEvent.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The UIEvent.layerY read-only property returns the vertical coordinate\n  the event relative to the current layer.\n\n  `var ypos = event.layerY;\n\n\n  ypos is an integer value in pixels for the y-coordinate of the mouse pointer, when the mouse event fired.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/layerY`"}, constructor {:name web.UIEvent/constructor, :file "src/web/UIEvent.cljs", :line 5, :column 1, :end-line 5, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/UIEvent.cljs", :line 5, :column 6, :end-line 5, :end-column 17}, :doc "Constructor.\n\n  The UIEvent() constructor creates a new `web.UIEvent`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/UIEvent`", :tag js}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The UIEvent interface represents simple user interface events."}
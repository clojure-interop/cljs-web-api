{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{name}, :name web.SharedWorkerGlobalScope, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {console {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 159, :column 7, :end-line 159, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The console read-only property of the `web.WorkerGlobalScope`\n  returns a `web.Console` object providing access to the browser\n  for the worker.\n\n  `var consoleObj = self.console;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/console`"}, :name web.SharedWorkerGlobalScope/console, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The console read-only property of the `web.WorkerGlobalScope`\n  returns a `web.Console` object providing access to the browser\n  for the worker.\n\n  `var consoleObj = self.console;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/console`"}, dump {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  The dump() method of the `web.WorkerGlobalScope` interface allows\n  to write a message to stdout — i.e. in your terminal, in Firefox\n  This is the same as Firefox's `web.window.dump`, but for workers.\n\n  `dump('My message\\\\n');`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/dump`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.SharedWorkerGlobalScope/dump, :variadic true, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The dump() method of the `web.WorkerGlobalScope` interface allows\n  to write a message to stdout — i.e. in your terminal, in Firefox\n  This is the same as Firefox's `web.window.dump`, but for workers.\n\n  `dump('My message\\\\n');`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/dump`"}, location {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 172, :column 7, :end-line 172, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The location read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerLocation` associated with the worker.\n  is a specific location object, mostly a subset of the `web.Location`\n  browsing scopes, but adapted to workers.\n\n  `var locationObj = self.location;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/location`"}, :name web.SharedWorkerGlobalScope/location, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 172, :end-line 172, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The location read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerLocation` associated with the worker.\n  is a specific location object, mostly a subset of the `web.Location`\n  browsing scopes, but adapted to workers.\n\n  `var locationObj = self.location;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/location`"}, self {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 131, :column 7, :end-line 131, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The self read-only property of the `web.WorkerGlobalScope` interface\n  a reference to the WorkerGlobalScope itself. Most of the time\n  is a specific scope like `web.DedicatedWorkerGlobalScope`, `web.SharedWorkerGlobalScope`,\n  `web.ServiceWorkerGlobalScope`.\n\n  `var selfRef = self;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self`"}, :name web.SharedWorkerGlobalScope/self, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The self read-only property of the `web.WorkerGlobalScope` interface\n  a reference to the WorkerGlobalScope itself. Most of the time\n  is a specific scope like `web.DedicatedWorkerGlobalScope`, `web.SharedWorkerGlobalScope`,\n  `web.ServiceWorkerGlobalScope`.\n\n  `var selfRef = self;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self`"}, import-scripts {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 36, :column 7, :end-line 36, :end-column 21, :arglists (quote ([this & args])), :doc "Method.\n\n  The importScripts() method of the `web.WorkerGlobalScope` interface\n  imports one or more scripts into the worker's scope.\n\n  `self.importScripts('foo.js');\n  self.importScripts('foo.js', 'bar.js', ...);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/importScripts`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.SharedWorkerGlobalScope/import-scripts, :variadic true, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The importScripts() method of the `web.WorkerGlobalScope` interface\n  imports one or more scripts into the worker's scope.\n\n  `self.importScripts('foo.js');\n  self.importScripts('foo.js', 'bar.js', ...);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/importScripts`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 89, :column 7, :end-line 89, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.SharedWorkerGlobalScope`\n  returns the name that the `web.SharedWorker` was (optionally)\n  when it was created. This is the name that the `web.SharedWorker()`\n  can pass to get a reference to the `web.SharedWorkerGlobalScope`.\n\n  `var nameObj = self.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/name`"}, :name web.SharedWorkerGlobalScope/set-name!, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.SharedWorkerGlobalScope`\n  returns the name that the `web.SharedWorker` was (optionally)\n  when it was created. This is the name that the `web.SharedWorker()`\n  can pass to get a reference to the `web.SharedWorkerGlobalScope`.\n\n  `var nameObj = self.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/name`"}, performance {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 228, :column 7, :end-line 228, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The performance read-only property of the `web.WorkerGlobalScope`\n  returns a `performance.Performance` object to be used on the\n\n  `var perfObj = self.performance;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/performance`"}, :name web.SharedWorkerGlobalScope/performance, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The performance read-only property of the `web.WorkerGlobalScope`\n  returns a `performance.Performance` object to be used on the\n\n  `var perfObj = self.performance;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/performance`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 75, :column 7, :end-line 75, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.SharedWorkerGlobalScope`\n  returns the name that the `web.SharedWorker` was (optionally)\n  when it was created. This is the name that the `web.SharedWorker()`\n  can pass to get a reference to the `web.SharedWorkerGlobalScope`.\n\n  `var nameObj = self.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/name`"}, :name web.SharedWorkerGlobalScope/name, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.SharedWorkerGlobalScope`\n  returns the name that the `web.SharedWorker` was (optionally)\n  when it was created. This is the name that the `web.SharedWorker()`\n  can pass to get a reference to the `web.SharedWorkerGlobalScope`.\n\n  `var nameObj = self.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/name`"}, set-self! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 145, :column 7, :end-line 145, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The self read-only property of the `web.WorkerGlobalScope` interface\n  a reference to the WorkerGlobalScope itself. Most of the time\n  is a specific scope like `web.DedicatedWorkerGlobalScope`, `web.SharedWorkerGlobalScope`,\n  `web.ServiceWorkerGlobalScope`.\n\n  `var selfRef = self;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self`"}, :name web.SharedWorkerGlobalScope/set-self!, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The self read-only property of the `web.WorkerGlobalScope` interface\n  a reference to the WorkerGlobalScope itself. Most of the time\n  is a specific scope like `web.DedicatedWorkerGlobalScope`, `web.SharedWorkerGlobalScope`,\n  `web.ServiceWorkerGlobalScope`.\n\n  `var selfRef = self;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/self`"}, set-navigator! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 214, :column 7, :end-line 214, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The navigator read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerNavigator` associated with the worker.\n  is a specific navigator object, mostly a subset of the `web.Navigator`\n  browsing scopes, but adapted to workers.\n\n  `var navigatorObj = self.navigator;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator`"}, :name web.SharedWorkerGlobalScope/set-navigator!, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The navigator read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerNavigator` associated with the worker.\n  is a specific navigator object, mostly a subset of the `web.Navigator`\n  browsing scopes, but adapted to workers.\n\n  `var navigatorObj = self.navigator;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator`"}, close {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The close() method of the `web.SharedWorkerGlobalScope` interface\n  any tasks queued in the SharedWorkerGlobalScope's event loop,\n  closing this particular scope.\n\n  `self.close();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/close`"}, :name web.SharedWorkerGlobalScope/close, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The close() method of the `web.SharedWorkerGlobalScope` interface\n  any tasks queued in the SharedWorkerGlobalScope's event loop,\n  closing this particular scope.\n\n  `self.close();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/close`"}, application-cache {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 49, :column 7, :end-line 49, :end-column 24, :arglists (quote ([this])), :doc "Property.\n\n  The applicationCache read-only property of the `web.SharedWorkerGlobalScope`\n  returns the `web.ApplicationCache` object for the worker (see\n  the application cache).\n\n  `var nameObj = self.applicationCache;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/applicationCache`"}, :name web.SharedWorkerGlobalScope/application-cache, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The applicationCache read-only property of the `web.SharedWorkerGlobalScope`\n  returns the `web.ApplicationCache` object for the worker (see\n  the application cache).\n\n  `var nameObj = self.applicationCache;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/applicationCache`"}, set-location! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 186, :column 7, :end-line 186, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The location read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerLocation` associated with the worker.\n  is a specific location object, mostly a subset of the `web.Location`\n  browsing scopes, but adapted to workers.\n\n  `var locationObj = self.location;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/location`"}, :name web.SharedWorkerGlobalScope/set-location!, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The location read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerLocation` associated with the worker.\n  is a specific location object, mostly a subset of the `web.Location`\n  browsing scopes, but adapted to workers.\n\n  `var locationObj = self.location;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/location`"}, set-application-cache! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 62, :column 7, :end-line 62, :end-column 29, :arglists (quote ([this val])), :doc "Property.\n\n  The applicationCache read-only property of the `web.SharedWorkerGlobalScope`\n  returns the `web.ApplicationCache` object for the worker (see\n  the application cache).\n\n  `var nameObj = self.applicationCache;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/applicationCache`"}, :name web.SharedWorkerGlobalScope/set-application-cache!, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 29, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The applicationCache read-only property of the `web.SharedWorkerGlobalScope`\n  returns the `web.ApplicationCache` object for the worker (see\n  the application cache).\n\n  `var nameObj = self.applicationCache;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/applicationCache`"}, set-onconnect! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 117, :column 7, :end-line 117, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The onconnect property of the `web.SharedWorkerGlobalScope` interface\n  an event handler representing the code to be called when the\n  event is raised — that is, when a `web.MessagePort` connection\n  opened between the associated `web.SharedWorker` and the main\n\n  `onconnect = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/onconnect`"}, :name web.SharedWorkerGlobalScope/set-onconnect!, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onconnect property of the `web.SharedWorkerGlobalScope` interface\n  an event handler representing the code to be called when the\n  event is raised — that is, when a `web.MessagePort` connection\n  opened between the associated `web.SharedWorker` and the main\n\n  `onconnect = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/onconnect`"}, navigator {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 200, :column 7, :end-line 200, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The navigator read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerNavigator` associated with the worker.\n  is a specific navigator object, mostly a subset of the `web.Navigator`\n  browsing scopes, but adapted to workers.\n\n  `var navigatorObj = self.navigator;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator`"}, :name web.SharedWorkerGlobalScope/navigator, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The navigator read-only property of the `web.WorkerGlobalScope`\n  returns the `web.WorkerNavigator` associated with the worker.\n  is a specific navigator object, mostly a subset of the `web.Navigator`\n  browsing scopes, but adapted to workers.\n\n  `var navigatorObj = self.navigator;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator`"}, onconnect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SharedWorkerGlobalScope.cljs", :line 103, :column 7, :end-line 103, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The onconnect property of the `web.SharedWorkerGlobalScope` interface\n  an event handler representing the code to be called when the\n  event is raised — that is, when a `web.MessagePort` connection\n  opened between the associated `web.SharedWorker` and the main\n\n  `onconnect = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/onconnect`"}, :name web.SharedWorkerGlobalScope/onconnect, :variadic false, :file "src/web/SharedWorkerGlobalScope.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onconnect property of the `web.SharedWorkerGlobalScope` interface\n  an event handler representing the code to be called when the\n  event is raised — that is, when a `web.MessagePort` connection\n  opened between the associated `web.SharedWorker` and the main\n\n  `onconnect = function() { ... };`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SharedWorkerGlobalScope/onconnect`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SharedWorkerGlobalScope object (the `web.SharedWorker` global\n  is accessible through the `web.self` keyword. Some additional\n  functions, namespaces objects, and constructors, not typically\n  with the worker global scope, but available on it, are listed\n  the JavaScript Reference. See the complete list of functions\n  to workers."}
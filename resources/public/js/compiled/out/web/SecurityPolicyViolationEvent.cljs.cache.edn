{:rename-macros {}, :renames {}, :externs {SecurityPolicyViolationEvent {}}, :use-macros {}, :excludes #{}, :name web.SecurityPolicyViolationEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-status-code! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 284, :column 7, :end-line 284, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The statusCode read-only property of the `web.SecurityPolicyViolationEvent`\n  is a number representing the HTTP status code of the document\n  worker in which the violation occurred.\n\n  `let status = violationEventInstance.statusCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/statusCode`"}, :name web.SecurityPolicyViolationEvent/set-status-code!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The statusCode read-only property of the `web.SecurityPolicyViolationEvent`\n  is a number representing the HTTP status code of the document\n  worker in which the violation occurred.\n\n  `let status = violationEventInstance.statusCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/statusCode`"}, set-original-policy! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 180, :column 7, :end-line 180, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The originalPolicy read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` containing the policy whose enforcement\n  the violation.\n\n  `let origPolicy = violationEventInstance.originalPolicy;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy`"}, :name web.SecurityPolicyViolationEvent/set-original-policy!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The originalPolicy read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` containing the policy whose enforcement\n  the violation.\n\n  `let origPolicy = violationEventInstance.originalPolicy;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy`"}, original-policy {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 167, :column 7, :end-line 167, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The originalPolicy read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` containing the policy whose enforcement\n  the violation.\n\n  `let origPolicy = violationEventInstance.originalPolicy;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy`"}, :name web.SecurityPolicyViolationEvent/original-policy, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The originalPolicy read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` containing the policy whose enforcement\n  the violation.\n\n  `let origPolicy = violationEventInstance.originalPolicy;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/originalPolicy`"}, line-number {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 143, :column 7, :end-line 143, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The lineNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the line number in the document or worker at which the violation\n\n  `let lineNumber = violationEventInstance.lineNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/lineNumber`"}, :name web.SecurityPolicyViolationEvent/line-number, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 143, :end-line 143, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The lineNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the line number in the document or worker at which the violation\n\n  `let lineNumber = violationEventInstance.lineNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/lineNumber`"}, column-number {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 41, :column 7, :end-line 41, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The columnNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the column number in the document or worker at which the violation\n\n  `let colNum = violationEventInstance.columnNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/columnNumber`"}, :name web.SecurityPolicyViolationEvent/column-number, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The columnNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the column number in the document or worker at which the violation\n\n  `let colNum = violationEventInstance.columnNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/columnNumber`"}, set-disposition! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 78, :column 7, :end-line 78, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The disposition read-only property of the `web.SecurityPolicyViolationEvent`\n  indicates how the violated policy is configured to be treated\n  the user agent.\n\n  `let disposition = violationEventInstance.disposition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/disposition`"}, :name web.SecurityPolicyViolationEvent/set-disposition!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The disposition read-only property of the `web.SecurityPolicyViolationEvent`\n  indicates how the violated policy is configured to be treated\n  the user agent.\n\n  `let disposition = violationEventInstance.disposition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/disposition`"}, set-violated-directive! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 310, :column 7, :end-line 310, :end-column 30, :arglists (quote ([this val])), :doc "Property.\n\n  The violatedDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let violatedDir = violationEventInstance.violatedDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective`"}, :name web.SecurityPolicyViolationEvent/set-violated-directive!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 30, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The violatedDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let violatedDir = violationEventInstance.violatedDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective`"}, violated-directive {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 297, :column 7, :end-line 297, :end-column 25, :arglists (quote ([this])), :doc "Property.\n\n  The violatedDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let violatedDir = violationEventInstance.violatedDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective`"}, :name web.SecurityPolicyViolationEvent/violated-directive, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 25, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The violatedDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let violatedDir = violationEventInstance.violatedDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/violatedDirective`"}, set-column-number! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 53, :column 7, :end-line 53, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The columnNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the column number in the document or worker at which the violation\n\n  `let colNum = violationEventInstance.columnNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/columnNumber`"}, :name web.SecurityPolicyViolationEvent/set-column-number!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The columnNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the column number in the document or worker at which the violation\n\n  `let colNum = violationEventInstance.columnNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/columnNumber`"}, document-uri {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 91, :column 7, :end-line 91, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The documentURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let documentURI = violationEventInstance.documentURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/documentURI`"}, :name web.SecurityPolicyViolationEvent/document-uri, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The documentURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let documentURI = violationEventInstance.documentURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/documentURI`"}, set-source-file! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 258, :column 7, :end-line 258, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The sourceFile read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let source = violationEventInstance.sourceFile;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sourceFile`"}, :name web.SecurityPolicyViolationEvent/set-source-file!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 258, :end-line 258, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The sourceFile read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let source = violationEventInstance.sourceFile;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sourceFile`"}, set-referrer! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 206, :column 7, :end-line 206, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The referrer read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the referrer of the resources\n  policy was violated. This will be a URL or null.\n\n  `let referrer = violationEventInstance.referrer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/referrer`"}, :name web.SecurityPolicyViolationEvent/set-referrer!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The referrer read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the referrer of the resources\n  policy was violated. This will be a URL or null.\n\n  `let referrer = violationEventInstance.referrer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/referrer`"}, set-line-number! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 155, :column 7, :end-line 155, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The lineNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the line number in the document or worker at which the violation\n\n  `let lineNumber = violationEventInstance.lineNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/lineNumber`"}, :name web.SecurityPolicyViolationEvent/set-line-number!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The lineNumber read-only property of the `web.SecurityPolicyViolationEvent`\n  is the line number in the document or worker at which the violation\n\n  `let lineNumber = violationEventInstance.lineNumber;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/lineNumber`"}, disposition {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 65, :column 7, :end-line 65, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The disposition read-only property of the `web.SecurityPolicyViolationEvent`\n  indicates how the violated policy is configured to be treated\n  the user agent.\n\n  `let disposition = violationEventInstance.disposition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/disposition`"}, :name web.SecurityPolicyViolationEvent/disposition, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The disposition read-only property of the `web.SecurityPolicyViolationEvent`\n  indicates how the violated policy is configured to be treated\n  the user agent.\n\n  `let disposition = violationEventInstance.disposition;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/disposition`"}, status-code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 271, :column 7, :end-line 271, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The statusCode read-only property of the `web.SecurityPolicyViolationEvent`\n  is a number representing the HTTP status code of the document\n  worker in which the violation occurred.\n\n  `let status = violationEventInstance.statusCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/statusCode`"}, :name web.SecurityPolicyViolationEvent/status-code, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 271, :end-line 271, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The statusCode read-only property of the `web.SecurityPolicyViolationEvent`\n  is a number representing the HTTP status code of the document\n  worker in which the violation occurred.\n\n  `let status = violationEventInstance.statusCode;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/statusCode`"}, effective-directive {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 117, :column 7, :end-line 117, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The effectiveDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let effDir = violationEventInstance.effectiveDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective`"}, :name web.SecurityPolicyViolationEvent/effective-directive, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 117, :end-line 117, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The effectiveDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let effDir = violationEventInstance.effectiveDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective`"}, sample {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 219, :column 7, :end-line 219, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The sample read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing a sample of the resource that\n  the violation.\n\n  `let sample = violationEventInstance.sample;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sample`"}, :name web.SecurityPolicyViolationEvent/sample, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The sample read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing a sample of the resource that\n  the violation.\n\n  `let sample = violationEventInstance.sample;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sample`"}, referrer {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 193, :column 7, :end-line 193, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The referrer read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the referrer of the resources\n  policy was violated. This will be a URL or null.\n\n  `let referrer = violationEventInstance.referrer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/referrer`"}, :name web.SecurityPolicyViolationEvent/referrer, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The referrer read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the referrer of the resources\n  policy was violated. This will be a URL or null.\n\n  `let referrer = violationEventInstance.referrer;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/referrer`"}, blocked-uri {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The blockedURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the resource that\n  blocked because it violates a policy.\n\n  `let blockedURI = violationEventInstance.blockedURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/blockedURI`"}, :name web.SecurityPolicyViolationEvent/blocked-uri, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The blockedURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the resource that\n  blocked because it violates a policy.\n\n  `let blockedURI = violationEventInstance.blockedURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/blockedURI`"}, set-sample! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 232, :column 7, :end-line 232, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The sample read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing a sample of the resource that\n  the violation.\n\n  `let sample = violationEventInstance.sample;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sample`"}, :name web.SecurityPolicyViolationEvent/set-sample!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 232, :end-line 232, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The sample read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing a sample of the resource that\n  the violation.\n\n  `let sample = violationEventInstance.sample;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sample`"}, source-file {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 245, :column 7, :end-line 245, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The sourceFile read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let source = violationEventInstance.sourceFile;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sourceFile`"}, :name web.SecurityPolicyViolationEvent/source-file, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 245, :end-line 245, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The sourceFile read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let source = violationEventInstance.sourceFile;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/sourceFile`"}, set-blocked-uri! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 28, :column 7, :end-line 28, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The blockedURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the resource that\n  blocked because it violates a policy.\n\n  `let blockedURI = violationEventInstance.blockedURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/blockedURI`"}, :name web.SecurityPolicyViolationEvent/set-blocked-uri!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The blockedURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the resource that\n  blocked because it violates a policy.\n\n  `let blockedURI = violationEventInstance.blockedURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/blockedURI`"}, constructor {:name web.SecurityPolicyViolationEvent/constructor, :file "src/web/SecurityPolicyViolationEvent.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The SecurityPolicyViolationEvent constructor creates a new SecurityPolicyViolationEvent object instance.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/SecurityPolicyViolationEvent`", :tag js}, set-effective-directive! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 130, :column 7, :end-line 130, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The effectiveDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let effDir = violationEventInstance.effectiveDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective`"}, :name web.SecurityPolicyViolationEvent/set-effective-directive!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 130, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The effectiveDirective read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `dom.DOMString` representing the directive whose enforcement\n  the violation.\n\n  `let effDir = violationEventInstance.effectiveDirective;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/effectiveDirective`"}, set-document-uri! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/SecurityPolicyViolationEvent.cljs", :line 104, :column 7, :end-line 104, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The documentURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let documentURI = violationEventInstance.documentURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/documentURI`"}, :name web.SecurityPolicyViolationEvent/set-document-uri!, :variadic false, :file "src/web/SecurityPolicyViolationEvent.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The documentURI read-only property of the `web.SecurityPolicyViolationEvent`\n  is a `web.USVString` representing the URI of the document or\n  in which the violation was found.\n\n  `let documentURI = violationEventInstance.documentURI;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SecurityPolicyViolationEvent/documentURI`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SecurityPolicyViolationEvent interface inherits from `web.Event`,\n  represents the event object of an event sent on a document or\n  when its content security policy is violated."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.ImageBitmap, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {close {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageBitmap.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  The ImageBitmap.close() method disposes of all graphical resources\n  with an ImageBitmap.\n\n  `void ImageBitmap.close()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/close`"}, :name web.ImageBitmap/close, :variadic false, :file "src/web/ImageBitmap.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The ImageBitmap.close() method disposes of all graphical resources\n  with an ImageBitmap.\n\n  `void ImageBitmap.close()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/close`"}, height {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageBitmap.cljs", :line 21, :column 7, :end-line 21, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only ImageBitmap.height property returns the `web.ImageBitmap`\n  height in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/height`"}, :name web.ImageBitmap/height, :variadic false, :file "src/web/ImageBitmap.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only ImageBitmap.height property returns the `web.ImageBitmap`\n  height in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/height`"}, set-height! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageBitmap.cljs", :line 31, :column 7, :end-line 31, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only ImageBitmap.height property returns the `web.ImageBitmap`\n  height in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/height`"}, :name web.ImageBitmap/set-height!, :variadic false, :file "src/web/ImageBitmap.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only ImageBitmap.height property returns the `web.ImageBitmap`\n  height in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/height`"}, width {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageBitmap.cljs", :line 41, :column 7, :end-line 41, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The read-only ImageBitmap.width property returns the `web.ImageBitmap`\n  width in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/width`"}, :name web.ImageBitmap/width, :variadic false, :file "src/web/ImageBitmap.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only ImageBitmap.width property returns the `web.ImageBitmap`\n  width in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/width`"}, set-width! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageBitmap.cljs", :line 51, :column 7, :end-line 51, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only ImageBitmap.width property returns the `web.ImageBitmap`\n  width in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/width`"}, :name web.ImageBitmap/set-width!, :variadic false, :file "src/web/ImageBitmap.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The read-only ImageBitmap.width property returns the `web.ImageBitmap`\n  width in CSS pixels.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap/width`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ImageBitmap interface represents a bitmap image which can\n  drawn to a `web.<canvas>` without undue latency. It can be created\n  a variety of source objects using the `web.createImageBitmap()`\n  method. ImageBitmap provides an asynchronous and resource efficient\n  to prepare textures for rendering in WebGL."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.EventListener, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {handle-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/EventListener.cljs", :line 6, :column 7, :end-line 6, :end-column 19, :arglists (quote ([this event])), :doc "Method.\n\n  The `web.EventListener` method handleEvent() method is called\n  the user agent when an event is sent to the EventListener, in\n  to handle events that occur on an observed `web.EventTarget`.\n\n  `eventListener.handleEvent(event);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/EventListener/handleEvent`"}, :name web.EventListener/handle-event, :variadic false, :file "src/web/EventListener.cljs", :end-column 19, :method-params ([this event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this event])), :doc "Method.\n\n  The `web.EventListener` method handleEvent() method is called\n  the user agent when an event is sent to the EventListener, in\n  to handle events that occur on an observed `web.EventTarget`.\n\n  `eventListener.handleEvent(event);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/EventListener/handleEvent`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The EventListener interface represents an object that can handle\n  event dispatched by an `web.EventTarget` object."}
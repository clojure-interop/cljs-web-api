{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.ResizeObserverEntry, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {content-rect {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ResizeObserverEntry.cljs", :line 6, :column 7, :end-line 6, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The contentRect read-only property of the `web.ResizeObserverEntry`\n  returns the new content rectangle of the element whose size is\n  observed.\n\n  `var contentRect = resizeObserverEntry.contentRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/contentRect`"}, :name web.ResizeObserverEntry/content-rect, :variadic false, :file "src/web/ResizeObserverEntry.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The contentRect read-only property of the `web.ResizeObserverEntry`\n  returns the new content rectangle of the element whose size is\n  observed.\n\n  `var contentRect = resizeObserverEntry.contentRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/contentRect`"}, set-content-rect! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ResizeObserverEntry.cljs", :line 19, :column 7, :end-line 19, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The contentRect read-only property of the `web.ResizeObserverEntry`\n  returns the new content rectangle of the element whose size is\n  observed.\n\n  `var contentRect = resizeObserverEntry.contentRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/contentRect`"}, :name web.ResizeObserverEntry/set-content-rect!, :variadic false, :file "src/web/ResizeObserverEntry.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The contentRect read-only property of the `web.ResizeObserverEntry`\n  returns the new content rectangle of the element whose size is\n  observed.\n\n  `var contentRect = resizeObserverEntry.contentRect;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/contentRect`"}, target {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ResizeObserverEntry.cljs", :line 32, :column 7, :end-line 32, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The target read-only property of the `web.ResizeObserverEntry`\n  returns reference to the `web.Element` or `svg.SVGElement` that\n  resized.\n\n  `var element = ResizeObserverEntry.target;\n  var svgElement = ResizeObserverEntry.target;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/target`"}, :name web.ResizeObserverEntry/target, :variadic false, :file "src/web/ResizeObserverEntry.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The target read-only property of the `web.ResizeObserverEntry`\n  returns reference to the `web.Element` or `svg.SVGElement` that\n  resized.\n\n  `var element = ResizeObserverEntry.target;\n  var svgElement = ResizeObserverEntry.target;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/target`"}, set-target! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ResizeObserverEntry.cljs", :line 46, :column 7, :end-line 46, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The target read-only property of the `web.ResizeObserverEntry`\n  returns reference to the `web.Element` or `svg.SVGElement` that\n  resized.\n\n  `var element = ResizeObserverEntry.target;\n  var svgElement = ResizeObserverEntry.target;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/target`"}, :name web.ResizeObserverEntry/set-target!, :variadic false, :file "src/web/ResizeObserverEntry.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The target read-only property of the `web.ResizeObserverEntry`\n  returns reference to the `web.Element` or `svg.SVGElement` that\n  resized.\n\n  `var element = ResizeObserverEntry.target;\n  var svgElement = ResizeObserverEntry.target;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/target`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ResizeObserverEntry interface is the object passed to the\n  `web.ResizeObserver()` constructor."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.PermissionStatus, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {onchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PermissionStatus.cljs", :line 7, :column 7, :end-line 7, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The onchange event handler of the `web.PermissionStatus` interface\n  called whenever the `web.PermissionStatus.state` property changes.\n\n  `PermissionStatus.onchange = function() { ... }\n  PermissionStatus.addEventListener('change', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/onchange`"}, :name web.PermissionStatus/onchange, :variadic false, :file "src/web/PermissionStatus.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The onchange event handler of the `web.PermissionStatus` interface\n  called whenever the `web.PermissionStatus.state` property changes.\n\n  `PermissionStatus.onchange = function() { ... }\n  PermissionStatus.addEventListener('change', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/onchange`"}, set-onchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PermissionStatus.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The onchange event handler of the `web.PermissionStatus` interface\n  called whenever the `web.PermissionStatus.state` property changes.\n\n  `PermissionStatus.onchange = function() { ... }\n  PermissionStatus.addEventListener('change', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/onchange`"}, :name web.PermissionStatus/set-onchange!, :variadic false, :file "src/web/PermissionStatus.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The onchange event handler of the `web.PermissionStatus` interface\n  called whenever the `web.PermissionStatus.state` property changes.\n\n  `PermissionStatus.onchange = function() { ... }\n  PermissionStatus.addEventListener('change', function() { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/onchange`"}, state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PermissionStatus.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The state read-only property of the `web.PermissionStatus` interface\n  the state of a requested permission. This property returns one\n  'granted', 'denied', or 'prompt'.\n\n  `var permission = PermissionStatus.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/state`"}, :name web.PermissionStatus/state, :variadic false, :file "src/web/PermissionStatus.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The state read-only property of the `web.PermissionStatus` interface\n  the state of a requested permission. This property returns one\n  'granted', 'denied', or 'prompt'.\n\n  `var permission = PermissionStatus.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/state`"}, set-state! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PermissionStatus.cljs", :line 46, :column 7, :end-line 46, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The state read-only property of the `web.PermissionStatus` interface\n  the state of a requested permission. This property returns one\n  'granted', 'denied', or 'prompt'.\n\n  `var permission = PermissionStatus.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/state`"}, :name web.PermissionStatus/set-state!, :variadic false, :file "src/web/PermissionStatus.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The state read-only property of the `web.PermissionStatus` interface\n  the state of a requested permission. This property returns one\n  'granted', 'denied', or 'prompt'.\n\n  `var permission = PermissionStatus.state;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PermissionStatus/state`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PermissionStatus interface of the Permissions API provides\n  state of an object and an event handler for monitoring changes\n  said state."}
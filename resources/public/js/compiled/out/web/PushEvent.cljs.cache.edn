{:rename-macros {}, :renames {}, :externs {PushEvent {}}, :use-macros {}, :excludes #{}, :name web.PushEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.PushEvent/constructor, :file "src/web/PushEvent.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PushEvent.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :doc "Constructor.\n\n  The PushEvent() constructor creates a new `web.PushEvent` object. Note that the this constructor is exposed only to a service worker context.\n\n  type\n  \\tA `dom.DOMString` defining the type of PushEvent. This can be push or pushsubscriptionchange.\n  \\teventInitDict Optional\n  \\tAn options object containing any initialization data you want to populate the PushEvent object with. The options are:\n\n  \\t\\tdata: The data you want the PushEvent to contain, if any. When the constructor is invoked, the `web.PushEvent.data` property of the resulting object will be set to a new `web.PushMessageData` object containing bytes extracted from the eventInitDict data member.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PushEvent/PushEvent`", :tag js}, data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PushEvent.cljs", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The data read-only property of the PushEvent interface returns\n  reference to a `web.PushMessageData` object containing data sent\n  the `web.PushSubscription`.\n\n  `var myPushData = PushEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PushEvent/data`"}, :name web.PushEvent/data, :variadic false, :file "src/web/PushEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The data read-only property of the PushEvent interface returns\n  reference to a `web.PushMessageData` object containing data sent\n  the `web.PushSubscription`.\n\n  `var myPushData = PushEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PushEvent/data`"}, set-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PushEvent.cljs", :line 36, :column 7, :end-line 36, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The data read-only property of the PushEvent interface returns\n  reference to a `web.PushMessageData` object containing data sent\n  the `web.PushSubscription`.\n\n  `var myPushData = PushEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PushEvent/data`"}, :name web.PushEvent/set-data!, :variadic false, :file "src/web/PushEvent.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The data read-only property of the PushEvent interface returns\n  reference to a `web.PushMessageData` object containing data sent\n  the `web.PushSubscription`.\n\n  `var myPushData = PushEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PushEvent/data`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PushEvent interface of the Push API represents a push message\n  has been received. This event is sent to the global scope of\n  `web.ServiceWorker`. It contains the information sent from an\n  server to a `web.PushSubscription`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.DisplayMediaStreamConstraints, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {audio {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DisplayMediaStreamConstraints.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's audio property\n  used to specify whether or not to request that the `media.MediaStream`\n  screen display contents also include an audio track. This value\n  simply be a Boolean, where true indicates that an audio track\n  be included an false (the default) indicates that no audio should\n  included in the stream.\n\n  `displayMediaStreamConstraints.audio = allowAudioFlag;\n  displayMediaStreamConstraints.audio = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  audio: allowAudioFlag|mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/audio`"}, :name web.DisplayMediaStreamConstraints/audio, :variadic false, :file "src/web/DisplayMediaStreamConstraints.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's audio property\n  used to specify whether or not to request that the `media.MediaStream`\n  screen display contents also include an audio track. This value\n  simply be a Boolean, where true indicates that an audio track\n  be included an false (the default) indicates that no audio should\n  included in the stream.\n\n  `displayMediaStreamConstraints.audio = allowAudioFlag;\n  displayMediaStreamConstraints.audio = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  audio: allowAudioFlag|mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/audio`"}, set-audio! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DisplayMediaStreamConstraints.cljs", :line 29, :column 7, :end-line 29, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's audio property\n  used to specify whether or not to request that the `media.MediaStream`\n  screen display contents also include an audio track. This value\n  simply be a Boolean, where true indicates that an audio track\n  be included an false (the default) indicates that no audio should\n  included in the stream.\n\n  `displayMediaStreamConstraints.audio = allowAudioFlag;\n  displayMediaStreamConstraints.audio = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  audio: allowAudioFlag|mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/audio`"}, :name web.DisplayMediaStreamConstraints/set-audio!, :variadic false, :file "src/web/DisplayMediaStreamConstraints.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's audio property\n  used to specify whether or not to request that the `media.MediaStream`\n  screen display contents also include an audio track. This value\n  simply be a Boolean, where true indicates that an audio track\n  be included an false (the default) indicates that no audio should\n  included in the stream.\n\n  `displayMediaStreamConstraints.audio = allowAudioFlag;\n  displayMediaStreamConstraints.audio = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  audio: allowAudioFlag|mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/audio`"}, video {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DisplayMediaStreamConstraints.cljs", :line 50, :column 7, :end-line 50, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's video property\n  used to configure the video track in the stream returned by `web.getDisplayMedia()`.\n\n  `displayMediaStreamConstraints.video = allowVideoFlag;\n  displayMediaStreamConstraints.video = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  video: allowVideoFlag | mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/video`"}, :name web.DisplayMediaStreamConstraints/video, :variadic false, :file "src/web/DisplayMediaStreamConstraints.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's video property\n  used to configure the video track in the stream returned by `web.getDisplayMedia()`.\n\n  `displayMediaStreamConstraints.video = allowVideoFlag;\n  displayMediaStreamConstraints.video = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  video: allowVideoFlag | mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/video`"}, set-video! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/DisplayMediaStreamConstraints.cljs", :line 67, :column 7, :end-line 67, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's video property\n  used to configure the video track in the stream returned by `web.getDisplayMedia()`.\n\n  `displayMediaStreamConstraints.video = allowVideoFlag;\n  displayMediaStreamConstraints.video = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  video: allowVideoFlag | mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/video`"}, :name web.DisplayMediaStreamConstraints/set-video!, :variadic false, :file "src/web/DisplayMediaStreamConstraints.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.DisplayMediaStreamConstraints` dictionary's video property\n  used to configure the video track in the stream returned by `web.getDisplayMedia()`.\n\n  `displayMediaStreamConstraints.video = allowVideoFlag;\n  displayMediaStreamConstraints.video = mediaTrackConstraints;\n\n  displayMediaStreamConstraints = {\n  video: allowVideoFlag | mediaTrackConstraints;\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DisplayMediaStreamConstraints/video`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The DisplayMediaStreamConstraints dictionary is used to specify\n  or not to include video and/or audio tracks in the `media.MediaStream`\n  be returned by `web.getDisplayMedia()`, as well as what type\n  processing must be applied to the tracks."}
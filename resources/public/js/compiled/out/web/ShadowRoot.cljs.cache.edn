{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.ShadowRoot, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {caret-position-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 46, :column 7, :end-line 46, :end-column 32, :arglists (quote ([this & args])), :doc "Method.\n\n  The caretPositionFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns a `web.CaretPosition` object, containing the DOM node,\n  with the caret and caret's character offset within that node.\n\n  `var caretPosition = document.caretPositionFromPoint(float x, float y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/caretPositionFromPoint`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.ShadowRoot/caret-position-from-point, :variadic true, :file "src/web/ShadowRoot.cljs", :end-column 32, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The caretPositionFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns a `web.CaretPosition` object, containing the DOM node,\n  with the caret and caret's character offset within that node.\n\n  `var caretPosition = document.caretPositionFromPoint(float x, float y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/caretPositionFromPoint`"}, get-selection {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 7, :column 7, :end-line 7, :end-column 20, :arglists (quote ([this])), :doc "Method.\n\n  The getSelection() property of the `web.DocumentOrShadowRoot`\n  returns a `web.Selection` object representing the range of text\n  by the user, or the current position of the caret.\n\n  `var selection = documentOrShadowRootInstance.getSelection()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection`"}, :name web.ShadowRoot/get-selection, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getSelection() property of the `web.DocumentOrShadowRoot`\n  returns a `web.Selection` object representing the range of text\n  by the user, or the current position of the caret.\n\n  `var selection = documentOrShadowRootInstance.getSelection()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/getSelection`"}, delegates-focus {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 59, :column 7, :end-line 59, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The delegatesFocus read-only property of the `web.ShadowRoot`\n  returns a boolean that indicates whether delegatesFocus was set\n  the shadow was attached (see `web.Element.attachShadow()`).\n\n  `var df = shadowRoot.delegatesFocus`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus`"}, :name web.ShadowRoot/delegates-focus, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The delegatesFocus read-only property of the `web.ShadowRoot`\n  returns a boolean that indicates whether delegatesFocus was set\n  the shadow was attached (see `web.Element.attachShadow()`).\n\n  `var df = shadowRoot.delegatesFocus`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus`"}, set-style-sheets! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 198, :column 7, :end-line 198, :end-column 24, :arglists (quote ([this val])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, :name web.ShadowRoot/set-style-sheets!, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 24, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 198, :end-line 198, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, set-host! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 97, :column 7, :end-line 97, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The host read-only property of the `web.ShadowRoot` returns a\n  to the DOM element the ShadowRoot is attached to.\n\n  `var element = shadowRoot.host`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/host`"}, :name web.ShadowRoot/set-host!, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 97, :end-line 97, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The host read-only property of the `web.ShadowRoot` returns a\n  to the DOM element the ShadowRoot is attached to.\n\n  `var element = shadowRoot.host`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/host`"}, inner-html {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 109, :column 7, :end-line 109, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The innerHTML property of the `web.ShadowRoot` interface sets\n  returns a reference to the DOM tree inside the ShadowRoot.\n\n  `var domString = shadowRoot.innerHTML\n  shadowRoot.innerHTML = domString`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/innerHTML`"}, :name web.ShadowRoot/inner-html, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The innerHTML property of the `web.ShadowRoot` interface sets\n  returns a reference to the DOM tree inside the ShadowRoot.\n\n  `var domString = shadowRoot.innerHTML\n  shadowRoot.innerHTML = domString`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/innerHTML`"}, set-delegates-focus! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 72, :column 7, :end-line 72, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The delegatesFocus read-only property of the `web.ShadowRoot`\n  returns a boolean that indicates whether delegatesFocus was set\n  the shadow was attached (see `web.Element.attachShadow()`).\n\n  `var df = shadowRoot.delegatesFocus`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus`"}, :name web.ShadowRoot/set-delegates-focus!, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The delegatesFocus read-only property of the `web.ShadowRoot`\n  returns a boolean that indicates whether delegatesFocus was set\n  the shadow was attached (see `web.Element.attachShadow()`).\n\n  `var df = shadowRoot.delegatesFocus`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus`"}, elements-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 33, :column 7, :end-line 33, :end-column 26, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementsFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns an array of all elements at the specified coordinates\n  to the viewport).\n\n  `var elements = document.elementsFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementsFromPoint`"}, :name web.ShadowRoot/elements-from-point, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 26, :method-params ([this x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementsFromPoint() property of the `web.DocumentOrShadowRoot`\n  returns an array of all elements at the specified coordinates\n  to the viewport).\n\n  `var elements = document.elementsFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementsFromPoint`"}, set-inner-html! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 122, :column 7, :end-line 122, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The innerHTML property of the `web.ShadowRoot` interface sets\n  returns a reference to the DOM tree inside the ShadowRoot.\n\n  `var domString = shadowRoot.innerHTML\n  shadowRoot.innerHTML = domString`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/innerHTML`"}, :name web.ShadowRoot/set-inner-html!, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 122, :end-line 122, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The innerHTML property of the `web.ShadowRoot` interface sets\n  returns a reference to the DOM tree inside the ShadowRoot.\n\n  `var domString = shadowRoot.innerHTML\n  shadowRoot.innerHTML = domString`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/innerHTML`"}, element-from-point {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 20, :column 7, :end-line 20, :end-column 25, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementFromPoint() method—available on both the `web.Document`\n  `web.ShadowRoot` objects—returns the topmost `web.Element` at\n  specified coordinates (relative to the viewport).\n\n  `var element = document.elementFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementFromPoint`"}, :name web.ShadowRoot/element-from-point, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 25, :method-params ([this x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this x y])), :doc "Method.\n\n  The elementFromPoint() method—available on both the `web.Document`\n  `web.ShadowRoot` objects—returns the topmost `web.Element` at\n  specified coordinates (relative to the viewport).\n\n  `var element = document.elementFromPoint(x, y);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/elementFromPoint`"}, mode {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 135, :column 7, :end-line 135, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The mode property of the `web.ShadowRoot` specifies its mode\n  either open or closed. This defines whether or not the shadow\n  internal features are accessible from JavaScript.\n\n  `var mode = shadowRoot.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/mode`"}, :name web.ShadowRoot/mode, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The mode property of the `web.ShadowRoot` specifies its mode\n  either open or closed. This defines whether or not the shadow\n  internal features are accessible from JavaScript.\n\n  `var mode = shadowRoot.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/mode`"}, set-active-element! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 174, :column 7, :end-line 174, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}, :name web.ShadowRoot/set-active-element!, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}, host {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 85, :column 7, :end-line 85, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The host read-only property of the `web.ShadowRoot` returns a\n  to the DOM element the ShadowRoot is attached to.\n\n  `var element = shadowRoot.host`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/host`"}, :name web.ShadowRoot/host, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The host read-only property of the `web.ShadowRoot` returns a\n  to the DOM element the ShadowRoot is attached to.\n\n  `var element = shadowRoot.host`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/host`"}, set-mode! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 148, :column 7, :end-line 148, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The mode property of the `web.ShadowRoot` specifies its mode\n  either open or closed. This defines whether or not the shadow\n  internal features are accessible from JavaScript.\n\n  `var mode = shadowRoot.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/mode`"}, :name web.ShadowRoot/set-mode!, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The mode property of the `web.ShadowRoot` specifies its mode\n  either open or closed. This defines whether or not the shadow\n  internal features are accessible from JavaScript.\n\n  `var mode = shadowRoot.mode`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/mode`"}, style-sheets {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 187, :column 7, :end-line 187, :end-column 19, :arglists (quote ([this])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, :name web.ShadowRoot/style-sheets, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 19, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The styleSheets read-only property of the `web.DocumentOrShadowRoot`\n  returns a `web.StyleSheetList` of `css.CSSStyleSheet` objects,\n  stylesheets explicitly linked into or embedded in a document.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/styleSheets`"}, active-element {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ShadowRoot.cljs", :line 161, :column 7, :end-line 161, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}, :name web.ShadowRoot/active-element, :variadic false, :file "src/web/ShadowRoot.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The activeElement read-only property of the `web.Document` and\n  interfaces returns the `web.Element` within the DOM or shadow\n  tree that currently has focus.\n\n  `var element = DocumentOrShadowRoot.activeElement`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/activeElement`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ShadowRoot interface of the Shadow DOM API is the root node\n  a DOM subtree that is rendered separately from a document's main\n  tree."}
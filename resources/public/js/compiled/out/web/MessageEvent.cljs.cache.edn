{:rename-macros {}, :renames {}, :externs {MessageEvent {}}, :use-macros {}, :excludes #{}, :name web.MessageEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-origin! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 89, :column 7, :end-line 89, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The origin read-only property of the `web.MessageEvent` interface\n  a `web.USVString` representing the origin of the message emitter.\n\n  `var origin = messageEvent.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/origin`"}, :name web.MessageEvent/set-origin!, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The origin read-only property of the `web.MessageEvent` interface\n  a `web.USVString` representing the origin of the message emitter.\n\n  `var origin = messageEvent.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/origin`"}, data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The data read-only property of the `web.MessageEvent` interface\n  the data sent by the message emitter.\n\n  `var data = messageEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/data`"}, :name web.MessageEvent/data, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The data read-only property of the `web.MessageEvent` interface\n  the data sent by the message emitter.\n\n  `var data = messageEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/data`"}, last-event-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 53, :column 7, :end-line 53, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The lastEventId read-only property of the `web.MessageEvent`\n  is a `dom.DOMString` representing a unique ID for the event.\n\n  `var myId = messageEvent.lastEventId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/lastEventId`"}, :name web.MessageEvent/last-event-id, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The lastEventId read-only property of the `web.MessageEvent`\n  is a `dom.DOMString` representing a unique ID for the event.\n\n  `var myId = messageEvent.lastEventId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/lastEventId`"}, set-source! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 142, :column 7, :end-line 142, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The source read-only property of the `web.MessageEvent` interface\n  a MessageEventSource (which can be a `web.WindowProxy`, `web.MessagePort`,\n  `web.ServiceWorker` object) representing the message emitter.\n\n  `let mySource = messageEvent.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/source`"}, :name web.MessageEvent/set-source!, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The source read-only property of the `web.MessageEvent` interface\n  a MessageEventSource (which can be a `web.WindowProxy`, `web.MessagePort`,\n  `web.ServiceWorker` object) representing the message emitter.\n\n  `let mySource = messageEvent.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/source`"}, set-last-event-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 65, :column 7, :end-line 65, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The lastEventId read-only property of the `web.MessageEvent`\n  is a `dom.DOMString` representing a unique ID for the event.\n\n  `var myId = messageEvent.lastEventId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/lastEventId`"}, :name web.MessageEvent/set-last-event-id!, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The lastEventId read-only property of the `web.MessageEvent`\n  is a `dom.DOMString` representing a unique ID for the event.\n\n  `var myId = messageEvent.lastEventId;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/lastEventId`"}, source {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 129, :column 7, :end-line 129, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The source read-only property of the `web.MessageEvent` interface\n  a MessageEventSource (which can be a `web.WindowProxy`, `web.MessagePort`,\n  `web.ServiceWorker` object) representing the message emitter.\n\n  `let mySource = messageEvent.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/source`"}, :name web.MessageEvent/source, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The source read-only property of the `web.MessageEvent` interface\n  a MessageEventSource (which can be a `web.WindowProxy`, `web.MessagePort`,\n  `web.ServiceWorker` object) representing the message emitter.\n\n  `let mySource = messageEvent.source;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/source`"}, set-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 41, :column 7, :end-line 41, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The data read-only property of the `web.MessageEvent` interface\n  the data sent by the message emitter.\n\n  `var data = messageEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/data`"}, :name web.MessageEvent/set-data!, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The data read-only property of the `web.MessageEvent` interface\n  the data sent by the message emitter.\n\n  `var data = messageEvent.data;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/data`"}, ports {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 101, :column 7, :end-line 101, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The ports read-only property of the `web.MessageEvent` interface\n  an array of `web.MessagePort` objects representing the ports\n  with the channel the message is being sent through (where appropriate,\n  in channel messaging or when sending a message to a shared worker).\n\n  `var myPorts = messageEvent.ports;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/ports`"}, :name web.MessageEvent/ports, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ports read-only property of the `web.MessageEvent` interface\n  an array of `web.MessagePort` objects representing the ports\n  with the channel the message is being sent through (where appropriate,\n  in channel messaging or when sending a message to a shared worker).\n\n  `var myPorts = messageEvent.ports;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/ports`"}, set-ports! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 115, :column 7, :end-line 115, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The ports read-only property of the `web.MessageEvent` interface\n  an array of `web.MessagePort` objects representing the ports\n  with the channel the message is being sent through (where appropriate,\n  in channel messaging or when sending a message to a shared worker).\n\n  `var myPorts = messageEvent.ports;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/ports`"}, :name web.MessageEvent/set-ports!, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ports read-only property of the `web.MessageEvent` interface\n  an array of `web.MessagePort` objects representing the ports\n  with the channel the message is being sent through (where appropriate,\n  in channel messaging or when sending a message to a shared worker).\n\n  `var myPorts = messageEvent.ports;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/ports`"}, constructor {:name web.MessageEvent/constructor, :file "src/web/MessageEvent.cljs", :line 6, :column 1, :end-line 6, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 6, :column 6, :end-line 6, :end-column 17}, :doc "Constructor.\n\n  The MessageEvent() constructor creates a new `web.MessageEvent` object instance.\n\n  type\n  The type of MessageEvent that will be created. This can be one of XXX\n\n  init Optional\n\n\n  A dictionary object that can contain the following properties:\n\n\n  data: The data you want contained in the MessageEvent. This can be of any data type, and will default to null if not specified.\n  origin: A `web.USVString` representing the origin of the message emitter. This defaults to an empty string (\\\"\\\") if not specified.\n  lastEventId: A `dom.DOMString` representing a unique ID for the event. This defaults to an empty string (\\\"\\\") if not specified.\n  source: An MessageEventSource (which can be a `web.WindowProxy`, `web.MessagePort`, or `web.ServiceWorker` object) representing the message emitter. This defaults to null if not set.\n  ports: An array of `web.MessagePort` objects representing the ports associated with the channel the message is being sent through (where appropriate, e.g. in channel messaging or when sending a message to a shared worker). This defaults to an empty array ([]) if not specified.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/MessageEvent`", :tag js}, origin {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MessageEvent.cljs", :line 77, :column 7, :end-line 77, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The origin read-only property of the `web.MessageEvent` interface\n  a `web.USVString` representing the origin of the message emitter.\n\n  `var origin = messageEvent.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/origin`"}, :name web.MessageEvent/origin, :variadic false, :file "src/web/MessageEvent.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The origin read-only property of the `web.MessageEvent` interface\n  a `web.USVString` representing the origin of the message emitter.\n\n  `var origin = messageEvent.origin;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MessageEvent/origin`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MessageEvent interface represents a message received by a\n  object."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.MutationObserverInit, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-attributes! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 84, :column 7, :end-line 84, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributes\n  is used to specify whether or not to watch for attribute value\n  on the node or nodes being observed.\n\n  `var options = {\n  attributes: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributes`"}, :name web.MutationObserverInit/set-attributes!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributes\n  is used to specify whether or not to watch for attribute value\n  on the node or nodes being observed.\n\n  `var options = {\n  attributes: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributes`"}, set-attribute-old-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 53, :column 7, :end-line 53, :end-column 31, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeOldValue\n  is used to specify whether or not to record the prior value of\n  altered attribute in `web.MutationRecord` objects denoting attribute\n  changes.\n\n  `var options = {\n  attributeOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeOldValue`"}, :name web.MutationObserverInit/set-attribute-old-value!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 31, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeOldValue\n  is used to specify whether or not to record the prior value of\n  altered attribute in `web.MutationRecord` objects denoting attribute\n  changes.\n\n  `var options = {\n  attributeOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeOldValue`"}, set-character-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 114, :column 7, :end-line 114, :end-column 26, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterData\n  is used to specify whether or not to monitor the node or nodes\n  observed for changes to their textual contents.\n\n  `var options = {\n  characterData: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterData`"}, :name web.MutationObserverInit/set-character-data!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 26, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 114, :end-line 114, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterData\n  is used to specify whether or not to monitor the node or nodes\n  observed for changes to their textual contents.\n\n  `var options = {\n  characterData: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterData`"}, set-character-data-old-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 145, :column 7, :end-line 145, :end-column 36, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterDataOldValue\n  is used to specify whether or not the `web.MutationRecord.oldValue`\n  for DOM mutations should be set to the previous value of text\n  which changed.\n\n  `var options = {\n  characterDataOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterDataOldValue`"}, :name web.MutationObserverInit/set-character-data-old-value!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 36, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterDataOldValue\n  is used to specify whether or not the `web.MutationRecord.oldValue`\n  for DOM mutations should be set to the previous value of text\n  which changed.\n\n  `var options = {\n  characterDataOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterDataOldValue`"}, attributes {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 69, :column 7, :end-line 69, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributes\n  is used to specify whether or not to watch for attribute value\n  on the node or nodes being observed.\n\n  `var options = {\n  attributes: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributes`"}, :name web.MutationObserverInit/attributes, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributes\n  is used to specify whether or not to watch for attribute value\n  on the node or nodes being observed.\n\n  `var options = {\n  attributes: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributes`"}, character-data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 99, :column 7, :end-line 99, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterData\n  is used to specify whether or not to monitor the node or nodes\n  observed for changes to their textual contents.\n\n  `var options = {\n  characterData: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterData`"}, :name web.MutationObserverInit/character-data, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterData\n  is used to specify whether or not to monitor the node or nodes\n  observed for changes to their textual contents.\n\n  `var options = {\n  characterData: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterData`"}, set-attribute-filter! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 22, :column 7, :end-line 22, :end-column 28, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeFilter\n  is an array of strings specifying the names of the attributes\n  values are to be monitored for changes.\n\n  `var options = {\n  attributeFilter: [ \\\"list\\\", \\\"of\\\", \\\"attribute\\\", \\\"names\\\" ]\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeFilter`"}, :name web.MutationObserverInit/set-attribute-filter!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 28, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeFilter\n  is an array of strings specifying the names of the attributes\n  values are to be monitored for changes.\n\n  `var options = {\n  attributeFilter: [ \\\"list\\\", \\\"of\\\", \\\"attribute\\\", \\\"names\\\" ]\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeFilter`"}, character-data-old-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 129, :column 7, :end-line 129, :end-column 31, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterDataOldValue\n  is used to specify whether or not the `web.MutationRecord.oldValue`\n  for DOM mutations should be set to the previous value of text\n  which changed.\n\n  `var options = {\n  characterDataOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterDataOldValue`"}, :name web.MutationObserverInit/character-data-old-value, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 31, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional characterDataOldValue\n  is used to specify whether or not the `web.MutationRecord.oldValue`\n  for DOM mutations should be set to the previous value of text\n  which changed.\n\n  `var options = {\n  characterDataOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterDataOldValue`"}, subtree {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 191, :column 7, :end-line 191, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional subtree\n  can be set to true to monitor the targeted node and all of its\n\n  `var options = {\n  subtree: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/subtree`"}, :name web.MutationObserverInit/subtree, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional subtree\n  can be set to true to monitor the targeted node and all of its\n\n  `var options = {\n  subtree: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/subtree`"}, set-child-list! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 176, :column 7, :end-line 176, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional childList\n  indicates whether or not to monitor the specified node or nodes\n  the addition or removal of new child nodes.\n\n  `var options = {\n  childList: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/childList`"}, :name web.MutationObserverInit/set-child-list!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 176, :end-line 176, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional childList\n  indicates whether or not to monitor the specified node or nodes\n  the addition or removal of new child nodes.\n\n  `var options = {\n  childList: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/childList`"}, attribute-filter {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 7, :column 7, :end-line 7, :end-column 23, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeFilter\n  is an array of strings specifying the names of the attributes\n  values are to be monitored for changes.\n\n  `var options = {\n  attributeFilter: [ \\\"list\\\", \\\"of\\\", \\\"attribute\\\", \\\"names\\\" ]\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeFilter`"}, :name web.MutationObserverInit/attribute-filter, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeFilter\n  is an array of strings specifying the names of the attributes\n  values are to be monitored for changes.\n\n  `var options = {\n  attributeFilter: [ \\\"list\\\", \\\"of\\\", \\\"attribute\\\", \\\"names\\\" ]\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeFilter`"}, attribute-old-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 37, :column 7, :end-line 37, :end-column 26, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeOldValue\n  is used to specify whether or not to record the prior value of\n  altered attribute in `web.MutationRecord` objects denoting attribute\n  changes.\n\n  `var options = {\n  attributeOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeOldValue`"}, :name web.MutationObserverInit/attribute-old-value, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional attributeOldValue\n  is used to specify whether or not to record the prior value of\n  altered attribute in `web.MutationRecord` objects denoting attribute\n  changes.\n\n  `var options = {\n  attributeOldValue: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributeOldValue`"}, child-list {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 161, :column 7, :end-line 161, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional childList\n  indicates whether or not to monitor the specified node or nodes\n  the addition or removal of new child nodes.\n\n  `var options = {\n  childList: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/childList`"}, :name web.MutationObserverInit/child-list, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional childList\n  indicates whether or not to monitor the specified node or nodes\n  the addition or removal of new child nodes.\n\n  `var options = {\n  childList: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/childList`"}, set-subtree! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MutationObserverInit.cljs", :line 205, :column 7, :end-line 205, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional subtree\n  can be set to true to monitor the targeted node and all of its\n\n  `var options = {\n  subtree: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/subtree`"}, :name web.MutationObserverInit/set-subtree!, :variadic false, :file "src/web/MutationObserverInit.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.MutationObserverInit` dictionary's optional subtree\n  can be set to true to monitor the targeted node and all of its\n\n  `var options = {\n  subtree: true | false\n  }`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/subtree`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The MutationObserverInit dictionary describes the configuration\n  a mutation observer. As such, it's primarily used as the type\n  the options parameter on the `web.MutationObserver.observe()`"}
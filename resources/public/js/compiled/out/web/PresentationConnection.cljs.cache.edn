{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.PresentationConnection, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {binary-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  When a PresentationConnection object is created, its binaryType\n  attribute MUST be set to the string \\\"arraybuffer\\\". Upon getting,\n  attribute MUST return its most recent value (the value it was\n  set as). Upon setting, the user agent MUST set the IDL attribute\n  the new value.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/binaryType`"}, :name web.PresentationConnection/binary-type, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  When a PresentationConnection object is created, its binaryType\n  attribute MUST be set to the string \\\"arraybuffer\\\". Upon getting,\n  attribute MUST return its most recent value (the value it was\n  set as). Upon setting, the user agent MUST set the IDL attribute\n  the new value.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/binaryType`"}, set-state! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 81, :column 7, :end-line 81, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The state attribute reflects the presentation connection's current\n  Depending on the current PresentationConnectionState, the state\n  can hold one of the following values.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/state`"}, :name web.PresentationConnection/set-state!, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The state attribute reflects the presentation connection's current\n  Depending on the current PresentationConnectionState, the state\n  can hold one of the following values.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/state`"}, terminate {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 32, :column 7, :end-line 32, :end-column 16, :arglists (quote ([this & args])), :doc "Method.\n\n  When the terminate() method is called on a `web.PresentationConnection`,\n  user agent begins the process of terminating the presentation.\n  exact process differs depending on whether terminate() is called\n  the controlling or the presenting context.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/terminate`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.PresentationConnection/terminate, :variadic true, :file "src/web/PresentationConnection.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  When the terminate() method is called on a `web.PresentationConnection`,\n  user agent begins the process of terminating the presentation.\n  exact process differs depending on whether terminate() is called\n  the controlling or the presenting context.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/terminate`"}, state {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 70, :column 7, :end-line 70, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The state attribute reflects the presentation connection's current\n  Depending on the current PresentationConnectionState, the state\n  can hold one of the following values.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/state`"}, :name web.PresentationConnection/state, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The state attribute reflects the presentation connection's current\n  Depending on the current PresentationConnectionState, the state\n  can hold one of the following values.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/state`"}, close {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([this & args])), :doc "Method.\n\n  When the close() method is called on a `web.PresentationConnection`,\n  user agent begins the process of closing the connection by sending\n  empty closeMessage with the closeReason set to closed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/close`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.PresentationConnection/close, :variadic true, :file "src/web/PresentationConnection.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  When the close() method is called on a `web.PresentationConnection`,\n  user agent begins the process of closing the connection by sending\n  empty closeMessage with the closeReason set to closed.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/close`"}, set-binary-type! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 57, :column 7, :end-line 57, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  When a PresentationConnection object is created, its binaryType\n  attribute MUST be set to the string \\\"arraybuffer\\\". Upon getting,\n  attribute MUST return its most recent value (the value it was\n  set as). Upon setting, the user agent MUST set the IDL attribute\n  the new value.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/binaryType`"}, :name web.PresentationConnection/set-binary-type!, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  When a PresentationConnection object is created, its binaryType\n  attribute MUST be set to the string \\\"arraybuffer\\\". Upon getting,\n  attribute MUST return its most recent value (the value it was\n  set as). Upon setting, the user agent MUST set the IDL attribute\n  the new value.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/binaryType`"}, id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 116, :column 7, :end-line 116, :end-column 9, :arglists (quote ([this])), :doc "Property.\n\n  The id attribute specifies the presentation identifier of a presentation\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/id`"}, :name web.PresentationConnection/id, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The id attribute specifies the presentation identifier of a presentation\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/id`"}, send {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 19, :column 7, :end-line 19, :end-column 11, :arglists (quote ([this data])), :doc "Method.\n\n  The send() method of the `web.PresentationConnection` interface\n  a controlling browsing context to send binary or text data to\n  presenting browsing context.\n\n  `PresentationConnection.send(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/send`"}, :name web.PresentationConnection/send, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 11, :method-params ([this data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this data])), :doc "Method.\n\n  The send() method of the `web.PresentationConnection` interface\n  a controlling browsing context to send binary or text data to\n  presenting browsing context.\n\n  `PresentationConnection.send(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/send`"}, url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 92, :column 7, :end-line 92, :end-column 10, :arglists (quote ([this])), :doc "Property.\n\n  The url readonly property of the `web.PresentationConnection`\n  returns the URL used to create or reconnect to the presentation.\n\n  `var url = PresentationConnection.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/url`"}, :name web.PresentationConnection/url, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 10, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The url readonly property of the `web.PresentationConnection`\n  returns the URL used to create or reconnect to the presentation.\n\n  `var url = PresentationConnection.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/url`"}, set-id! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 125, :column 7, :end-line 125, :end-column 14, :arglists (quote ([this val])), :doc "Property.\n\n  The id attribute specifies the presentation identifier of a presentation\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/id`"}, :name web.PresentationConnection/set-id!, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 14, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The id attribute specifies the presentation identifier of a presentation\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/id`"}, set-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PresentationConnection.cljs", :line 104, :column 7, :end-line 104, :end-column 15, :arglists (quote ([this val])), :doc "Property.\n\n  The url readonly property of the `web.PresentationConnection`\n  returns the URL used to create or reconnect to the presentation.\n\n  `var url = PresentationConnection.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/url`"}, :name web.PresentationConnection/set-url!, :variadic false, :file "src/web/PresentationConnection.cljs", :end-column 15, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The url readonly property of the `web.PresentationConnection`\n  returns the URL used to create or reconnect to the presentation.\n\n  `var url = PresentationConnection.url`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PresentationConnection/url`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The PresentationConnection interface of the Presentation API\n  methods and properties for managing a single presentation. Each\n  connection is represented by a PresentationConnection object.\n  the controlling user agent and receiving user agent MUST implement"}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{keys}, :name web.NodeList, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 6, :column 7, :end-line 6, :end-column 14, :arglists (quote ([this])), :doc "Method.\n\n  The NodeList.entries() method returns an `web.iterator` allowing\n  go through all key/value pairs contained in this object. The\n  are `web.Node` objects.\n\n  `list.entries();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/entries`"}, :name web.NodeList/entries, :variadic false, :file "src/web/NodeList.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The NodeList.entries() method returns an `web.iterator` allowing\n  go through all key/value pairs contained in this object. The\n  are `web.Node` objects.\n\n  `list.entries();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/entries`"}, for-each {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 19, :column 7, :end-line 19, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The forEach() method of the `web.NodeList` interface calls the\n  given in parameter once for each value pair in the list, in insertion\n\n  `NodeList.forEach(callback[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.NodeList/for-each, :variadic true, :file "src/web/NodeList.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The forEach() method of the `web.NodeList` interface calls the\n  given in parameter once for each value pair in the list, in insertion\n\n  `NodeList.forEach(callback[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach`"}, item {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 31, :column 7, :end-line 31, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  Returns a node from a `web.NodeList` by index. This method doesn't\n  exceptions as long as you provide arguments. A value of null\n  returned if the index is out of range, and a TypeError is thrown\n  no argument is provided.\n\n  `nodeItem = nodeList.item(index)\n\n\n  nodeList is a NodeList. This is usually obtained from another DOM property or method, such as childNodes.\n  index is the index of the node to be fetched. The index is zero-based.\n  nodeItem is the indexth node in the nodeList returned by the item method.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/item`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.NodeList/item, :variadic true, :file "src/web/NodeList.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  Returns a node from a `web.NodeList` by index. This method doesn't\n  exceptions as long as you provide arguments. A value of null\n  returned if the index is out of range, and a TypeError is thrown\n  no argument is provided.\n\n  `nodeItem = nodeList.item(index)\n\n\n  nodeList is a NodeList. This is usually obtained from another DOM property or method, such as childNodes.\n  index is the index of the node to be fetched. The index is zero-based.\n  nodeItem is the indexth node in the nodeList returned by the item method.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/item`"}, keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 50, :column 7, :end-line 50, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The NodeList.keys() method returns an `web.iterator` allowing\n  go through all keys contained in this object. The keys are unsigned\n\n  `nodeList.keys();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/keys`"}, :name web.NodeList/keys, :variadic false, :file "src/web/NodeList.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The NodeList.keys() method returns an `web.iterator` allowing\n  go through all keys contained in this object. The keys are unsigned\n\n  `nodeList.keys();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/keys`"}, values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 62, :column 7, :end-line 62, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The NodeList.values() method returns an `web.iterator` allowing\n  go through all values contained in this object. The values are\n  objects.\n\n  `nodeList.values();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/values`"}, :name web.NodeList/values, :variadic false, :file "src/web/NodeList.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The NodeList.values() method returns an `web.iterator` allowing\n  go through all values contained in this object. The values are\n  objects.\n\n  `nodeList.values();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/values`"}, length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 75, :column 7, :end-line 75, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The NodeList.length property returns the number of items in a\n\n  `numItems = nodeList.length\n\n\n  numItems is an integer value representing the number of items in a NodeList.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/length`"}, :name web.NodeList/length, :variadic false, :file "src/web/NodeList.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The NodeList.length property returns the number of items in a\n\n  `numItems = nodeList.length\n\n\n  numItems is an integer value representing the number of items in a NodeList.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/length`"}, set-length! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/NodeList.cljs", :line 89, :column 7, :end-line 89, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The NodeList.length property returns the number of items in a\n\n  `numItems = nodeList.length\n\n\n  numItems is an integer value representing the number of items in a NodeList.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/length`"}, :name web.NodeList/set-length!, :variadic false, :file "src/web/NodeList.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The NodeList.length property returns the number of items in a\n\n  `numItems = nodeList.length\n\n\n  numItems is an integer value representing the number of items in a NodeList.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/NodeList/length`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "NodeList objects are collections of nodes, usually returned by\n  such as `web.Node.childNodes` and methods such as `web.document.querySelectorAll()`."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.TextTrackList, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-track-by-id {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 7, :column 7, :end-line 7, :end-column 22, :arglists (quote ([this id])), :doc "Method.\n\n  The `web.TextTrackList` method getTrackById() returns the first\n  object from the track list whose id matches the specified string.\n\n  `var theTrack = TextTrackList.getTrackById(id);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/getTrackById`"}, :name web.TextTrackList/get-track-by-id, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 22, :method-params ([this id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this id])), :doc "Method.\n\n  The `web.TextTrackList` method getTrackById() returns the first\n  object from the track list whose id matches the specified string.\n\n  `var theTrack = TextTrackList.getTrackById(id);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/getTrackById`"}, length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 19, :column 7, :end-line 19, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `web.TextTrackList` property length returns the\n  of entries in the TextTrackList, each of which is a `web.TextTrack`\n  one track in the media element.\n\n  `var trackCount = TextTrackList.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/length`"}, :name web.TextTrackList/length, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The read-only `web.TextTrackList` property length returns the\n  of entries in the TextTrackList, each of which is a `web.TextTrack`\n  one track in the media element.\n\n  `var trackCount = TextTrackList.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/length`"}, onaddtrack {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 32, :column 7, :end-line 32, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  The `web.TextTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose text tracks the\n  represents.\n\n  `TextTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onaddtrack`"}, :name web.TextTrackList/onaddtrack, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.TextTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose text tracks the\n  represents.\n\n  `TextTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onaddtrack`"}, set-onaddtrack! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 46, :column 7, :end-line 46, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.TextTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose text tracks the\n  represents.\n\n  `TextTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onaddtrack`"}, :name web.TextTrackList/set-onaddtrack!, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.TextTrackList` property onaddtrack is an event handler\n  is called when the addtrack event occurs, indicating that a new\n  track has been added to the media element whose text tracks the\n  represents.\n\n  `TextTrackList.onaddtrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onaddtrack`"}, onchange {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 60, :column 7, :end-line 60, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The `web.TextTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that a change\n  occurred on a `web.TextTrack` in the VideoTrackList.\n\n  `TextTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onchange`"}, :name web.TextTrackList/onchange, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.TextTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that a change\n  occurred on a `web.TextTrack` in the VideoTrackList.\n\n  `TextTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onchange`"}, set-onchange! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 73, :column 7, :end-line 73, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.TextTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that a change\n  occurred on a `web.TextTrack` in the VideoTrackList.\n\n  `TextTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onchange`"}, :name web.TextTrackList/set-onchange!, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.TextTrackList` property onchange is an event handler\n  is called when the change event occurs, indicating that a change\n  occurred on a `web.TextTrack` in the VideoTrackList.\n\n  `TextTrackList.onchange = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onchange`"}, onremovetrack {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 86, :column 7, :end-line 86, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The `web.TextTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that a text track has\n  removed from the media element, and therefore also from the TextTrackList.\n\n  `TextTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onremovetrack`"}, :name web.TextTrackList/onremovetrack, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The `web.TextTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that a text track has\n  removed from the media element, and therefore also from the TextTrackList.\n\n  `TextTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onremovetrack`"}, set-onremovetrack! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/TextTrackList.cljs", :line 99, :column 7, :end-line 99, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.TextTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that a text track has\n  removed from the media element, and therefore also from the TextTrackList.\n\n  `TextTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onremovetrack`"}, :name web.TextTrackList/set-onremovetrack!, :variadic false, :file "src/web/TextTrackList.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 99, :end-line 99, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The `web.TextTrackList` onremovetrack event handler is called\n  the removetrack event occurs, indicating that a text track has\n  removed from the media element, and therefore also from the TextTrackList.\n\n  `TextTrackList.onremovetrack = eventHandler;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList/onremovetrack`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The TextTrackList interface is used to represent a list of the\n  tracks defined by the `web.<track>` element, with each track\n  by a separate `web.textTrack` object in the list."}
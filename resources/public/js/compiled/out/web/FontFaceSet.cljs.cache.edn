{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{load}, :name web.FontFaceSet, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {check {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FontFaceSet.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([this & args])), :doc "Method.\n\n  A `web.Boolean` that is true if the font list is available\n\n  `bool = aFontFaceSet.check(font);\n  bool = aFontFaceSet.check(font, text);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/check`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.FontFaceSet/check, :variadic true, :file "src/web/FontFaceSet.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  A `web.Boolean` that is true if the font list is available\n\n  `bool = aFontFaceSet.check(font);\n  bool = aFontFaceSet.check(font, text);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/check`"}, load {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FontFaceSet.cljs", :line 18, :column 7, :end-line 18, :end-column 11, :arglists (quote ([this & args])), :doc "Method.\n\n  A `web.Promise` of an `web.Array` of `web.FontFace` loaded. The\n  is fulfilled when all the fonts are loaded; it is rejected if\n  of the fonts failed to load.\n\n  `result = aFontFaceSet.load(font);\n\n  result = aFontFaceSet.load(font, text);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/load`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.FontFaceSet/load, :variadic true, :file "src/web/FontFaceSet.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  A `web.Promise` of an `web.Array` of `web.FontFace` loaded. The\n  is fulfilled when all the fonts are loaded; it is rejected if\n  of the fonts failed to load.\n\n  `result = aFontFaceSet.load(font);\n\n  result = aFontFaceSet.load(font, text);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/load`"}, ready {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FontFaceSet.cljs", :line 33, :column 7, :end-line 33, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The ready readonly property of the `web.FontFaceSet` interface\n  a `web.Promise` that resolves to the given `web.FontFaceSet`.\n\n  `fontFaceSet.ready.then(function(fontFaceSet) {\n  // ...\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/ready`"}, :name web.FontFaceSet/ready, :variadic false, :file "src/web/FontFaceSet.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The ready readonly property of the `web.FontFaceSet` interface\n  a `web.Promise` that resolves to the given `web.FontFaceSet`.\n\n  `fontFaceSet.ready.then(function(fontFaceSet) {\n  // ...\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/ready`"}, set-ready! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/FontFaceSet.cljs", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The ready readonly property of the `web.FontFaceSet` interface\n  a `web.Promise` that resolves to the given `web.FontFaceSet`.\n\n  `fontFaceSet.ready.then(function(fontFaceSet) {\n  // ...\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/ready`"}, :name web.FontFaceSet/set-ready!, :variadic false, :file "src/web/FontFaceSet.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The ready readonly property of the `web.FontFaceSet` interface\n  a `web.Promise` that resolves to the given `web.FontFaceSet`.\n\n  `fontFaceSet.ready.then(function(fontFaceSet) {\n  // ...\n  });`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/ready`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The FontFaceSet interface of the CSS Font Loading API manages\n  loading of font-faces and querying of their download status."}
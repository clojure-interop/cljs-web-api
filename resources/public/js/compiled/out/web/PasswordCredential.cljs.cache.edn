{:rename-macros {}, :renames {}, :externs {PasswordCredential {}}, :use-macros {}, :excludes #{name}, :name web.PasswordCredential, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {set-id-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 105, :column 7, :end-line 105, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The idName property of the `web.PasswordCredential` interface\n  a `web.USVString`, representing the name that will be used for\n  ID field\n\n  `var idName = PasswordCredential.idName\n  PasswordCredential.idName = \\\"userID\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/idName`"}, :name web.PasswordCredential/set-id-name!, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The idName property of the `web.PasswordCredential` interface\n  a `web.USVString`, representing the name that will be used for\n  ID field\n\n  `var idName = PasswordCredential.idName\n  PasswordCredential.idName = \\\"userID\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/idName`"}, password-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 169, :column 7, :end-line 169, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The passwordName property of the `web.PasswordCredential` interface\n  a `web.USVString`, depicting the name used by the password field\n\n  `var passwordName = PasswordCredential.passwordName\n  PasswordCredential.passwordName = \\\"passcode\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/passwordName`"}, :name web.PasswordCredential/password-name, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The passwordName property of the `web.PasswordCredential` interface\n  a `web.USVString`, depicting the name used by the password field\n\n  `var passwordName = PasswordCredential.passwordName\n  PasswordCredential.passwordName = \\\"passcode\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/passwordName`"}, id-name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 91, :column 7, :end-line 91, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The idName property of the `web.PasswordCredential` interface\n  a `web.USVString`, representing the name that will be used for\n  ID field\n\n  `var idName = PasswordCredential.idName\n  PasswordCredential.idName = \\\"userID\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/idName`"}, :name web.PasswordCredential/id-name, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The idName property of the `web.PasswordCredential` interface\n  a `web.USVString`, representing the name that will be used for\n  ID field\n\n  `var idName = PasswordCredential.idName\n  PasswordCredential.idName = \\\"userID\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/idName`"}, set-icon-url! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 77, :column 7, :end-line 77, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The iconURL read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing a URL pointing to an image\n  an icon. This image is intended for display in a credential chooser.\n  URL must be accessible without authentication.\n\n  `url =passwordCredential.iconURL`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/iconURL`"}, :name web.PasswordCredential/set-icon-url!, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The iconURL read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing a URL pointing to an image\n  an icon. This image is intended for display in a credential chooser.\n  URL must be accessible without authentication.\n\n  `url =passwordCredential.iconURL`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/iconURL`"}, additional-data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 31, :column 7, :end-line 31, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The additionalData property of the `web.PasswordCredential` interface\n  one of a `web.FormData` instance, a `web.URLSearchParams` instance,\n  null.\n\n  `passwordCredential.additionalData = formData\n  formData = passwordCredential.additionalData\n  passwordCredential.additionalData = urlSearchParams\n  ulrSearchParams = passwordCredential.additionalData`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/additionalData`"}, :name web.PasswordCredential/additional-data, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The additionalData property of the `web.PasswordCredential` interface\n  one of a `web.FormData` instance, a `web.URLSearchParams` instance,\n  null.\n\n  `passwordCredential.additionalData = formData\n  formData = passwordCredential.additionalData\n  passwordCredential.additionalData = urlSearchParams\n  ulrSearchParams = passwordCredential.additionalData`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/additionalData`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 132, :column 7, :end-line 132, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.PasswordCredential` interface\n  a `web.USVSTring` containing a human-readable public name for\n  in a credential chooser.\n\n  `name =passwordCredential.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/name`"}, :name web.PasswordCredential/set-name!, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `web.PasswordCredential` interface\n  a `web.USVSTring` containing a human-readable public name for\n  in a credential chooser.\n\n  `name =passwordCredential.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/name`"}, password {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 145, :column 7, :end-line 145, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The password read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing the password of the credential.\n\n  `password =passwordCredential.password`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/password`"}, :name web.PasswordCredential/password, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The password read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing the password of the credential.\n\n  `password =passwordCredential.password`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/password`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 119, :column 7, :end-line 119, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.PasswordCredential` interface\n  a `web.USVSTring` containing a human-readable public name for\n  in a credential chooser.\n\n  `name =passwordCredential.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/name`"}, :name web.PasswordCredential/name, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `web.PasswordCredential` interface\n  a `web.USVSTring` containing a human-readable public name for\n  in a credential chooser.\n\n  `name =passwordCredential.name`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/name`"}, set-password-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 182, :column 7, :end-line 182, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The passwordName property of the `web.PasswordCredential` interface\n  a `web.USVString`, depicting the name used by the password field\n\n  `var passwordName = PasswordCredential.passwordName\n  PasswordCredential.passwordName = \\\"passcode\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/passwordName`"}, :name web.PasswordCredential/set-password-name!, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The passwordName property of the `web.PasswordCredential` interface\n  a `web.USVString`, depicting the name used by the password field\n\n  `var passwordName = PasswordCredential.passwordName\n  PasswordCredential.passwordName = \\\"passcode\\\"`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/passwordName`"}, icon-url {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 63, :column 7, :end-line 63, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The iconURL read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing a URL pointing to an image\n  an icon. This image is intended for display in a credential chooser.\n  URL must be accessible without authentication.\n\n  `url =passwordCredential.iconURL`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/iconURL`"}, :name web.PasswordCredential/icon-url, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The iconURL read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing a URL pointing to an image\n  an icon. This image is intended for display in a credential chooser.\n  URL must be accessible without authentication.\n\n  `url =passwordCredential.iconURL`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/iconURL`"}, set-additional-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 47, :column 7, :end-line 47, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The additionalData property of the `web.PasswordCredential` interface\n  one of a `web.FormData` instance, a `web.URLSearchParams` instance,\n  null.\n\n  `passwordCredential.additionalData = formData\n  formData = passwordCredential.additionalData\n  passwordCredential.additionalData = urlSearchParams\n  ulrSearchParams = passwordCredential.additionalData`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/additionalData`"}, :name web.PasswordCredential/set-additional-data!, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The additionalData property of the `web.PasswordCredential` interface\n  one of a `web.FormData` instance, a `web.URLSearchParams` instance,\n  null.\n\n  `passwordCredential.additionalData = formData\n  formData = passwordCredential.additionalData\n  passwordCredential.additionalData = urlSearchParams\n  ulrSearchParams = passwordCredential.additionalData`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/additionalData`"}, set-password! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 157, :column 7, :end-line 157, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The password read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing the password of the credential.\n\n  `password =passwordCredential.password`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/password`"}, :name web.PasswordCredential/set-password!, :variadic false, :file "src/web/PasswordCredential.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The password read-only property of the `web.PasswordCredential`\n  returns a `web.USVString` containing the password of the credential.\n\n  `password =passwordCredential.password`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/password`"}, constructor {:name web.PasswordCredential/constructor, :file "src/web/PasswordCredential.cljs", :line 8, :column 1, :end-line 8, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/PasswordCredential.cljs", :line 8, :column 6, :end-line 8, :end-column 17}, :doc "Constructor.\n\n  The PasswordCredential constructor creates a new `web.PasswordCredential` object.\n\n  Either of the following:\n\n\n  passwordCredentialData\n  A PasswordCredentialData dictionary containing the following fields:\n\n  iconURL: (Optional) the URL of a user's avatar image.\n  id: The ID of the user signing in.\n  name: (Optional) The name of the user signing in.\n  password: The password of the user signing in.\n\n\n  htmlFormElement\n  A reference to an `html.HTMLFormElement` with appropriate input fields. The form should, at the very least, contain an id and password. It could also require a CSRF token.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/PasswordCredential/PasswordCredential`", :tag js}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The interface of the Credential Management API provides information\n  a username/password pair. In supporting browsers an instance\n  this class may be passed in the credential member of the init\n  for global `web.fetch`."}
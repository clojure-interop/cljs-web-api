{:rename-macros {}, :renames {}, :externs {ImageData {}}, :use-macros {}, :excludes #{}, :name web.ImageData, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name web.ImageData/constructor, :file "src/web/ImageData.cljs", :line 9, :column 1, :end-line 9, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 9, :column 6, :end-line 9, :end-column 17}, :doc "Constructor.\n\n  The ImageData() constructor returns a newly instantiated `web.ImageData` object built from the typed array given and having the specified width and height.\n\n  array Optional\n  A `web.Uint8ClampedArray` containing the underlying pixel representation of the image. If no such array is given, an image with a black rectangle of the specified width and height will be created.\n  width\n  An unsigned long representing the width of the image.\n  height\n  An unsigned long representing the height of the image. This value is optional if an array is given: the height will be inferred from the array's size and the given width.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/ImageData`", :tag js}, data {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 24, :column 7, :end-line 24, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The readonly ImageData.data property returns a `web.Uint8ClampedArray`\n  contains the `web.ImageData` object's pixel data. Data is stored\n  a one-dimensional array in the RGBA order, with integer values\n  0 and 255 (inclusive).\n\n  `imageData.data`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/data`"}, :name web.ImageData/data, :variadic false, :file "src/web/ImageData.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The readonly ImageData.data property returns a `web.Uint8ClampedArray`\n  contains the `web.ImageData` object's pixel data. Data is stored\n  a one-dimensional array in the RGBA order, with integer values\n  0 and 255 (inclusive).\n\n  `imageData.data`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/data`"}, set-data! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 38, :column 7, :end-line 38, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The readonly ImageData.data property returns a `web.Uint8ClampedArray`\n  contains the `web.ImageData` object's pixel data. Data is stored\n  a one-dimensional array in the RGBA order, with integer values\n  0 and 255 (inclusive).\n\n  `imageData.data`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/data`"}, :name web.ImageData/set-data!, :variadic false, :file "src/web/ImageData.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The readonly ImageData.data property returns a `web.Uint8ClampedArray`\n  contains the `web.ImageData` object's pixel data. Data is stored\n  a one-dimensional array in the RGBA order, with integer values\n  0 and 255 (inclusive).\n\n  `imageData.data`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/data`"}, height {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 52, :column 7, :end-line 52, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The readonly ImageData.height property returns the number of\n  in the `web.ImageData` object.\n\n  `imageData.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/height`"}, :name web.ImageData/height, :variadic false, :file "src/web/ImageData.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The readonly ImageData.height property returns the number of\n  in the `web.ImageData` object.\n\n  `imageData.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/height`"}, set-height! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 64, :column 7, :end-line 64, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The readonly ImageData.height property returns the number of\n  in the `web.ImageData` object.\n\n  `imageData.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/height`"}, :name web.ImageData/set-height!, :variadic false, :file "src/web/ImageData.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The readonly ImageData.height property returns the number of\n  in the `web.ImageData` object.\n\n  `imageData.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/height`"}, width {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 76, :column 7, :end-line 76, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The readonly ImageData.width property returns the number of pixels\n  row in the `web.ImageData` object.\n\n  `imageData.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/width`"}, :name web.ImageData/width, :variadic false, :file "src/web/ImageData.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The readonly ImageData.width property returns the number of pixels\n  row in the `web.ImageData` object.\n\n  `imageData.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/width`"}, set-width! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/ImageData.cljs", :line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The readonly ImageData.width property returns the number of pixels\n  row in the `web.ImageData` object.\n\n  `imageData.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/width`"}, :name web.ImageData/set-width!, :variadic false, :file "src/web/ImageData.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The readonly ImageData.width property returns the number of pixels\n  row in the `web.ImageData` object.\n\n  `imageData.width`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/ImageData/width`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The ImageData interface represents the underlying pixel data\n  an area of a `web.<canvas>` element. It is created using the\n  constructor or creator methods on the `web.CanvasRenderingContext2D`\n  associated with a canvas: `web.createImageData()` and `web.getImageData()`.\n  can also be used to set a part of the canvas by using `web.putImageData()`."}
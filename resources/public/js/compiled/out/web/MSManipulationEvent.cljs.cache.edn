{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.MSManipulationEvent, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {init-ms-manipulation-event {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/MSManipulationEvent.cljs", :line 6, :column 7, :end-line 6, :end-column 33, :arglists (quote ([this & args])), :doc "Method.\n\n  The initMSManipulationEvent method is used to create a `web.MSManipulationEvent`\n  can be called from JavaScript.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MSManipulationEvent/initMSManipulationEvent`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.MSManipulationEvent/init-ms-manipulation-event, :variadic true, :file "src/web/MSManipulationEvent.cljs", :end-column 33, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The initMSManipulationEvent method is used to create a `web.MSManipulationEvent`\n  can be called from JavaScript.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/MSManipulationEvent/initMSManipulationEvent`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "MSManipulationEvent provides contextual information when contact\n  made to the screen and an element is manipulated."}
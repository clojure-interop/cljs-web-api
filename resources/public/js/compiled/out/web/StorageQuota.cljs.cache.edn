{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.StorageQuota, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {query-info {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StorageQuota.cljs", :line 7, :column 7, :end-line 7, :end-column 17, :arglists (quote ([this & args])), :doc "Method.\n\n  The queryInfo() property of the `web.StorageQuota` interface\n  a `web.StorageInfo` object containting the current data usage\n  available quota information for the application.\n\n  `StorageQuota.queryInfo().then(function(storageInfo) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/queryInfo`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.StorageQuota/query-info, :variadic true, :file "src/web/StorageQuota.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The queryInfo() property of the `web.StorageQuota` interface\n  a `web.StorageInfo` object containting the current data usage\n  available quota information for the application.\n\n  `StorageQuota.queryInfo().then(function(storageInfo) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/queryInfo`"}, request-persistent-quota {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StorageQuota.cljs", :line 20, :column 7, :end-line 20, :end-column 31, :arglists (quote ([this & args])), :doc "Method.\n\n  The requestPersistentQuota() property of the `web.StorageQuota`\n  requests persistent storage for the requesting application and\n  a `web.Promise` to an instance of `web.StorageInfo`.\n\n  `StorageQuota.requestPersistentQuota().then(function(storageInfo) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/requestPersistentQuota`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name web.StorageQuota/request-persistent-quota, :variadic true, :file "src/web/StorageQuota.cljs", :end-column 31, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The requestPersistentQuota() property of the `web.StorageQuota`\n  requests persistent storage for the requesting application and\n  a `web.Promise` to an instance of `web.StorageInfo`.\n\n  `StorageQuota.requestPersistentQuota().then(function(storageInfo) { ... })`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/requestPersistentQuota`"}, supported-types {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StorageQuota.cljs", :line 33, :column 7, :end-line 33, :end-column 22, :arglists (quote ([this])), :doc "Property.\n\n  The supportedTypes read-only property of the `web.StorageQuota`\n  returns a list of the available storage types.\n\n  `var storageTypes = StorageQuota.supportedTypes`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/supportedTypes`"}, :name web.StorageQuota/supported-types, :variadic false, :file "src/web/StorageQuota.cljs", :end-column 22, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The supportedTypes read-only property of the `web.StorageQuota`\n  returns a list of the available storage types.\n\n  `var storageTypes = StorageQuota.supportedTypes`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/supportedTypes`"}, set-supported-types! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/StorageQuota.cljs", :line 45, :column 7, :end-line 45, :end-column 27, :arglists (quote ([this val])), :doc "Property.\n\n  The supportedTypes read-only property of the `web.StorageQuota`\n  returns a list of the available storage types.\n\n  `var storageTypes = StorageQuota.supportedTypes`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/supportedTypes`"}, :name web.StorageQuota/set-supported-types!, :variadic false, :file "src/web/StorageQuota.cljs", :end-column 27, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The supportedTypes read-only property of the `web.StorageQuota`\n  returns a list of the available storage types.\n\n  `var storageTypes = StorageQuota.supportedTypes`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/StorageQuota/supportedTypes`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The storageQuota property of the `web.Navigator` interface of\n  Quota Management API provides means to query and request storage\n  and quota information."}
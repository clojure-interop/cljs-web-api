{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.XDomainRequest, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {timeout {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 170, :column 7, :end-line 170, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  Gets or sets the amount of time in milliseconds until an `web.XDomainRequest`\n  out.\n\n  `xdr.timeout = milliseconds;\n\n  The default value is 0.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/timeout`"}, :name web.XDomainRequest/timeout, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Gets or sets the amount of time in milliseconds until an `web.XDomainRequest`\n  out.\n\n  `xdr.timeout = milliseconds;\n\n  The default value is 0.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/timeout`"}, set-onprogress! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 107, :column 7, :end-line 107, :end-column 22, :arglists (quote ([this val])), :doc "Property.\n\n  This method is called periodically as an event handler for progress\n  on `web.XDomainRequest`s, so that code can monitor progress while\n  content.\n\n  `xdr.onprogress = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onprogress`"}, :name web.XDomainRequest/set-onprogress!, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 22, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  This method is called periodically as an event handler for progress\n  on `web.XDomainRequest`s, so that code can monitor progress while\n  content.\n\n  `xdr.onprogress = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onprogress`"}, open {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([this method url])), :doc "Method.\n\n  Opens an `web.XDomainRequest` which is configured to use a given\n  (GET/POST) and URL.\n\n  `xdr.open(method, url);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/open`"}, :name web.XDomainRequest/open, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 11, :method-params ([this method url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this method url])), :doc "Method.\n\n  Opens an `web.XDomainRequest` which is configured to use a given\n  (GET/POST) and URL.\n\n  `xdr.open(method, url);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/open`"}, onprogress {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 94, :column 7, :end-line 94, :end-column 17, :arglists (quote ([this])), :doc "Property.\n\n  This method is called periodically as an event handler for progress\n  on `web.XDomainRequest`s, so that code can monitor progress while\n  content.\n\n  `xdr.onprogress = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onprogress`"}, :name web.XDomainRequest/onprogress, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 17, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  This method is called periodically as an event handler for progress\n  on `web.XDomainRequest`s, so that code can monitor progress while\n  content.\n\n  `xdr.onprogress = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onprogress`"}, set-onerror! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 56, :column 7, :end-line 56, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  An event handler which is called when an `web.XDomainRequest`\n  an error.\n\n  `xdr.onerror = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onerror`"}, :name web.XDomainRequest/set-onerror!, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An event handler which is called when an `web.XDomainRequest`\n  an error.\n\n  `xdr.onerror = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onerror`"}, ontimeout {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 120, :column 7, :end-line 120, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  An event handler which is called when a pending `web.XDomainRequest`\n  out.\n\n  `xdr.ontimeout = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/ontimeout`"}, :name web.XDomainRequest/ontimeout, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An event handler which is called when a pending `web.XDomainRequest`\n  out.\n\n  `xdr.ontimeout = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/ontimeout`"}, onerror {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 44, :column 7, :end-line 44, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  An event handler which is called when an `web.XDomainRequest`\n  an error.\n\n  `xdr.onerror = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onerror`"}, :name web.XDomainRequest/onerror, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An event handler which is called when an `web.XDomainRequest`\n  an error.\n\n  `xdr.onerror = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onerror`"}, set-onload! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 81, :column 7, :end-line 81, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  An event handler for when an `web.XDomainRequest` has finished\n  the response from the server. You can find the entire server\n  in the `web.XDomainRequest.responseText` property.\n\n  `xdr.onload = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onload`"}, :name web.XDomainRequest/set-onload!, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An event handler for when an `web.XDomainRequest` has finished\n  the response from the server. You can find the entire server\n  in the `web.XDomainRequest.responseText` property.\n\n  `xdr.onload = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onload`"}, set-timeout! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 184, :column 7, :end-line 184, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  Gets or sets the amount of time in milliseconds until an `web.XDomainRequest`\n  out.\n\n  `xdr.timeout = milliseconds;\n\n  The default value is 0.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/timeout`"}, :name web.XDomainRequest/set-timeout!, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Gets or sets the amount of time in milliseconds until an `web.XDomainRequest`\n  out.\n\n  `xdr.timeout = milliseconds;\n\n  The default value is 0.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/timeout`"}, abort {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 9, :column 7, :end-line 9, :end-column 12, :arglists (quote ([this])), :doc "Method.\n\n  Aborts an `web.XDomainRequest`.\n\n  `xdr.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/abort`"}, :name web.XDomainRequest/abort, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  Aborts an `web.XDomainRequest`.\n\n  `xdr.abort();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/abort`"}, onload {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 68, :column 7, :end-line 68, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  An event handler for when an `web.XDomainRequest` has finished\n  the response from the server. You can find the entire server\n  in the `web.XDomainRequest.responseText` property.\n\n  `xdr.onload = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onload`"}, :name web.XDomainRequest/onload, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  An event handler for when an `web.XDomainRequest` has finished\n  the response from the server. You can find the entire server\n  in the `web.XDomainRequest.responseText` property.\n\n  `xdr.onload = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/onload`"}, set-ontimeout! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 132, :column 7, :end-line 132, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  An event handler which is called when a pending `web.XDomainRequest`\n  out.\n\n  `xdr.ontimeout = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/ontimeout`"}, :name web.XDomainRequest/set-ontimeout!, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 132, :end-line 132, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  An event handler which is called when a pending `web.XDomainRequest`\n  out.\n\n  `xdr.ontimeout = funcRef;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/ontimeout`"}, response-text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 144, :column 7, :end-line 144, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  Returns the response body of an `web.XDomainRequest` as a string.\n\n  `var response = xdr.responseText;\n\n  This sets response to contain the response body of the request, as a string.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/responseText`"}, :name web.XDomainRequest/response-text, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  Returns the response body of an `web.XDomainRequest` as a string.\n\n  `var response = xdr.responseText;\n\n  This sets response to contain the response body of the request, as a string.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/responseText`"}, send {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 32, :column 7, :end-line 32, :end-column 11, :arglists (quote ([this data])), :doc "Method.\n\n  Sends an `web.XDomainRequest` which has previously been opened\n  `web.XDomainRequest.open()`.\n\n  `xdr.send(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/send`"}, :name web.XDomainRequest/send, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 11, :method-params ([this data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this data])), :doc "Method.\n\n  Sends an `web.XDomainRequest` which has previously been opened\n  `web.XDomainRequest.open()`.\n\n  `xdr.send(data);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/send`"}, set-response-text! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/XDomainRequest.cljs", :line 157, :column 7, :end-line 157, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the response body of an `web.XDomainRequest` as a string.\n\n  `var response = xdr.responseText;\n\n  This sets response to contain the response body of the request, as a string.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/responseText`"}, :name web.XDomainRequest/set-response-text!, :variadic false, :file "src/web/XDomainRequest.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  Returns the response body of an `web.XDomainRequest` as a string.\n\n  `var response = xdr.responseText;\n\n  This sets response to contain the response body of the request, as a string.`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/XDomainRequest/responseText`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "XDomainRequest is an implementation of HTTP access control (CORS)\n  worked in Internet Explorer 8 and 9. It was removed in Internet\n  10 in favor of using XMLHttpRequest with proper CORS; if you\n  targeting Internet Explorer 10 or later, or wish to support any\n  browser, you need to use standard HTTP access control."}
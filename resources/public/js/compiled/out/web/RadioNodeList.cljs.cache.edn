{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name web.RadioNodeList, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/RadioNodeList.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  If the underlying element collection contains radio buttons,\n  RadioNodeList.value property represents the checked radio button.\n  retrieving the value property, the value of the currently checked\n  button is returned as a string. If the collection does not contain\n  radio buttons or none of the radio buttons in the collection\n  in checked state, the empty string is returned. On setting the\n  property, the first radio button input element whose value property\n  equal to the new value will be set to checked.\n\n  `value = radioNodeList.value;\n  radioNodeList.value = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RadioNodeList/value`"}, :name web.RadioNodeList/value, :variadic false, :file "src/web/RadioNodeList.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  If the underlying element collection contains radio buttons,\n  RadioNodeList.value property represents the checked radio button.\n  retrieving the value property, the value of the currently checked\n  button is returned as a string. If the collection does not contain\n  radio buttons or none of the radio buttons in the collection\n  in checked state, the empty string is returned. On setting the\n  property, the first radio button input element whose value property\n  equal to the new value will be set to checked.\n\n  `value = radioNodeList.value;\n  radioNodeList.value = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RadioNodeList/value`"}, set-value! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/web/RadioNodeList.cljs", :line 25, :column 7, :end-line 25, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  If the underlying element collection contains radio buttons,\n  RadioNodeList.value property represents the checked radio button.\n  retrieving the value property, the value of the currently checked\n  button is returned as a string. If the collection does not contain\n  radio buttons or none of the radio buttons in the collection\n  in checked state, the empty string is returned. On setting the\n  property, the first radio button input element whose value property\n  equal to the new value will be set to checked.\n\n  `value = radioNodeList.value;\n  radioNodeList.value = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RadioNodeList/value`"}, :name web.RadioNodeList/set-value!, :variadic false, :file "src/web/RadioNodeList.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  If the underlying element collection contains radio buttons,\n  RadioNodeList.value property represents the checked radio button.\n  retrieving the value property, the value of the currently checked\n  button is returned as a string. If the collection does not contain\n  radio buttons or none of the radio buttons in the collection\n  in checked state, the empty string is returned. On setting the\n  property, the first radio button input element whose value property\n  equal to the new value will be set to checked.\n\n  `value = radioNodeList.value;\n  radioNodeList.value = string;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/RadioNodeList/value`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The RadioNodeList interface represents a collection of radio\n  in a `web.<form>` or a `web.<fieldset>` element."}
{:rename-macros {}, :renames {}, :externs {DOMException {}}, :use-macros {}, :excludes #{name}, :name dom.DOMException, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name dom.DOMException/constructor, :file "src/dom/DOMException.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The DOMException() constructor returns a DOMException object with a specified message and name.\n\n  message Optional\n  A description of the exception. If not present, the empty string '' is used.\n  name Optional\n  Returns a `dom.DOMString` that contains one of the strings associated with an error constant.\n\n  Return value\n\n  `dom.DOMException`\n  A newly created `dom.DOMException` object.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/DOMException`", :tag js}, code {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 25, :column 7, :end-line 25, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The code read-only property of the `dom.DOMException` interface\n  a short that contains one of the error code constants, or 0 if\n  match. This field is used for historical reasons. New DOM exceptions\n  use this anymore: they put this info in the `dom.DOMException.name`\n\n  `var domExceptionCode = domExceptionInstance.code;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/code`"}, :name dom.DOMException/code, :variadic false, :file "src/dom/DOMException.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The code read-only property of the `dom.DOMException` interface\n  a short that contains one of the error code constants, or 0 if\n  match. This field is used for historical reasons. New DOM exceptions\n  use this anymore: they put this info in the `dom.DOMException.name`\n\n  `var domExceptionCode = domExceptionInstance.code;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/code`"}, set-code! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 39, :column 7, :end-line 39, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The code read-only property of the `dom.DOMException` interface\n  a short that contains one of the error code constants, or 0 if\n  match. This field is used for historical reasons. New DOM exceptions\n  use this anymore: they put this info in the `dom.DOMException.name`\n\n  `var domExceptionCode = domExceptionInstance.code;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/code`"}, :name dom.DOMException/set-code!, :variadic false, :file "src/dom/DOMException.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The code read-only property of the `dom.DOMException` interface\n  a short that contains one of the error code constants, or 0 if\n  match. This field is used for historical reasons. New DOM exceptions\n  use this anymore: they put this info in the `dom.DOMException.name`\n\n  `var domExceptionCode = domExceptionInstance.code;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/code`"}, message {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 53, :column 7, :end-line 53, :end-column 14, :arglists (quote ([this])), :doc "Property.\n\n  The message read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` representing a message or description associated\n  the given error name.\n\n  `var domExceptionMessage = domExceptionInstance.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/message`"}, :name dom.DOMException/message, :variadic false, :file "src/dom/DOMException.cljs", :end-column 14, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The message read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` representing a message or description associated\n  the given error name.\n\n  `var domExceptionMessage = domExceptionInstance.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/message`"}, set-message! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 66, :column 7, :end-line 66, :end-column 19, :arglists (quote ([this val])), :doc "Property.\n\n  The message read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` representing a message or description associated\n  the given error name.\n\n  `var domExceptionMessage = domExceptionInstance.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/message`"}, :name dom.DOMException/set-message!, :variadic false, :file "src/dom/DOMException.cljs", :end-column 19, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The message read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` representing a message or description associated\n  the given error name.\n\n  `var domExceptionMessage = domExceptionInstance.message;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/message`"}, name {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 79, :column 7, :end-line 79, :end-column 11, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` that contains one of the strings associated\n  an error name.\n\n  `var domExceptionName = domExceptionInstance.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/name`"}, :name dom.DOMException/name, :variadic false, :file "src/dom/DOMException.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The name read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` that contains one of the strings associated\n  an error name.\n\n  `var domExceptionName = domExceptionInstance.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/name`"}, set-name! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/dom/DOMException.cljs", :line 92, :column 7, :end-line 92, :end-column 16, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` that contains one of the strings associated\n  an error name.\n\n  `var domExceptionName = domExceptionInstance.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/name`"}, :name dom.DOMException/set-name!, :variadic false, :file "src/dom/DOMException.cljs", :end-column 16, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The name read-only property of the `dom.DOMException` interface\n  a `dom.DOMString` that contains one of the strings associated\n  an error name.\n\n  `var domExceptionName = domExceptionInstance.name;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/DOMException/name`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The DOMException interface represents an abnormal event (called\n  exception) which occurs as a result of calling a method or accessing\n  property of a web API."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name svg.SVGImageElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {decoding {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 17, :column 7, :end-line 17, :end-column 15, :arglists (quote ([this])), :doc "Property.\n\n  The decoding property of the `svg.SVGImageElement` interface\n  a hint given to the browser on how it should decode the image.\n\n  `var refStr = SVGImageElement.decoding\n  SVGImageElement.decoding = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/decoding`"}, :name svg.SVGImageElement/decoding, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 15, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The decoding property of the `svg.SVGImageElement` interface\n  a hint given to the browser on how it should decode the image.\n\n  `var refStr = SVGImageElement.decoding\n  SVGImageElement.decoding = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/decoding`"}, x {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 121, :column 7, :end-line 121, :end-column 8, :arglists (quote ([this])), :doc "Property.\n\n  The x read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the x attribute of\n  given `web.<image>` element.\n\n  `var x = svgImageElement.x;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/x`"}, :name svg.SVGImageElement/x, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The x read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the x attribute of\n  given `web.<image>` element.\n\n  `var x = svgImageElement.x;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/x`"}, set-y! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 160, :column 7, :end-line 160, :end-column 13, :arglists (quote ([this val])), :doc "Property.\n\n  The y read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the y attribute of\n  given `web.<image>` element.\n\n  `var y = svgImageElement.y;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/y`"}, :name svg.SVGImageElement/set-y!, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 13, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The y read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the y attribute of\n  given `web.<image>` element.\n\n  `var y = svgImageElement.y;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/y`"}, set-width! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 108, :column 7, :end-line 108, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The width read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the width attribute\n  the given `web.<image>` element.\n\n  `var width = svgImageElement.width;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/width`"}, :name svg.SVGImageElement/set-width!, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The width read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the width attribute\n  the given `web.<image>` element.\n\n  `var width = svgImageElement.width;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/width`"}, height {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 43, :column 7, :end-line 43, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The height read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the height attribute\n  the given `web.<image>` element.\n\n  `var height = svgImageElement.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/height`"}, :name svg.SVGImageElement/height, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The height read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the height attribute\n  the given `web.<image>` element.\n\n  `var height = svgImageElement.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/height`"}, decode {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 5, :column 7, :end-line 5, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The decode() method of the `svg.SVGImageElement` interface initiates\n  decoding of an image, returning a `web.Promise` that\n\n  `var promise = svgImageElement.decode();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/decode`"}, :name svg.SVGImageElement/decode, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The decode() method of the `svg.SVGImageElement` interface initiates\n  decoding of an image, returning a `web.Promise` that\n\n  `var promise = svgImageElement.decode();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/decode`"}, y {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 147, :column 7, :end-line 147, :end-column 8, :arglists (quote ([this])), :doc "Property.\n\n  The y read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the y attribute of\n  given `web.<image>` element.\n\n  `var y = svgImageElement.y;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/y`"}, :name svg.SVGImageElement/y, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 8, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The y read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the y attribute of\n  given `web.<image>` element.\n\n  `var y = svgImageElement.y;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/y`"}, set-decoding! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 30, :column 7, :end-line 30, :end-column 20, :arglists (quote ([this val])), :doc "Property.\n\n  The decoding property of the `svg.SVGImageElement` interface\n  a hint given to the browser on how it should decode the image.\n\n  `var refStr = SVGImageElement.decoding\n  SVGImageElement.decoding = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/decoding`"}, :name svg.SVGImageElement/set-decoding!, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 20, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The decoding property of the `svg.SVGImageElement` interface\n  a hint given to the browser on how it should decode the image.\n\n  `var refStr = SVGImageElement.decoding\n  SVGImageElement.decoding = refStr;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/decoding`"}, set-height! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 56, :column 7, :end-line 56, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The height read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the height attribute\n  the given `web.<image>` element.\n\n  `var height = svgImageElement.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/height`"}, :name svg.SVGImageElement/set-height!, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The height read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the height attribute\n  the given `web.<image>` element.\n\n  `var height = svgImageElement.height`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/height`"}, preserve-aspect-ratio {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 69, :column 7, :end-line 69, :end-column 28, :arglists (quote ([this])), :doc "Property.\n\n  The preserveAspectRatio read-only property of the `svg.SVGImageElement`\n  returns an `svg.SVGAnimatedPreserveAspectRatio` corresponding\n  the preserveAspectRatio attribute of the given `web.<image>`\n\n  `var svgAnimatedPreerveAspectRatio = svgImageElement.preserveAspectRatio;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/preserveAspectRatio`"}, :name svg.SVGImageElement/preserve-aspect-ratio, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 28, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The preserveAspectRatio read-only property of the `svg.SVGImageElement`\n  returns an `svg.SVGAnimatedPreserveAspectRatio` corresponding\n  the preserveAspectRatio attribute of the given `web.<image>`\n\n  `var svgAnimatedPreerveAspectRatio = svgImageElement.preserveAspectRatio;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/preserveAspectRatio`"}, width {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 95, :column 7, :end-line 95, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The width read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the width attribute\n  the given `web.<image>` element.\n\n  `var width = svgImageElement.width;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/width`"}, :name svg.SVGImageElement/width, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The width read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the width attribute\n  the given `web.<image>` element.\n\n  `var width = svgImageElement.width;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/width`"}, set-preserve-aspect-ratio! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 82, :column 7, :end-line 82, :end-column 33, :arglists (quote ([this val])), :doc "Property.\n\n  The preserveAspectRatio read-only property of the `svg.SVGImageElement`\n  returns an `svg.SVGAnimatedPreserveAspectRatio` corresponding\n  the preserveAspectRatio attribute of the given `web.<image>`\n\n  `var svgAnimatedPreerveAspectRatio = svgImageElement.preserveAspectRatio;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/preserveAspectRatio`"}, :name svg.SVGImageElement/set-preserve-aspect-ratio!, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 33, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The preserveAspectRatio read-only property of the `svg.SVGImageElement`\n  returns an `svg.SVGAnimatedPreserveAspectRatio` corresponding\n  the preserveAspectRatio attribute of the given `web.<image>`\n\n  `var svgAnimatedPreerveAspectRatio = svgImageElement.preserveAspectRatio;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/preserveAspectRatio`"}, set-x! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGImageElement.cljs", :line 134, :column 7, :end-line 134, :end-column 13, :arglists (quote ([this val])), :doc "Property.\n\n  The x read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the x attribute of\n  given `web.<image>` element.\n\n  `var x = svgImageElement.x;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/x`"}, :name svg.SVGImageElement/set-x!, :variadic false, :file "src/svg/SVGImageElement.cljs", :end-column 13, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The x read-only property of the `svg.SVGImageElement` interface\n  an `svg.SVGAnimatedLength` corresponding to the x attribute of\n  given `web.<image>` element.\n\n  `var x = svgImageElement.x;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGImageElement/x`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SVGImageElement interface corresponds to the `web.<image>`"}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name svg.SVGGeometryElement, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-point-at-length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGGeometryElement.cljs", :line 7, :column 7, :end-line 7, :end-column 26, :arglists (quote ([this & args])), :doc "Method.\n\n  The SVGGeometryElement.getPointAtLength() method returns the\n  at a given distance along the path.\n\n  `DOMPoint someElement.getPointAtLength(float distance);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/getPointAtLength`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name svg.SVGGeometryElement/get-point-at-length, :variadic true, :file "src/svg/SVGGeometryElement.cljs", :end-column 26, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The SVGGeometryElement.getPointAtLength() method returns the\n  at a given distance along the path.\n\n  `DOMPoint someElement.getPointAtLength(float distance);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/getPointAtLength`"}, get-total-length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGGeometryElement.cljs", :line 19, :column 7, :end-line 19, :end-column 23, :arglists (quote ([this])), :doc "Method.\n\n  The SVGGeometryElement.getTotalLength() method returns the user\n  computed value for the total length of the path in user units.\n\n  `float someElement.getTotalLength();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/getTotalLength`"}, :name svg.SVGGeometryElement/get-total-length, :variadic false, :file "src/svg/SVGGeometryElement.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The SVGGeometryElement.getTotalLength() method returns the user\n  computed value for the total length of the path in user units.\n\n  `float someElement.getTotalLength();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/getTotalLength`"}, is-point-in-fill {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGGeometryElement.cljs", :line 31, :column 7, :end-line 31, :end-column 23, :arglists (quote ([this & args])), :doc "Method.\n\n  The SVGGeometryElement.isPointInFill() method determines whether\n  given point is within the fill shape of an element. Normal hit\n  rules apply; the value of the `web.pointer-events` property on\n  element determines whether a point is considered to be within\n  fill. The point argument is interpreted as a point in the local\n  system of the element.\n\n  `boolean someElement.isPointInFill(DOMPointInit point);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/isPointInFill`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name svg.SVGGeometryElement/is-point-in-fill, :variadic true, :file "src/svg/SVGGeometryElement.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The SVGGeometryElement.isPointInFill() method determines whether\n  given point is within the fill shape of an element. Normal hit\n  rules apply; the value of the `web.pointer-events` property on\n  element determines whether a point is considered to be within\n  fill. The point argument is interpreted as a point in the local\n  system of the element.\n\n  `boolean someElement.isPointInFill(DOMPointInit point);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/isPointInFill`"}, is-point-in-stroke {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGGeometryElement.cljs", :line 47, :column 7, :end-line 47, :end-column 25, :arglists (quote ([this & args])), :doc "Method.\n\n  The SVGGeometryElement.isPointInStroke() method determines whether\n  given point is within the stroke shape of an element. Normal\n  testing rules apply; the value of the `web.pointer-events` property\n  the element determines whether a point is considered to be within\n  stroke. The point argument is interpreted as a point in the local\n  system of the element.\n\n  `boolean someElement.isPointInStroke(DOMPointInit point);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/isPointInStroke`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name svg.SVGGeometryElement/is-point-in-stroke, :variadic true, :file "src/svg/SVGGeometryElement.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The SVGGeometryElement.isPointInStroke() method determines whether\n  given point is within the stroke shape of an element. Normal\n  testing rules apply; the value of the `web.pointer-events` property\n  the element determines whether a point is considered to be within\n  stroke. The point argument is interpreted as a point in the local\n  system of the element.\n\n  `boolean someElement.isPointInStroke(DOMPointInit point);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/isPointInStroke`"}, path-length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGGeometryElement.cljs", :line 63, :column 7, :end-line 63, :end-column 18, :arglists (quote ([this])), :doc "Property.\n\n  The SVGGeometryElement.pathLength property reflects the pathLength\n  and returns the total length of the path, in user units.\n\n  `var pathLength = someElement.pathLength;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/pathLength`"}, :name svg.SVGGeometryElement/path-length, :variadic false, :file "src/svg/SVGGeometryElement.cljs", :end-column 18, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The SVGGeometryElement.pathLength property reflects the pathLength\n  and returns the total length of the path, in user units.\n\n  `var pathLength = someElement.pathLength;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/pathLength`"}, set-path-length! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/svg/SVGGeometryElement.cljs", :line 75, :column 7, :end-line 75, :end-column 23, :arglists (quote ([this val])), :doc "Property.\n\n  The SVGGeometryElement.pathLength property reflects the pathLength\n  and returns the total length of the path, in user units.\n\n  `var pathLength = someElement.pathLength;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/pathLength`"}, :name svg.SVGGeometryElement/set-path-length!, :variadic false, :file "src/svg/SVGGeometryElement.cljs", :end-column 23, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The SVGGeometryElement.pathLength property reflects the pathLength\n  and returns the total length of the path, in user units.\n\n  `var pathLength = someElement.pathLength;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/SVGGeometryElement/pathLength`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The SVGGeometryElement interface represents SVG elements whose\n  is defined by geometry with an equivalent path, and which can\n  filled and stroked. This includes paths and the basic shapes."}
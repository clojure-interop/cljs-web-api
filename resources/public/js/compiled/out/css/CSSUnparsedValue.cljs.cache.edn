{:rename-macros {}, :renames {}, :externs {CSSUnparsedValue {}}, :use-macros {}, :excludes #{keys}, :name css.CSSUnparsedValue, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {constructor {:name css.CSSUnparsedValue/constructor, :file "src/css/CSSUnparsedValue.cljs", :line 7, :column 1, :end-line 7, :end-column 17, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 7, :column 6, :end-line 7, :end-column 17}, :doc "Constructor.\n\n  The CSSUnparsedValue() constructor creates a new `css.CSSUnparsedValue` object which represents property values that reference custom properties.\n\n  members\n  An array whose values must be either a `web.USVString` or a `css.CSSVariableReferenceValue`.\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/CSSUnparsedValue`", :tag js}, entries {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 18, :column 7, :end-line 18, :end-column 14, :arglists (quote ([this obj])), :doc "Method.\n\n  The CSSUnparsedValue.entries() method returns an array of a given\n  own enumerable property [key, value] pairs in the same order\n  that provided by a `web.for...in` loop (the difference being\n  a for-in loop enumerates properties in the prototype chain as\n\n  `CSSUnparsedValue.entries(obj)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/entries`"}, :name css.CSSUnparsedValue/entries, :variadic false, :file "src/css/CSSUnparsedValue.cljs", :end-column 14, :method-params ([this obj]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this obj])), :doc "Method.\n\n  The CSSUnparsedValue.entries() method returns an array of a given\n  own enumerable property [key, value] pairs in the same order\n  that provided by a `web.for...in` loop (the difference being\n  a for-in loop enumerates properties in the prototype chain as\n\n  `CSSUnparsedValue.entries(obj)`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/entries`"}, for-each {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([this & args])), :doc "Method.\n\n  The CSSUnparsedValue.forEach() method executes a provided function\n  for each element of the `css.CSSUnparsedValue`.\n\n  `CSSUnparsedValue.forEach(function callback(currentValue[, index[, array]]) {\n  // your iterator\n  }[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/forEach`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name css.CSSUnparsedValue/for-each, :variadic true, :file "src/css/CSSUnparsedValue.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The CSSUnparsedValue.forEach() method executes a provided function\n  for each element of the `css.CSSUnparsedValue`.\n\n  `CSSUnparsedValue.forEach(function callback(currentValue[, index[, array]]) {\n  // your iterator\n  }[, thisArg]);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/forEach`"}, keys {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 46, :column 7, :end-line 46, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The CSSUnparsedValue.keys() method returns a new Array Iterator\n  that contains the keys for each index in the array.\n\n  `CSSUnparsedValue.keys()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/keys`"}, :name css.CSSUnparsedValue/keys, :variadic false, :file "src/css/CSSUnparsedValue.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The CSSUnparsedValue.keys() method returns a new Array Iterator\n  that contains the keys for each index in the array.\n\n  `CSSUnparsedValue.keys()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/keys`"}, values {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 58, :column 7, :end-line 58, :end-column 13, :arglists (quote ([this])), :doc "Method.\n\n  The CSSUnparsedValue.values() method returns a new Array Iterator\n  that contains the values for each index in the CSSUnparsedValue\n\n  `CSSUnparsedValue.values()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/values`"}, :name css.CSSUnparsedValue/values, :variadic false, :file "src/css/CSSUnparsedValue.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The CSSUnparsedValue.values() method returns a new Array Iterator\n  that contains the values for each index in the CSSUnparsedValue\n\n  `CSSUnparsedValue.values()`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/values`"}, length {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 70, :column 7, :end-line 70, :end-column 13, :arglists (quote ([this])), :doc "Property.\n\n  The length read-only property of the `css.CSSUnparsedValue` interface\n  the number of items in the object.\n\n  `var length = CSSUnparsedValue.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/length`"}, :name css.CSSUnparsedValue/length, :variadic false, :file "src/css/CSSUnparsedValue.cljs", :end-column 13, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The length read-only property of the `css.CSSUnparsedValue` interface\n  the number of items in the object.\n\n  `var length = CSSUnparsedValue.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/length`"}, set-length! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSUnparsedValue.cljs", :line 82, :column 7, :end-line 82, :end-column 18, :arglists (quote ([this val])), :doc "Property.\n\n  The length read-only property of the `css.CSSUnparsedValue` interface\n  the number of items in the object.\n\n  `var length = CSSUnparsedValue.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/length`"}, :name css.CSSUnparsedValue/set-length!, :variadic false, :file "src/css/CSSUnparsedValue.cljs", :end-column 18, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The length read-only property of the `css.CSSUnparsedValue` interface\n  the number of items in the object.\n\n  `var length = CSSUnparsedValue.length;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSUnparsedValue/length`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The CSSUnparsedValue interface of the CSS Typed Object Model\n  represents property values that reference custom properties.\n  consists of a list of string fragments and variable references."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{min type max}, :name css.CSSNumericValue, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {add {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 6, :column 7, :end-line 6, :end-column 10, :arglists (quote ([this & args])), :doc "Method.\n\n  The add() method of the `css.CSSNumericValue` interface adds\n  supplied number to the CSSNumericValue.\n\n  `var cssMathSum = CSSNumericValue.add(double | CSSNumericValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/add`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name css.CSSNumericValue/add, :variadic true, :file "src/css/CSSNumericValue.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The add() method of the `css.CSSNumericValue` interface adds\n  supplied number to the CSSNumericValue.\n\n  `var cssMathSum = CSSNumericValue.add(double | CSSNumericValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/add`"}, sum {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 107, :column 7, :end-line 107, :end-column 10, :arglists (quote ([this number])), :doc "Method.\n\n  The sub() method of the `css.CSSNumericValue` interface subtracts\n  supplied number from the CSSNumericValue.\n\n  `var cssMathSum = CSSNumericValue.sub(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/sum`"}, :name css.CSSNumericValue/sum, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 10, :method-params ([this number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this number])), :doc "Method.\n\n  The sub() method of the `css.CSSNumericValue` interface subtracts\n  supplied number from the CSSNumericValue.\n\n  `var cssMathSum = CSSNumericValue.sub(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/sum`"}, to {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 119, :column 7, :end-line 119, :end-column 9, :arglists (quote ([this unit])), :doc "Method.\n\n  The to() method of the `css.CSSNumericValue` interface converts\n  numberic value from one unit to another.\n\n  `var cssUnitValue = CSSNumericVAlue.to(unit);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/to`"}, :name css.CSSNumericValue/to, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 9, :method-params ([this unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this unit])), :doc "Method.\n\n  The to() method of the `css.CSSNumericValue` interface converts\n  numberic value from one unit to another.\n\n  `var cssUnitValue = CSSNumericVAlue.to(unit);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/to`"}, min {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 58, :column 7, :end-line 58, :end-column 10, :arglists (quote ([this & args])), :doc "Method.\n\n  The min() method of the `css.CSSNumericValue` interface returns\n  lowest value from among those values passed. The passed values\n  be of the same type.\n\n  `var cssUnitValue = CSSNumericValue.min(number1 ... numbern);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/min`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name css.CSSNumericValue/min, :variadic true, :file "src/css/CSSNumericValue.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The min() method of the `css.CSSNumericValue` interface returns\n  lowest value from among those values passed. The passed values\n  be of the same type.\n\n  `var cssUnitValue = CSSNumericValue.min(number1 ... numbern);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/min`"}, sub {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 95, :column 7, :end-line 95, :end-column 10, :arglists (quote ([this number])), :doc "Method.\n\n  The sub() method of the `css.CSSNumericValue` interface subtracts\n  supplied number from the CSSNumericValue.\n\n  `var cssMathSum = CSSNumericValue.sub(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/sub`"}, :name css.CSSNumericValue/sub, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 10, :method-params ([this number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this number])), :doc "Method.\n\n  The sub() method of the `css.CSSNumericValue` interface subtracts\n  supplied number from the CSSNumericValue.\n\n  `var cssMathSum = CSSNumericValue.sub(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/sub`"}, type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 144, :column 7, :end-line 144, :end-column 11, :arglists (quote ([this])), :doc "Method.\n\n  The type() method of the `css.CSSNumericValue` interface returns\n  type of CSSNumericValue, one of angle, flex, frequency, length,\n  percent, percentHint, or time.\n\n  `var cssNumericType = CSSNumericValue.type();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/type`"}, :name css.CSSNumericValue/type, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 11, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The type() method of the `css.CSSNumericValue` interface returns\n  type of CSSNumericValue, one of angle, flex, frequency, length,\n  percent, percentHint, or time.\n\n  `var cssNumericType = CSSNumericValue.type();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/type`"}, equals {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 30, :column 7, :end-line 30, :end-column 13, :arglists (quote ([this number])), :doc "Method.\n\n  The equals() method of the `css.CSSNumericValue` interface returns\n  boolean indicating whether the passed value are strictly equal.\n  return a value of true, all passed values must be of the same\n  and value and must be in the same order. This allows structural\n  to be tested quickly.\n\n  `var boolean = CSSNumericValue.equals(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/equals`"}, :name css.CSSNumericValue/equals, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 13, :method-params ([this number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this number])), :doc "Method.\n\n  The equals() method of the `css.CSSNumericValue` interface returns\n  boolean indicating whether the passed value are strictly equal.\n  return a value of true, all passed values must be of the same\n  and value and must be in the same order. This allows structural\n  to be tested quickly.\n\n  `var boolean = CSSNumericValue.equals(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/equals`"}, div {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 18, :column 7, :end-line 18, :end-column 10, :arglists (quote ([this number])), :doc "Method.\n\n  The div() method of the `css.CSSNumericValue` interface divides\n  CSSNumericValue by the supplied value.\n\n  `var cssNumericValue = CSSNumericValue.div(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/div`"}, :name css.CSSNumericValue/div, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 10, :method-params ([this number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this number])), :doc "Method.\n\n  The div() method of the `css.CSSNumericValue` interface divides\n  CSSNumericValue by the supplied value.\n\n  `var cssNumericValue = CSSNumericValue.div(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/div`"}, mul {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 71, :column 7, :end-line 71, :end-column 10, :arglists (quote ([this number])), :doc "Method.\n\n  The mul() method of the `css.CSSNumericValue` interface multiplies\n  CSSNumericValue by the supplied value.\n\n  `var cssMathProduct = CSSNumericValue.mul(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/mul`"}, :name css.CSSNumericValue/mul, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 10, :method-params ([this number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this number])), :doc "Method.\n\n  The mul() method of the `css.CSSNumericValue` interface multiplies\n  CSSNumericValue by the supplied value.\n\n  `var cssMathProduct = CSSNumericValue.mul(number);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/mul`"}, max {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 45, :column 7, :end-line 45, :end-column 10, :arglists (quote ([this & args])), :doc "Method.\n\n  The max() method of the `css.CSSNumericValue` interface returns\n  highest value from among the values passed. The passed values\n  be of the same type.\n\n  `var cssUnitValue = CSSNumericValue.man(number1 ... numbern);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/max`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name css.CSSNumericValue/max, :variadic true, :file "src/css/CSSNumericValue.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The max() method of the `css.CSSNumericValue` interface returns\n  highest value from among the values passed. The passed values\n  be of the same type.\n\n  `var cssUnitValue = CSSNumericValue.man(number1 ... numbern);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/max`"}, parse {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 83, :column 7, :end-line 83, :end-column 12, :arglists (quote ([this css-text])), :doc "Method.\n\n  The parse() method of the `css.CSSNumericValue` interface converts\n  value string into an object whose members are value and the units.\n\n  `var cssNumericValue = CSSNumericValue.parse(cssText);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/parse`"}, :name css.CSSNumericValue/parse, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 12, :method-params ([this css-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this css-text])), :doc "Method.\n\n  The parse() method of the `css.CSSNumericValue` interface converts\n  value string into an object whose members are value and the units.\n\n  `var cssNumericValue = CSSNumericValue.parse(cssText);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/parse`"}, to-sum {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSNumericValue.cljs", :line 131, :column 7, :end-line 131, :end-column 13, :arglists (quote ([this units])), :doc "Method.\n\n  The toSum() method of the `css.CSSNumericValue` interface converts\n  object's value to a `css.CSSMathSum` object to values of the\n  unit.\n\n  `var cssMathSum = CSSNumericValue.toSum(units);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/toSum`"}, :name css.CSSNumericValue/to-sum, :variadic false, :file "src/css/CSSNumericValue.cljs", :end-column 13, :method-params ([this units]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this units])), :doc "Method.\n\n  The toSum() method of the `css.CSSNumericValue` interface converts\n  object's value to a `css.CSSMathSum` object to values of the\n  unit.\n\n  `var cssMathSum = CSSNumericValue.toSum(units);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSNumericValue/toSum`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The CSSNumericValue interface of the CSS Typed Object Model API\n  operations that all numeric values can perform."}
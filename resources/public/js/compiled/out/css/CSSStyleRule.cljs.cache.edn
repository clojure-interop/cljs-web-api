{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name css.CSSStyleRule, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {style {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSStyleRule.cljs", :line 6, :column 7, :end-line 6, :end-column 12, :arglists (quote ([this])), :doc "Property.\n\n  The CSSRule.style property is the `css.CSSStyleDeclaration` interface\n  the declaration block of the `css.CSSRule`.\n\n  `styleObj = cssRule.style`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/style`"}, :name css.CSSStyleRule/style, :variadic false, :file "src/css/CSSStyleRule.cljs", :end-column 12, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The CSSRule.style property is the `css.CSSStyleDeclaration` interface\n  the declaration block of the `css.CSSRule`.\n\n  `styleObj = cssRule.style`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/style`"}, set-style! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSStyleRule.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([this val])), :doc "Property.\n\n  The CSSRule.style property is the `css.CSSStyleDeclaration` interface\n  the declaration block of the `css.CSSRule`.\n\n  `styleObj = cssRule.style`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/style`"}, :name css.CSSStyleRule/set-style!, :variadic false, :file "src/css/CSSStyleRule.cljs", :end-column 17, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The CSSRule.style property is the `css.CSSStyleDeclaration` interface\n  the declaration block of the `css.CSSRule`.\n\n  `styleObj = cssRule.style`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/style`"}, selector-text {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSStyleRule.cljs", :line 30, :column 7, :end-line 30, :end-column 20, :arglists (quote ([this])), :doc "Property.\n\n  The CSSRule.selectorText property gets the textual representation\n  the selector for the rule set. This is readonly in some browsers;\n  set stylesheet rules dynamically cross-browser, see Using dynamic\n  information.\n\n  `string = cssRule.selectorText`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/selectorText`"}, :name css.CSSStyleRule/selector-text, :variadic false, :file "src/css/CSSStyleRule.cljs", :end-column 20, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The CSSRule.selectorText property gets the textual representation\n  the selector for the rule set. This is readonly in some browsers;\n  set stylesheet rules dynamically cross-browser, see Using dynamic\n  information.\n\n  `string = cssRule.selectorText`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/selectorText`"}, set-selector-text! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSStyleRule.cljs", :line 44, :column 7, :end-line 44, :end-column 25, :arglists (quote ([this val])), :doc "Property.\n\n  The CSSRule.selectorText property gets the textual representation\n  the selector for the rule set. This is readonly in some browsers;\n  set stylesheet rules dynamically cross-browser, see Using dynamic\n  information.\n\n  `string = cssRule.selectorText`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/selectorText`"}, :name css.CSSStyleRule/set-selector-text!, :variadic false, :file "src/css/CSSStyleRule.cljs", :end-column 25, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The CSSRule.selectorText property gets the textual representation\n  the selector for the rule set. This is readonly in some browsers;\n  set stylesheet rules dynamically cross-browser, see Using dynamic\n  information.\n\n  `string = cssRule.selectorText`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/selectorText`"}, style-map {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSStyleRule.cljs", :line 58, :column 7, :end-line 58, :end-column 16, :arglists (quote ([this])), :doc "Property.\n\n  The styleMap read-only property of the `css.CSSStyleRule` interface\n  a `web.StylePropertyMap` object which provides access the rule's\n  pairs.\n\n  `var stylePropertyMap = CSSStyleRule.styleMap;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/styleMap`"}, :name css.CSSStyleRule/style-map, :variadic false, :file "src/css/CSSStyleRule.cljs", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The styleMap read-only property of the `css.CSSStyleRule` interface\n  a `web.StylePropertyMap` object which provides access the rule's\n  pairs.\n\n  `var stylePropertyMap = CSSStyleRule.styleMap;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/styleMap`"}, set-style-map! {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSStyleRule.cljs", :line 71, :column 7, :end-line 71, :end-column 21, :arglists (quote ([this val])), :doc "Property.\n\n  The styleMap read-only property of the `css.CSSStyleRule` interface\n  a `web.StylePropertyMap` object which provides access the rule's\n  pairs.\n\n  `var stylePropertyMap = CSSStyleRule.styleMap;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/styleMap`"}, :name css.CSSStyleRule/set-style-map!, :variadic false, :file "src/css/CSSStyleRule.cljs", :end-column 21, :method-params ([this val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this val])), :doc "Property.\n\n  The styleMap read-only property of the `css.CSSStyleRule` interface\n  a `web.StylePropertyMap` object which provides access the rule's\n  pairs.\n\n  `var stylePropertyMap = CSSStyleRule.styleMap;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleRule/styleMap`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "CSSStyleRule represents a single CSS style rule. It implements\n  `css.CSSRule` interface with a type value of 1 (CSSRule.STYLE_RULE)."}
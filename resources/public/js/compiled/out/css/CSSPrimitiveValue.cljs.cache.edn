{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name css.CSSPrimitiveValue, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {get-counter-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 6, :column 7, :end-line 6, :end-column 24, :arglists (quote ([this])), :doc "Method.\n\n  The getCounterValue() method of the `css.CSSPrimitiveValue` interface\n  used to get the counter value. If this CSS value doesn't contain\n  counter value, a `dom.DOMException` is raised. Modification to\n  corresponding style property can be achieved using the `web.Counter`\n\n  `var counterValue = cssPrimitiveValue.getCounterValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getCounterValue`"}, :name css.CSSPrimitiveValue/get-counter-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 24, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getCounterValue() method of the `css.CSSPrimitiveValue` interface\n  used to get the counter value. If this CSS value doesn't contain\n  counter value, a `dom.DOMException` is raised. Modification to\n  corresponding style property can be achieved using the `web.Counter`\n\n  `var counterValue = cssPrimitiveValue.getCounterValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getCounterValue`"}, get-float-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 20, :column 7, :end-line 20, :end-column 22, :arglists (quote ([this unit])), :doc "Method.\n\n  The getFloatValue() method of the `css.CSSPrimitiveValue` interface\n  used to get a float value in a specified unit. If this CSS value\n  contain a float value or can't be converted into the specified\n  a `dom.DOMException` is raised.\n\n  `var floatValue = cssPrimitiveValue.getFloatValue(unit);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getFloatValue`"}, :name css.CSSPrimitiveValue/get-float-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 22, :method-params ([this unit]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this unit])), :doc "Method.\n\n  The getFloatValue() method of the `css.CSSPrimitiveValue` interface\n  used to get a float value in a specified unit. If this CSS value\n  contain a float value or can't be converted into the specified\n  a `dom.DOMException` is raised.\n\n  `var floatValue = cssPrimitiveValue.getFloatValue(unit);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getFloatValue`"}, get-rect-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 34, :column 7, :end-line 34, :end-column 21, :arglists (quote ([this])), :doc "Method.\n\n  The getRectValue() method of the `css.CSSPrimitiveValue` interface\n  used to get a rect value. If this CSS value doesn't contain a\n  value, a `dom.DOMException` is raised. Modification to the corresponding\n  property can be achieved using the `web.Rect` interface.\n\n  `var rectValue = cssPrimitiveValue.getRectValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getRectValue`"}, :name css.CSSPrimitiveValue/get-rect-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getRectValue() method of the `css.CSSPrimitiveValue` interface\n  used to get a rect value. If this CSS value doesn't contain a\n  value, a `dom.DOMException` is raised. Modification to the corresponding\n  property can be achieved using the `web.Rect` interface.\n\n  `var rectValue = cssPrimitiveValue.getRectValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getRectValue`"}, get-rgb-color-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 48, :column 7, :end-line 48, :end-column 26, :arglists (quote ([this])), :doc "Method.\n\n  The getRGBColorValue() method of the `css.CSSPrimitiveValue`\n  is used to get an RGB color value. If this CSS value doesn't\n  a RGB color value, a `dom.DOMException` is raised. Modification\n  the corresponding style property can be achieved using the `web.RGBColor`\n\n  `var rgbColorValue = cssPrimitiveValue.getRGBColorValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getRGBColorValue`"}, :name css.CSSPrimitiveValue/get-rgb-color-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 26, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getRGBColorValue() method of the `css.CSSPrimitiveValue`\n  is used to get an RGB color value. If this CSS value doesn't\n  a RGB color value, a `dom.DOMException` is raised. Modification\n  the corresponding style property can be achieved using the `web.RGBColor`\n\n  `var rgbColorValue = cssPrimitiveValue.getRGBColorValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getRGBColorValue`"}, get-string-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 62, :column 7, :end-line 62, :end-column 23, :arglists (quote ([this])), :doc "Method.\n\n  The getStringValue() method of the `css.CSSPrimitiveValue` interface\n  used to get a string value. If this CSS value doesn't contain\n  string value, a `dom.DOMException` is raised.\n\n  `var stringValue = cssPrimitiveValue.getStringValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getStringValue`"}, :name css.CSSPrimitiveValue/get-string-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 23, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Method.\n\n  The getStringValue() method of the `css.CSSPrimitiveValue` interface\n  used to get a string value. If this CSS value doesn't contain\n  string value, a `dom.DOMException` is raised.\n\n  `var stringValue = cssPrimitiveValue.getStringValue();`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/getStringValue`"}, set-float-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 75, :column 7, :end-line 75, :end-column 22, :arglists (quote ([this unit-type float-value])), :doc "Method.\n\n  The setFloatValue() method of the `css.CSSPrimitiveValue` interface\n  used to set a float value. If the property attached to this value\n  accept the specified unit or the float value, the value will\n  unchanged and a `dom.DOMException` will be raised.\n\n  `cssPrimitiveValue.setFloatValue(unitType, floatValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/setFloatValue`"}, :name css.CSSPrimitiveValue/set-float-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 22, :method-params ([this unit-type float-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this unit-type float-value])), :doc "Method.\n\n  The setFloatValue() method of the `css.CSSPrimitiveValue` interface\n  used to set a float value. If the property attached to this value\n  accept the specified unit or the float value, the value will\n  unchanged and a `dom.DOMException` will be raised.\n\n  `cssPrimitiveValue.setFloatValue(unitType, floatValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/setFloatValue`"}, set-string-value {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 89, :column 7, :end-line 89, :end-column 23, :arglists (quote ([this string-type string-value])), :doc "Method.\n\n  The setStringValue() method of the `css.CSSPrimitiveValue` interface\n  used to set a string value. If the property attached to this\n  can't accept the specified unit or the string value, the value\n  be unchanged and a `dom.DOMException` will be raised.\n\n  `cssPrimitiveValue.setStringValue(stringType, stringValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/setStringValue`"}, :name css.CSSPrimitiveValue/set-string-value, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 23, :method-params ([this string-type string-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 3, :fn-var true, :arglists (quote ([this string-type string-value])), :doc "Method.\n\n  The setStringValue() method of the `css.CSSPrimitiveValue` interface\n  used to set a string value. If the property attached to this\n  can't accept the specified unit or the string value, the value\n  be unchanged and a `dom.DOMException` will be raised.\n\n  `cssPrimitiveValue.setStringValue(stringType, stringValue);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/setStringValue`"}, primitive-type {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/css/CSSPrimitiveValue.cljs", :line 103, :column 7, :end-line 103, :end-column 21, :arglists (quote ([this])), :doc "Property.\n\n  The primitiveType read-only property of the `css.CSSPrimitiveValue`\n  represents the type of a CSS value.\n\n  `type = cssPrimitiveValue.primitiveType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/primitiveType`"}, :name css.CSSPrimitiveValue/primitive-type, :variadic false, :file "src/css/CSSPrimitiveValue.cljs", :end-column 21, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc "Property.\n\n  The primitiveType read-only property of the `css.CSSPrimitiveValue`\n  represents the type of a CSS value.\n\n  `type = cssPrimitiveValue.primitiveType;`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/CSSPrimitiveValue/primitiveType`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The CSSPrimitiveValue interface derives from the `css.CSSValue`\n  and represents the current computed value of a CSS property."}
{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name gl.WEBGL_draw_buffers, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {draw-buffers-webgl {:protocol-inline nil, :meta {:file "/Users/eugenepotapenko/Projects/clojure-interop/cljs-web-api/src/gl/WEBGL_draw_buffers.cljs", :line 7, :column 7, :end-line 7, :end-column 25, :arglists (quote ([this & args])), :doc "Method.\n\n  The WEBGL_draw_buffers.drawBuffersWEBGL() method is part of the\n  API and allows you to define the draw buffers to which all fragment\n  are written.\n\n  `void gl.getExtension('WEBGL_draw_buffers').drawBuffersWEBGL(buffers);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL`", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}}, :name gl.WEBGL_draw_buffers/draw-buffers-webgl, :variadic true, :file "src/gl/WEBGL_draw_buffers.cljs", :end-column 25, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this args)], :arglists ([this & args]), :arglists-meta (nil)}, :method-params [(this args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists ([this & args]), :doc "Method.\n\n  The WEBGL_draw_buffers.drawBuffersWEBGL() method is part of the\n  API and allows you to define the draw buffers to which all fragment\n  are written.\n\n  `void gl.getExtension('WEBGL_draw_buffers').drawBuffersWEBGL(buffers);`\n\n  See also: `https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_draw_buffers/drawBuffersWEBGL`"}}, :cljs.spec/registry-ref [], :require-macros nil, :doc "The WEBGL_draw_buffers extension is part of the WebGL API and\n  a fragment shader to write to several textures, which is useful\n  deferred shading, for example."}